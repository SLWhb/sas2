create or replace 
function            FN$MA_SMTEL_DPER_00(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_00' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека в течении дня' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
			INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
					AND SRC.MOBILE = APP.MOBILE
					--AND SRC.MOBILE = 9098391158
					AND SRC.REQUEST_ID = in_RID 
				  AND TRUNC(APP.REQ_DATE) =TRUNC(SRC.REQ_DATE) 
				  AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10   
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'             
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
 create or replace 
function            FN$MA_SMTEL_DPER_01(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_01' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека день назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                              AND TRUNC(APP.REQ_DATE) - 1 =TRUNC(SRC.REQ_DATE)
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
 create or replace 
function            FN$MA_SMTEL_DPER_02_06(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека  за период от 2 до 6 дней назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_02_06' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека за период от 2 до 6 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                             and trunc(app.req_date) between trunc(src.req_date) - 2 and trunc(src.req_date) - 6
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
 create or replace 
function            FN$MA_SMTEL_DPER_07_14(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека  за период от 7 до 14 дней назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_07_14' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека за период от 7 до 14 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                             and trunc(app.req_date) between trunc(src.req_date) - 7 and trunc(src.req_date) - 14
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SMTEL_DPER_15_30(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека  за период от 15 до 30 дней назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_15_30' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека за период от 15 до 30 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                             and trunc(app.req_date) between trunc(src.req_date) - 15 and trunc(src.req_date) - 30
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SMTEL_DPER_31_60(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека  за период от 31 до 60 дней назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_31_60' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека за период от 31 до 60 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                             and trunc(app.req_date) between trunc(src.req_date) - 31 and trunc(src.req_date) - 60
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SMTEL_DPER_60(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека, 3 и более раз за последние 60 дней (у разных заемщиков). Идентификацию проводить по ФИО+ДР или паспорту.
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_60' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у других '||COUNT(DISTINCT APP.PERSON_ID ) OVER(PARTITION BY SRC.MOBILE)|| ' заёмщиков , 3 и более раз за последние 60 дней (у разных заемщиков). Идентификацию проводить по ФИО+ДР или паспорту.' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
                    ,COUNT(DISTINCT APP.FIO||APP.DR||APP. PASSPORT ) OVER(PARTITION BY SRC.MOBILE) AS CNT_MOBILE 
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                              AND TRUNC(APP.REQ_DATE) >=TRUNC(SRC.REQ_DATE) - 60 
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10     
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'          
                )
                WHERE F_POS = 1
                AND CNT_MOBILE >= 3
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SMTEL_DPER_61_90(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека  за период от 61 до 90 дней назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SMTEL_DPER_61_90' AS TYPE_REL
                    ,'Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека за период от 61 до 90 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Мобильный телефон:'||SRC.MOBILE AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON (SRC.PASSPORT <> APP.PASSPORT OR  SRC.FIO||SRC.DR <> APP.FIO||APP.DR)
                  AND SRC.MOBILE = APP.MOBILE
                  --AND SRC.MOBILE = 9098391158
                  AND SRC.REQUEST_ID = in_RID
                                                                                             and trunc(app.req_date) between trunc(src.req_date) - 61 and trunc(src.req_date) - 90
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
AND
        NOT SRC.PASSPORT='-'AND NOT SRC.PASSPORT IS NULL AND NOT APP.PASSPORT='-'AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
        AND SRC.PERSON_ID <> APP.PERSON_ID
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL 
        AND TO_CHAR(SRC.MOBILE) LIKE '9%' AND LENGTH(SRC.MOBILE) >= 10       
        AND NOT MOD(SRC.MOBILE, 1000000)=0 AND NOT TO_CHAR(SRC.MOBILE) LIKE '%999999%'         
                )
                WHERE F_POS = 1
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(PERSON_ID, PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID, PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(PERSON_ID_REL, PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
create or replace 
function            FN$MA_SPAS_DPER_00(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
              FROM
                           (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_00' AS TYPE_REL
                    ,'Совпадает паспорт, отличается ФИО на '||SYS.UTL_MATCH.EDIT_DISTANCE(SRC.FIO,APP.FIO)||' сим./ДР, предыдущая заявка была оформлена в течении дня' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||SRC.PASSPORT AS INFO_EQ
                    ,'Фио+Др.:'||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Фио+Др.:'||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON SRC.PASSPORT = APP.PASSPORT
                                                                                              AND TRUNC(SRC.REQ_DATE) = TRUNC(APP.REQ_DATE)
                                                                                             AND SRC.REQUEST_ID = in_RID
                                                                                            AND (SRC.FIO ^= APP.FIO OR SRC.DR ^= APP.DR)
                                                                                                                AND SRC.PERSON_ID^=APP.PERSON_ID 
                                                                                                               AND APP.REQUEST_ID<SRC.REQUEST_ID
                AND NOT SRC.PASSPORT IS NULL AND NOT SRC.PASSPORT='-'    
               AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'                                                                                       
                           )TAB
           WHERE TAB.F_POS = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
FUNCTION            FN$MA_SPAS_DPER_01(V_REQUEST_ID IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR GET_FRAUD(IN_RID NUMBER) IS
SELECT *
              FROM
                           (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_01' AS TYPE_REL
                    ,'Совпадает паспорт, отличается ФИО на '||SYS.UTL_MATCH.EDIT_DISTANCE(SRC.FIO,APP.FIO)||' сим./ДР, предыдущая заявка была оформлена в течении дня' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||SRC.PASSPORT AS INFO_EQ
                    ,'Фио+Др.:'||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Фио+Др.:'||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC
                  INNER JOIN SFF.APPLICATIONS_FROD APP ON SRC.PASSPORT = APP.PASSPORT
                                                                                              AND TRUNC(SRC.REQ_DATE) - 1 = TRUNC(APP.REQ_DATE)  
                                                                                             AND SRC.REQUEST_ID = IN_RID
                                                                                            AND (SRC.FIO ^= APP.FIO OR SRC.DR ^= APP.DR)
                                                                                                                AND SRC.PERSON_ID^=APP.PERSON_ID 
                                                                                                                AND APP.REQUEST_ID<SRC.REQUEST_ID
AND NOT SRC.PASSPORT IS NULL AND NOT SRC.PASSPORT='-'    
               AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'                                                                                       
                           )TAB
           WHERE TAB.F_POS = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;           

  IN_FRAUD GET_FRAUD%ROWTYPE;
  FLAG_EXISTS_RID NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION;
  FRAUD_FLAG NUMBER;
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO FLAG_EXISTS_RID FROM DUAL 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=V_REQUEST_ID);
  IF FLAG_EXISTS_RID=0 THEN 
    FRAUD_FLAG := 9;
  END IF;
  
  OPEN GET_FRAUD(V_REQUEST_ID);
    LOOP 
    FETCH GET_FRAUD INTO IN_FRAUD;
        EXIT WHEN GET_FRAUD%NOTFOUND;

    IF (FRAUD_FLAG IS NULL) THEN 
      --фрод найден, возвращаем 1
      FRAUD_FLAG := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       IN_FRAUD.FROD_RULE_DATE, IN_FRAUD.REQUEST_ID, IN_FRAUD.PERSON_ID, IN_FRAUD.REQ_DATE,
               IN_FRAUD.FIO, IN_FRAUD.DR, IN_FRAUD.STATUS_ID, IN_FRAUD.SCORE_TREE_ROUTE_ID, IN_FRAUD.CREATED_GROUP_ID,
               IN_FRAUD.TYPE_REL, IN_FRAUD.TYPE_REL_DESC, IN_FRAUD.DAY_BETWEEN,
               IN_FRAUD.REQUEST_ID_REL, IN_FRAUD.PERSON_ID_REL, IN_FRAUD.REQ_DATE_REL,
               IN_FRAUD.FIO_REL, IN_FRAUD.DR_REL, IN_FRAUD.STATUS_ID_REL, IN_FRAUD.SCORE_TREE_ROUTE_ID_REL, IN_FRAUD.CREATED_GROUP_ID_REL,
               IN_FRAUD.INFO_EQ, IN_FRAUD.INFO_NEQ, IN_FRAUD.INFO_NEQ_REL, IN_FRAUD.F_POS);
  END LOOP;
  CLOSE GET_FRAUD;
  
  COMMIT;
  
  IF (FRAUD_FLAG IS NULL) THEN 
    FRAUD_FLAG := 0;
  END IF;
  
  RETURN FRAUD_FLAG;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_02_06(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_02_06' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 2 and trunc(src.req_date) - 6
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
                 --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;    

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  COMMIT;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_07_14(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_07_14' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 7 and trunc(src.req_date) - 14
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_15_30(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_15_90' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 15 and trunc(src.req_date) - 30
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  COMMIT;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_31_60(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_31_60' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 31 and trunc(src.req_date) - 60
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  COMMIT;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_61_90(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_61_90' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 61 and trunc(src.req_date) - 90
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
 COMMIT;
 
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            fn$ma_spas_dper_91_180(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is
select *
              from
                           (
select
                    sysdate as frod_rule_date
                    ,src.request_id
                    ,src.person_id
                    ,src.req_date
                    ,src.fio as fio
                    ,src.dr as dr
                    ,null as status_id
                    ,null as score_tree_route_id
                    ,null as created_group_id
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPAS_DPER_91_180' as type_rel
                    ,'Совпадает паспорт, отличается ФИО на '||sys.utl_match.edit_distance(src.fio,app.fio)||' сим./ДР, предыдущая заявка была оформлена в течении дня' as type_rel_desc
                    ,abs(round(src.req_date-app.req_date, 0)) as day_between
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,listagg(to_char(app.request_id),',') within group (order by src.request_id,app.person_id)
                    over(partition by src.request_id,app.person_id) request_id_rel
                    ,app.person_id person_id_rel
                    ,app.req_date as req_date_rel
                    ,app.fio as fio_rel, app.dr as dr_rel
                    , null as status_id_rel
                    , null as score_tree_route_id_rel
                    , null as created_group_id_rel
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'Паспорт:'||src.passport as info_eq
                    ,'Фио+Др.:'||src.fio||' '||src.dr as info_neq
                    ,'Фио+Др.:'||app.fio||' '||app.dr as info_neq_rel
                    ,row_number() over(partition by src.request_id,app.person_id 
                    order by src.request_id,app.person_id desc, app.req_date desc) as f_pos
  from
           sff.applications_frod src
                  inner join sff.applications_frod app on src.passport = app.passport
                                                                                              --and trunc(src.req_date) between trunc(app.req_date) - 2 and trunc(app.req_date) -  
                                                                                            and trunc(app.req_date) between trunc(src.req_date) - 91 and trunc(src.req_date) - 180
                                                                                            and src.request_id = in_rid
                                                                                            and (src.fio ^= app.fio or src.dr ^= app.dr)
                                                                                                                and src.person_id^=app.person_id 
                                                                                                                and app.request_id<src.request_id
               and not src.passport is null and not src.passport='-'    
               and not src.fio is null and not app.fio is null and not src.fio='-' and not app.fio='-'                                                                                       
                           )tab
           where tab.f_pos = 1
      --исключаем девичьи фамилии
      AND NOT (SUBSTR(FIO, INSTR(FIO,' '), 254 )=SUBSTR(FIO_REL, INSTR(FIO_REL,' '), 254 ) AND DR=DR_REL )
      -- исключение однофамильцев 
      AND NOT UTL_MATCH.EDIT_DISTANCE(SUBSTR(FIO, 1, INSTR(FIO,' ')-1 ), SUBSTR(FIO_REL, 1, INSTR(FIO_REL,' ')-1 ))<3
            --PostCheck: Модифицированная проверка на родственников
      AND NOT SFF.FN_IS_FAMILY_REL(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID, TAB.PERSON_ID_REL)=1 
      AND NOT SFF.FN_IS_FAMILY_CONT(TAB.PERSON_ID_REL, TAB.PERSON_ID)=1;

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  COMMIT;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
  
  
  create or replace 
function            FN$MA_SPER_00(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Мобильный телефон основного заявителя такой же, как мобильный телефон у другого человека, 3 и более раз за последние 60 дней (у разных заемщиков). Идентификацию проводить по ФИО+ДР или паспорту.
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_00' AS TYPE_REL
                    ,'Тот же основной заявитель в течении дня' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND TRUNC(APP.REQ_DATE) =TRUNC(SRC.REQ_DATE) 
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SPER_01(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_01' AS TYPE_REL
                    ,'Тот же основной заявитель день назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND TRUNC(APP.REQ_DATE) - 1  =TRUNC(SRC.REQ_DATE) 
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            FN$MA_SPER_02_06(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_02_06' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 2 до 6 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 2 and trunc(src.req_date) - 6
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            FN$MA_SPER_07_14(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_07_14' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 7 до 14 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 7 and trunc(src.req_date) - 14
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            FN$MA_SPER_15_30(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_15_30' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 15 до 30 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 15 and trunc(src.req_date) - 30
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  
  create or replace 
function            FN$MA_SPER_31_60(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_31_60' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 31 до 60 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 31 and trunc(src.req_date) - 60
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            FN$MA_SPER_61_90(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_61_90' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 61 до 90 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 61 and trunc(src.req_date) - 90
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            FN$MA_SPER_91_180(v_request_id IN NUMBER) RETURN NUMBER
  IS
-- ========================================================================
-- ==    ОПИСАНИЕ:      Тот же основной заявитель в течении дня
-- ========================================================================
-- ==    СОЗДАНИЕ:        29.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
CURSOR get_fraud(in_RID NUMBER) IS
SELECT *
  FROM 
                (
SELECT
                    SYSDATE AS FROD_RULE_DATE
                    ,SRC.REQUEST_ID
                    ,SRC.PERSON_ID
                    ,SRC.REQ_DATE
                    ,SRC.FIO AS FIO
                    ,SRC.DR AS DR
                    ,NULL AS STATUS_ID
                    ,NULL AS SCORE_TREE_ROUTE_ID
                    ,NULL AS CREATED_GROUP_ID
                    -- при необходимости переобзоначить Тип связи и его описание для сработавшего правила
                    --,'Паспорт1_ФиоДр_Ошиб' as TYPE_REL
                    ,'MA_SPER_91_180' AS TYPE_REL
                    ,'Тот же основной заявитель за период от 91 до 180 дней назад' AS TYPE_REL_DESC
                    ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) AS DAY_BETWEEN
                    /*,TO_CHAR(APP.REQUEST_ID) as REQUEST_ID_REL*/
                    ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID)
                    OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                    ,APP.PERSON_ID PERSON_ID_REL
                    ,APP.REQ_DATE AS REQ_DATE_REL
                    ,APP.FIO AS FIO_REL, APP.DR AS DR_REL
                    , NULL AS STATUS_ID_REL
                    , NULL AS SCORE_TREE_ROUTE_ID_REL
                    , NULL AS CREATED_GROUP_ID_REL
                    --INFO: для каждого правила переобозначить инфу в колонках INFO_EQ, INFO_NEQ, INFO_NEQ_REL
                    ,'ID клиента:'||SRC.PERSON_ID  AS INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                    ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                    ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) AS F_POS
  FROM
           SFF.APPLICATIONS_FROD SRC INNER JOIN SFF.APPLICATIONS_FROD APP ON
                   (SRC.PERSON_ID = APP.PERSON_ID OR SRC.PASSPORT = APP.PASSPORT or
                      (SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,1),regexp_substr(app.FIO,'[^ ]+',1,1))<= 2
                             and  SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,2),regexp_substr(app.FIO,'[^ ]+',1,2))<= 2
                                    and SYS.UTL_MATCH.EDIT_DISTANCE(regexp_substr(SRC.FIO,'[^ ]+',1,3),regexp_substr(app.FIO,'[^ ]+',1,3))<= 2))
                  --AND SRC.MOBILE = 9098391158
        AND SRC.REQUEST_ID = in_RID
        ----------------------------------------------------
        AND trunc(app.req_date) between trunc(src.req_date) - 91 and trunc(src.req_date) - 180
        ----------------------------------------------------
        AND APP.REQUEST_ID<SRC.REQUEST_ID
        AND NOT SRC.PASSPORT='-' AND NOT SRC.PASSPORT IS NULL 
        AND NOT APP.PASSPORT='-' AND NOT APP.PASSPORT IS NULL 
        AND NOT SRC.FIO IS NULL AND NOT SRC.FIO='-' 
        AND NOT APP.FIO IS NULL AND NOT APP.FIO='-' 
        AND NOT SRC.DR='-' AND NOT SRC.DR IS NULL
        AND NOT APP.DR='-' AND NOT APP.DR IS NULL 
                )
                WHERE F_POS = 1;

  in_fraud get_fraud%ROWTYPE;
  flag_exists_rid NUMBER;
  PRAGMA AUTONOMOUS_TRANSACTION; 
  fraud_flag NUMBER;
  
BEGIN   
  DBMS_OUTPUT.ENABLE;
  SELECT COUNT(*) INTO flag_exists_rid FROM dual 
    WHERE EXISTS(SELECT REQUEST_ID FROM SFF.APPLICATIONS_FROD WHERE REQUEST_ID=v_request_id);
  IF flag_exists_rid=0 THEN 
    fraud_flag := 9;
  END IF;
  
  OPEN get_fraud(v_request_id);
    LOOP 
    FETCH get_fraud INTO in_fraud;
        EXIT WHEN get_fraud%NOTFOUND;

    IF (fraud_flag IS NULL) THEN 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    END IF; 
    
    INSERT INTO FRAUD_USER.FROD_RULE_DEMO1(FROD_RULE_ID, FROD_RULE_DATE, REQUEST_ID, PERSON_ID, REQ_DATE,
               FIO, DR, STATUS_ID, SCORE_TREE_ROUTE_ID, CREATED_GROUP_ID,
               TYPE_REL, TYPE_REL_DESC, DAY_BETWEEN,
               REQUEST_ID_REL, PERSON_ID_REL, REQ_DATE_REL,
               FIO_REL, DR_REL, STATUS_ID_REL, SCORE_TREE_ROUTE_ID_REL, CREATED_GROUP_ID_REL,
               INFO_EQ, INFO_NEQ, INFO_NEQ_REL, F_POS)
       VALUES(1,
       in_fraud.FROD_RULE_DATE, in_fraud.REQUEST_ID, in_fraud.PERSON_ID, in_fraud.REQ_DATE,
               in_fraud.FIO, in_fraud.DR, in_fraud.STATUS_ID, in_fraud.SCORE_TREE_ROUTE_ID, in_fraud.CREATED_GROUP_ID,
               in_fraud.TYPE_REL, in_fraud.TYPE_REL_DESC, in_fraud.DAY_BETWEEN,
               in_fraud.REQUEST_ID_REL, in_fraud.PERSON_ID_REL, in_fraud.REQ_DATE_REL,
               in_fraud.FIO_REL, in_fraud.DR_REL, in_fraud.STATUS_ID_REL, in_fraud.SCORE_TREE_ROUTE_ID_REL, in_fraud.CREATED_GROUP_ID_REL,
               in_fraud.INFO_EQ, in_fraud.INFO_NEQ, in_fraud.INFO_NEQ_REL, in_fraud.F_POS);
  END LOOP;
  CLOSE get_fraud;
  
  COMMIT;
  
  IF (fraud_flag IS NULL) THEN 
    fraud_flag := 0;
  END IF;
  
  RETURN fraud_flag;
  
  EXCEPTION
    WHEN OTHERS
    THEN RETURN -1;
  END;
  /
  
  create or replace 
function            fn$PRSNL_DT_CHNG_02(v_request_id in number) return number
  is
-- ========================================================================
-- ==    ФУНКЦИЯ "ФРОД-ПРАВИЛО --Ошибка в ФиоДр - Паспорт равен"
-- ==    ОПИСАНИЕ:      Совпадает паспорт, отличается ФИО/ДР, предыдущая заявка была оформлена день назад
-- ========================================================================
-- ==    СОЗДАНИЕ:        28.03.2016 (КАРЕЛИН М.В..)
-- ========================================================================
cursor get_fraud(in_rid number) is   
 SELECT * FROM 
            (SELECT sysdate as FROD_RULE_DATE
                ,SRC.REQUEST_ID
                ,SRC.PERSON_ID
                ,SRC.REQ_DATE
                ,SRC.FIO as FIO
                ,SRC.DR as DR
                ,NULL as STATUS_ID
                ,NULL as SCORE_TREE_ROUTE_ID
                ,NULL as CREATED_GROUP_ID
                ,'PRSNL_DT_CHNG_02' as TYPE_REL
                ,'Правило срабатывает, если ид клиента совпадает, а в персональных данных заемщика отличается '||
                case
                    WHEN   SUBSTR(SRC.PASSPORT,1,4) <> SUBSTR(APP.PASSPORT,1,4) then 'серия паспорта'
                    WHEN   SUBSTR(SRC.PASSPORT,-6,-6) <> SUBSTR(APP.PASSPORT,-6,-6) then 'номер паспорта'
                    WHEN    SRC.DR<>APP.DR then 'дата рождения'
                    WHEN   REGEXP_SUBSTR(SRC.FIO,'[^ ]+',1,1) <> REGEXP_SUBSTR(APP.FIO,'[^ ]+',1,1) then 'фамилия'
                    WHEN   REGEXP_SUBSTR(SRC.FIO,'[^ ]+',1,2) <> REGEXP_SUBSTR(APP.FIO,'[^ ]+',1,2) then 'имя'
                    WHEN   REGEXP_SUBSTR(SRC.FIO,'[^ ]+',1,3) <> REGEXP_SUBSTR(APP.FIO,'[^ ]+',1,3) then 'отчество'
                 end as TYPE_REL_DESC
                ,ABS(ROUND(SRC.REQ_DATE-APP.REQ_DATE, 0)) as DAY_BETWEEN
                ,LISTAGG(TO_CHAR(APP.REQUEST_ID),',') WITHIN GROUP (ORDER BY SRC.REQUEST_ID,APP.PERSON_ID) 
                                                            OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID) REQUEST_ID_REL
                ,APP.PERSON_ID PERSON_ID_REL
                ,APP.REQ_DATE AS REQ_DATE_REL
                ,APP.FIO as FIO_REL, 
                APP.DR as DR_REL
                ,NULL as STATUS_ID_REL
        ,NULL as SCORE_TREE_ROUTE_ID_REL
        ,NULL as CREATED_GROUP_ID_REL
                ,'ID клиента:'||SRC.PERSON_ID  as INFO_EQ
                    ,'Паспорт+Фио+Др.:'||SRC.PASSPORT||' '||SRC.FIO||' '||SRC.DR AS INFO_NEQ
                    ,'Паспорт+Фио+Др.:'||APP.PASSPORT||' '||APP.FIO||' '||APP.DR AS INFO_NEQ_REL
                ,ROW_NUMBER() OVER(PARTITION BY SRC.REQUEST_ID,APP.PERSON_ID 
                                        ORDER BY SRC.REQUEST_ID,APP.PERSON_ID DESC, APP.REQ_DATE DESC) as F_POS,
            SRC.PASSPORT,
            APP.PASSPORT as passport_rel
            FROM SFF.APPLICATIONS_FROD SRC
            INNER JOIN SFF.APPLICATIONS_FROD APP
                  on SRC.PERSON_ID=APP.PERSON_ID and trunc(app.req_date) >= trunc(src.req_date) - 7
                    /*AND APP.REQ_DATE BETWEEN SRC.REQ_DATE-121 AND SRC.REQ_DATE*/
                    AND APP.REQUEST_ID<SRC.REQUEST_ID
    and  SRC.REQUEST_ID=in_RID
                /*EXCEPT: определяем доп. исключения по фрод-правилу (исключение пустых, разные физики и т.п.)*/
               and  NOT SRC.PASSPORT IS NULL AND NOT SRC.PASSPORT='-'
               AND NOT APP.PASSPORT IS NULL AND NOT APP.PASSPORT='-'
                AND NOT SRC.FIO IS NULL AND NOT APP.FIO IS NULL AND NOT SRC.FIO='-' AND NOT APP.FIO='-'
                and NOT SRC.DR IS NULL AND NOT APP.DR IS NULL 
            ) TAB
        WHERE TAB.F_POS=1 
        and 
                 (        DR<>DR_REL
                    OR   SUBSTR(PASSPORT,1,4) <> SUBSTR(PASSPORT_REL,1,4)
                    OR   SUBSTR(PASSPORT,-6,-6) <> SUBSTR(PASSPORT_REL,-6,-6)
                    OR   REGEXP_SUBSTR(FIO,'[^ ]+',1,1) <> REGEXP_SUBSTR(FIO_REL,'[^ ]+',1,1)
                    OR   REGEXP_SUBSTR(FIO,'[^ ]+',1,2) <> REGEXP_SUBSTR(FIO_REL,'[^ ]+',1,2)
                    OR   REGEXP_SUBSTR(FIO,'[^ ]+',1,3) <> REGEXP_SUBSTR(FIO_REL,'[^ ]+',1,3)
                    );    

  in_fraud get_fraud%rowtype;
  flag_exists_rid number;
  pragma autonomous_transaction;
  fraud_flag number;
begin   
  dbms_output.enable;
  select count(*) into flag_exists_rid from dual 
    where exists(select request_id from sff.applications_frod where request_id=v_request_id);
  if flag_exists_rid=0 then 
    fraud_flag := 9;
  end if;
  
  open get_fraud(v_request_id);
    loop 
    fetch get_fraud into in_fraud;
        exit when get_fraud%notfound;

    if (fraud_flag is null) then 
      --фрод найден, возвращаем 1
      fraud_flag := 1;   
    end if; 
    
    insert into fraud_user.frod_rule_demo1(frod_rule_id, frod_rule_date, request_id, person_id, req_date,
               fio, dr, status_id, score_tree_route_id, created_group_id,
               type_rel, type_rel_desc, day_between,
               request_id_rel, person_id_rel, req_date_rel,
               fio_rel, dr_rel, status_id_rel, score_tree_route_id_rel, created_group_id_rel,
               info_eq, info_neq, info_neq_rel, f_pos)
       values(1,
       in_fraud.frod_rule_date, in_fraud.request_id, in_fraud.person_id, in_fraud.req_date,
               in_fraud.fio, in_fraud.dr, in_fraud.status_id, in_fraud.score_tree_route_id, in_fraud.created_group_id,
               in_fraud.type_rel, in_fraud.type_rel_desc, in_fraud.day_between,
               in_fraud.request_id_rel, in_fraud.person_id_rel, in_fraud.req_date_rel,
               in_fraud.fio_rel, in_fraud.dr_rel, in_fraud.status_id_rel, in_fraud.score_tree_route_id_rel, in_fraud.created_group_id_rel,
               in_fraud.info_eq, in_fraud.info_neq, in_fraud.info_neq_rel, in_fraud.f_pos);
  end loop;
  close get_fraud;
  
  COMMIT;
  
  if (fraud_flag is null) then 
    fraud_flag := 0;
  end if;
  
  return fraud_flag;
  
  exception
    when others
    then return -1;
  end;
  /
