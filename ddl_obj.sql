
   CREATE SEQUENCE  "SNAUSER"."SEQ_CUSTOM_MEASURE_ITEMS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_CUSTOM_MEASURE_ITEMS_SAVED"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_COLORMODEL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_COLUMN_DISPLAY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_COLUMN_METADATA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_CONTEXT_PREF"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_CURRENCY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_CUSTOM_MEASURES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_EXTERNAL_APP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_EXTERNAL_APP_DSPLY_NM"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_EXTERNAL_APP_ROLE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_SOCIAL_NETWORK_GRP_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_SOCIAL_NETWORK_LINK_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 12480 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_SOCIAL_NETWORK_NODE_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11140 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_TABLE_DISPLAY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_TABLE_METADATA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

  CREATE TABLE "SNAUSER"."SNA_COLORMODEL" 
   (	"COLOR_MODEL_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"COLUMN_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"START_RANGE_NM" VARCHAR2(60), 
	"END_RANGE_NM" VARCHAR2(60), 
	"STYLE_TYPE" VARCHAR2(255), 
	"FORMAT_TYPE" VARCHAR2(50), 
	"SEXCL_FLG" VARCHAR2(1), 
	"EEXCL_FLG" VARCHAR2(1), 
	 CONSTRAINT "XPKSNA_COLORMODEL" PRIMARY KEY ("COLOR_MODEL_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_354" FOREIGN KEY ("COLUMN_METADATA_SK")
	  REFERENCES "SNAUSER"."SNA_COLUMN_METADATA" ("COLUMN_METADATA_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_COLORMODEL" ON "SNAUSER"."SNA_COLORMODEL" ("COLOR_MODEL_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_COLORMODEL" ON "SNAUSER"."SNA_COLORMODEL" ("COLUMN_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_COLUMN_DISPLAY" 
   (	"COLUMN_DISPLAY_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"COLUMN_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"COLUMN_DISPLAY_NM" VARCHAR2(100), 
	"JUSTIFICATION_SPEC" VARCHAR2(255), 
	"HEADER_JUSTIFICATION_SPEC" VARCHAR2(255), 
	"FORMATSPEC_DESC" VARCHAR2(255), 
	"LOCALE_DESC" VARCHAR2(255), 
	 CONSTRAINT "XPKSNA_COLUMN_DISPLAY" PRIMARY KEY ("COLUMN_DISPLAY_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_353" FOREIGN KEY ("COLUMN_METADATA_SK")
	  REFERENCES "SNAUSER"."SNA_COLUMN_METADATA" ("COLUMN_METADATA_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_COLUMN_DISPLAY" ON "SNAUSER"."SNA_COLUMN_DISPLAY" ("COLUMN_DISPLAY_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_COLUMN_DISPLAY" ON "SNAUSER"."SNA_COLUMN_DISPLAY" ("COLUMN_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_COLUMN_METADATA" 
   (	"COLUMN_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"TABLE_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"COLUMN_NM" VARCHAR2(60), 
	"DATATYPE_NM" VARCHAR2(60), 
	"INCLUDE_FACET_SEARCH_FLG" VARCHAR2(1), 
	"FACET_SEARCH_TYPE" VARCHAR2(100), 
	"MIN_WIDTH_SPEC" NUMBER(*,0), 
	 CONSTRAINT "XPKSNA_COLUMN_METADATA" PRIMARY KEY ("COLUMN_METADATA_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_351" FOREIGN KEY ("TABLE_METADATA_SK")
	  REFERENCES "SNAUSER"."SNA_TABLE_METADATA" ("TABLE_METADATA_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_COLUMN_METADATA" ON "SNAUSER"."SNA_COLUMN_METADATA" ("COLUMN_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_COLUMN_METADATA" ON "SNAUSER"."SNA_COLUMN_METADATA" ("TABLE_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_CONTEXT_PREFERENCE" 
   (	"CONTEXT_PREFERENCE_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"ANALYTIC_CONTEXT_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"PROPERTY_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"PROPERTY_DESC" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_CONTEXT_PREFERENCE" PRIMARY KEY ("CONTEXT_PREFERENCE_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_CONTEXT_PREFERENCE" ON "SNAUSER"."SNA_CONTEXT_PREFERENCE" ("CONTEXT_PREFERENCE_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_CURRENCY" 
   (	"CURRENCY_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"ALIGN_SYMBOL_CD" VARCHAR2(5), 
	"CURRENCY_SYMBOL_CD" VARCHAR2(4), 
	"DECIMAL_SEPARATOR_CD" VARCHAR2(4), 
	"PRESION_NO" NUMBER(*,0), 
	"ROUNDING_CD" VARCHAR2(7), 
	"USE_NEGATIVE_SIGN_FLG" VARCHAR2(5), 
	"USE_THOUSANDS_SEPARATOR_FLG" VARCHAR2(5), 
	"THOUSANDS_SEPARATOR_CD" VARCHAR2(4), 
	"CURRENCY_NM" VARCHAR2(40), 
	 CONSTRAINT "XPKSNA_CURRENCY" PRIMARY KEY ("CURRENCY_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_CURRENCY" ON "SNAUSER"."SNA_CURRENCY" ("CURRENCY_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_CUST_MEASURE_ITEMS_SAVED" 
   (	"CUSTOM_MEASURE_ITEMS_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"MEASURE_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"MEASURE_VALUE" VARCHAR2(255), 
	"DATATYPE_NM" VARCHAR2(60), 
	"LINK_UNIQUE_ID" VARCHAR2(255), 
	"NODE_UNIQUE_ID" VARCHAR2(255), 
	"LAST_UPDATE_DTTM" DATE NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_CUST_MEASURE_ITEMS_SAVE" PRIMARY KEY ("CUSTOM_MEASURE_ITEMS_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_CUST_MEASURE_ITEMS_SAVE" ON "SNAUSER"."SNA_CUST_MEASURE_ITEMS_SAVED" ("CUSTOM_MEASURE_ITEMS_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_CUSTOM_MEASURE_ITEMS" 
   (	"CUSTOM_MEASURE_ITEMS_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"CUSTOM_MEASURES_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"MEASURE_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"MEASURE_VALUE" VARCHAR2(255), 
	"DATATYPE_NM" VARCHAR2(60) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_CUSTOM_MEASURE_ITEMS" PRIMARY KEY ("CUSTOM_MEASURE_ITEMS_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_5" FOREIGN KEY ("CUSTOM_MEASURES_SK")
	  REFERENCES "SNAUSER"."SNA_CUSTOM_MEASURES" ("CUSTOM_MEASURES_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_CUSTOM_MEASURE_ITEMS" ON "SNAUSER"."SNA_CUSTOM_MEASURE_ITEMS" ("CUSTOM_MEASURE_ITEMS_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_CUSTOM_MEASURE_ITEMS" ON "SNAUSER"."SNA_CUSTOM_MEASURE_ITEMS" ("CUSTOM_MEASURES_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_CUSTOM_MEASURES" 
   (	"CUSTOM_MEASURES_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"ANALYTIC_CONTEXT_NM" VARCHAR2(255), 
	"OBJECT_ID" VARCHAR2(255) NOT NULL ENABLE, 
	"OBJECT_TYPE" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_CUSTOM_MEASURES" PRIMARY KEY ("CUSTOM_MEASURES_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_CUSTOM_MEASURES" ON "SNAUSER"."SNA_CUSTOM_MEASURES" ("CUSTOM_MEASURES_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_EXTERNAL_APP" 
   (	"EXTERNAL_APP_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"ANALYTIC_CONTEXT_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"URL_NM" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_EXTERNAL_APP" PRIMARY KEY ("EXTERNAL_APP_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_EXTERNAL_APP" ON "SNAUSER"."SNA_EXTERNAL_APP" ("EXTERNAL_APP_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_EXTERNAL_APP_DISPLAY_NM" 
   (	"EXTERNAL_APP_DISPLAY_NAME_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"EXTERNAL_APP_SK" NUMBER(20,0), 
	"DISPLAY_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"LOCALE_NM" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_EXTERNAL_APP_DISPLAY_NM" PRIMARY KEY ("EXTERNAL_APP_DISPLAY_NAME_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_47" FOREIGN KEY ("EXTERNAL_APP_SK")
	  REFERENCES "SNAUSER"."SNA_EXTERNAL_APP" ("EXTERNAL_APP_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_EXTERNAL_APP_DISPLAY_NM" ON "SNAUSER"."SNA_EXTERNAL_APP_DISPLAY_NM" ("EXTERNAL_APP_DISPLAY_NAME_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_EXTERNAL_APP_ROLE" 
   (	"EXTERNAL_APP_ROLE_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"EXTERNAL_APP_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"METADATA_ROLE_NM" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "XPKSNA_EXTERNAL_APP_ROLE" PRIMARY KEY ("EXTERNAL_APP_ROLE_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_40" FOREIGN KEY ("EXTERNAL_APP_SK")
	  REFERENCES "SNAUSER"."SNA_EXTERNAL_APP" ("EXTERNAL_APP_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_EXTERNAL_APP_ROLE" ON "SNAUSER"."SNA_EXTERNAL_APP_ROLE" ("EXTERNAL_APP_ROLE_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_EXTERNAL_APP_ROLE" ON "SNAUSER"."SNA_EXTERNAL_APP_ROLE" ("EXTERNAL_APP_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_SOCIAL_NETWORK_CLUSTER" 
   (	"CLUSTER_ID" VARCHAR2(255) NOT NULL ENABLE, 
	"ACTIONABLE_ENTITY_ID" VARCHAR2(255) NOT NULL ENABLE, 
	"ACTIONABLE_ENTITY_TYPE" VARCHAR2(100) NOT NULL ENABLE, 
	"LAST_UPDATE_DTTM" DATE NOT NULL ENABLE, 
	"USER_ID" VARCHAR2(35) NOT NULL ENABLE, 
	"CREATE_DTTM" DATE, 
	 CONSTRAINT "PK_SNA_SOCIAL_NETWORK_CLSTR" PRIMARY KEY ("CLUSTER_ID", "ACTIONABLE_ENTITY_ID", "ACTIONABLE_ENTITY_TYPE", "LAST_UPDATE_DTTM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWRK_CLSTER_IDX1" ON "SNAUSER"."SNA_SOCIAL_NETWORK_CLUSTER" ("CLUSTER_ID", "ACTIONABLE_ENTITY_ID", "ACTIONABLE_ENTITY_TYPE", "LAST_UPDATE_DTTM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_SOCIAL_NETWORK_GROUP" 
   (	"GROUP_VERSION_ID" NUMBER(20,0) NOT NULL ENABLE, 
	"GROUP_UNIQUE_ID" VARCHAR2(255), 
	"NODE_UNIQUE_ID" VARCHAR2(255), 
	"CLUSTER_ID" VARCHAR2(255), 
	"NODE_TOOLTIP" VARCHAR2(255), 
	"GROUP_LABEL" VARCHAR2(255), 
	"GROUP_COLOR" VARCHAR2(255), 
	"GROUP_SYMBOL" VARCHAR2(255), 
	"GROUP_BORDER_COLOR" VARCHAR2(255), 
	"GROUP_BORDER_SIZE" NUMBER(*,0), 
	"IS_NODE_HIDDEN" NUMBER(*,0), 
	"POSITION_X" NUMBER(32,12), 
	"POSITION_Y" NUMBER(32,12), 
	"VALID_FROM_DT" DATE NOT NULL ENABLE, 
	"VALID_TO_DT" DATE NOT NULL ENABLE, 
	"CREATE_DTTM" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_DTTM" DATE NOT NULL ENABLE, 
	 CONSTRAINT "PK_SNA_SOCIAL_NETWORK_GROUP" PRIMARY KEY ("GROUP_VERSION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_GROUP_IDX1" ON "SNAUSER"."SNA_SOCIAL_NETWORK_GROUP" ("GROUP_VERSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_GROUP_IDX2" ON "SNAUSER"."SNA_SOCIAL_NETWORK_GROUP" ("GROUP_UNIQUE_ID", "NODE_UNIQUE_ID", "VALID_FROM_DT", "VALID_TO_DT", "CREATE_DTTM", "LAST_UPDATE_DTTM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" 
   (	"LINK_VERSION_ID" NUMBER(20,0) NOT NULL ENABLE, 
	"LINK_UNIQUE_ID" VARCHAR2(255) NOT NULL ENABLE, 
	"CLUSTER_ID" VARCHAR2(255), 
	"FROM_NODE_UID" VARCHAR2(255) NOT NULL ENABLE, 
	"TO_NODE_UID" VARCHAR2(255) NOT NULL ENABLE, 
	"LINK_WIDTH" NUMBER(*,0), 
	"LINK_COLOR" VARCHAR2(255), 
	"LINK_LABEL" VARCHAR2(255), 
	"LINK_STYLE" NUMBER(*,0), 
	"LINK_TYPE" VARCHAR2(6), 
	"LINK_START_DATE" DATE, 
	"LINK_END_DATE" DATE, 
	"VALID_FROM_DT" DATE NOT NULL ENABLE, 
	"VALID_TO_DT" DATE NOT NULL ENABLE, 
	"CREATE_DTTM" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_DTTM" DATE NOT NULL ENABLE, 
	 CONSTRAINT "PK_SNA_SOCIAL_NETWORK_LINK" PRIMARY KEY ("LINK_VERSION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_LINK_IDX1" ON "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" ("LINK_VERSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_LINK_IDX2" ON "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" ("CLUSTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_LINK_IDX3" ON "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" ("FROM_NODE_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_LINK_IDX4" ON "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" ("TO_NODE_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_LINK_IDX5" ON "SNAUSER"."SNA_SOCIAL_NETWORK_LINK" ("FROM_NODE_UID", "TO_NODE_UID", "VALID_FROM_DT", "VALID_TO_DT", "CREATE_DTTM", "LAST_UPDATE_DTTM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_SOCIAL_NETWORK_NODE" 
   (	"NODE_VERSION_ID" NUMBER(20,0) NOT NULL ENABLE, 
	"UNIQUE_ID" VARCHAR2(255) NOT NULL ENABLE, 
	"NODE_TOOLTIP" VARCHAR2(255), 
	"NODE_LABEL" VARCHAR2(255), 
	"NODE_COLOR" VARCHAR2(255), 
	"NODE_TYPE" VARCHAR2(255), 
	"NODE_SYMBOL" VARCHAR2(255), 
	"NODE_DEGREES" NUMBER(*,0), 
	"NODE_BORDER_COLOR" VARCHAR2(255), 
	"NODE_BORDER_SIZE" NUMBER(*,0), 
	"POSITION_X" NUMBER(32,12), 
	"POSITION_Y" NUMBER(32,12), 
	"LONGITUDE" NUMBER(32,12), 
	"LATITUDE" NUMBER(32,12), 
	"IS_NODE_HIDDEN" NUMBER(*,0), 
	"VALID_FROM_DT" DATE NOT NULL ENABLE, 
	"VALID_TO_DT" DATE NOT NULL ENABLE, 
	"CHANGE_DT" NUMBER(*,0), 
	"CREATE_DTTM" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_DTTM" DATE NOT NULL ENABLE, 
	 CONSTRAINT "PK_SNA_SOCIAL_NETWORK_NODE" PRIMARY KEY ("NODE_VERSION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_NODE_IDX1" ON "SNAUSER"."SNA_SOCIAL_NETWORK_NODE" ("NODE_VERSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_SOCIAL_NETWORK_NODE_IDX5" ON "SNAUSER"."SNA_SOCIAL_NETWORK_NODE" ("UNIQUE_ID", "VALID_FROM_DT", "VALID_TO_DT", "CREATE_DTTM", "LAST_UPDATE_DTTM", "CHANGE_DT", "NODE_VERSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_TABLE_DISPLAY" 
   (	"TABLE_DISPLAY_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"TABLE_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"TABLE_DISPLAY_NM" VARCHAR2(100) NOT NULL ENABLE, 
	"LOCALE_DESC" VARCHAR2(255), 
	 CONSTRAINT "XPKSNA_TABLE_DISPLAY" PRIMARY KEY ("TABLE_DISPLAY_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE, 
	 CONSTRAINT "R_352" FOREIGN KEY ("TABLE_METADATA_SK")
	  REFERENCES "SNAUSER"."SNA_TABLE_METADATA" ("TABLE_METADATA_SK") ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_TABLE_DISPLAY" ON "SNAUSER"."SNA_TABLE_DISPLAY" ("TABLE_DISPLAY_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."XIF1SNA_TABLE_DISPLAY" ON "SNAUSER"."SNA_TABLE_DISPLAY" ("TABLE_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_TABLE_METADATA" 
   (	"TABLE_METADATA_SK" NUMBER(20,0) NOT NULL ENABLE, 
	"SEGMENT_ID" VARCHAR2(128) NOT NULL ENABLE, 
	"ANALYTIC_CONTEXT_NM" VARCHAR2(255) NOT NULL ENABLE, 
	"TABLE_NM" VARCHAR2(60), 
	"TAB_POSITION_NO" NUMBER(4,0), 
	 CONSTRAINT "XPKSNA_TABLE_METADATA" PRIMARY KEY ("TABLE_METADATA_SK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."XPKSNA_TABLE_METADATA" ON "SNAUSER"."SNA_TABLE_METADATA" ("TABLE_METADATA_SK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "ODS"."CLIENTS" 
   (	"PERSON_ID" NUMBER NOT NULL ENABLE, 
	"FIO" VARCHAR2(300), 
	"BIRTHDAY" DATE, 
	"PASSPORT" VARCHAR2(10), 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	 CONSTRAINT "CLIENTS_PK" PRIMARY KEY ("PERSON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."CLIENTS_PK" ON "ODS"."CLIENTS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."APPLICATIONS" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"PRODUCT_TYPE" VARCHAR2(50), 
	"REQ_SUMM" NUMBER, 
	"REQ_SUMM_CURR" VARCHAR2(5), 
	"REQ_DATE" DATE, 
	"REQ_CREATED_BRANCH" VARCHAR2(100), 
	"REQ_CREATED_REGION" VARCHAR2(64), 
	"FIO" VARCHAR2(300), 
	"BIRTHDAY" DATE, 
	"PASSPORT" VARCHAR2(10), 
	"EDUCATION" VARCHAR2(50), 
	"WORK_TYPE" VARCHAR2(20), 
	"SALARY" NUMBER, 
	"SEX" NUMBER, 
	"RA_COUNTRY" VARCHAR2(2), 
	"RA_INDEX" VARCHAR2(6), 
	"RA_REGION" VARCHAR2(100), 
	"RA_DISTRICT" VARCHAR2(100), 
	"RA_CITY" VARCHAR2(100), 
	"RA_SETTLEMENT" VARCHAR2(100), 
	"RA_STREET" VARCHAR2(100), 
	"RA_HOUSE" VARCHAR2(100), 
	"RA_BUILDING" VARCHAR2(10), 
	"RA_APARTMENT" VARCHAR2(10), 
	"LA_COUNTRY" VARCHAR2(2), 
	"LA_INDEX" VARCHAR2(6), 
	"LA_REGION" VARCHAR2(100), 
	"LA_DISTRICT" VARCHAR2(100), 
	"LA_CITY" VARCHAR2(100), 
	"LA_SETTLEMENT" VARCHAR2(100), 
	"LA_STREET" VARCHAR2(100), 
	"LA_HOUSE" VARCHAR2(100), 
	"LA_BUILDING" VARCHAR2(10), 
	"LA_APARTMENT" VARCHAR2(10), 
	"BA_COUNTRY" VARCHAR2(2), 
	"BA_INDEX" VARCHAR2(6), 
	"BA_REGION" VARCHAR2(100), 
	"BA_DISTRICT" VARCHAR2(100), 
	"BA_CITY" VARCHAR2(100), 
	"BA_SETTLEMENT" VARCHAR2(100), 
	"BA_STREET" VARCHAR2(100), 
	"BA_HOUSE" VARCHAR2(100), 
	"BA_BUILDING" VARCHAR2(10), 
	"BA_APARTMENT" VARCHAR2(10), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"IS_PENSION" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	 CONSTRAINT "APPLICATIONS_PK" PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."APPLICATIONS_PK" ON "ODS"."APPLICATIONS" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."CONTACTS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_FIO" VARCHAR2(300), 
	"CONTACT_RELATION" VARCHAR2(64), 
	"CONTACT_PHONE" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."ISSUED_CREDIT" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"REQ_STATUS" VARCHAR2(20), 
	"PERSON_ID" NUMBER, 
	"DELINQ_STATUS" NUMBER, 
	"IS_FRAUD" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PHONE_OPERATOR" 
   (	"OPERATOR" VARCHAR2(100), 
	"REGION" VARCHAR2(100), 
	"COD" NUMBER, 
	"NUMBER_DEF" VARCHAR2(15), 
	"DATA_OPEN" DATE, 
	"STANDART" VARCHAR2(50), 
	"BEGNUM" NUMBER, 
	"ENDNUM" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."NEWAPPLICATIONS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"PRODUCT_TYPE" VARCHAR2(50), 
	"REQ_SUMM" NUMBER, 
	"REQ_SUMM_CURR" VARCHAR2(5), 
	"REQ_DATE" DATE, 
	"REQ_CREATED_BRANCH" VARCHAR2(100), 
	"REQ_CREATED_REGION" VARCHAR2(64), 
	"FIO" VARCHAR2(300), 
	"BIRTHDAY" DATE, 
	"PASSPORT" VARCHAR2(10), 
	"EDUCATION" VARCHAR2(50), 
	"WORK_TYPE" VARCHAR2(20), 
	"SALARY" NUMBER, 
	"SEX" NUMBER, 
	"RA_COUNTRY" VARCHAR2(2), 
	"RA_INDEX" VARCHAR2(6), 
	"RA_REGION" VARCHAR2(100), 
	"RA_DISTRICT" VARCHAR2(100), 
	"RA_CITY" VARCHAR2(100), 
	"RA_SETTLEMENT" VARCHAR2(100), 
	"RA_STREET" VARCHAR2(100), 
	"RA_HOUSE" VARCHAR2(100), 
	"RA_BUILDING" VARCHAR2(10), 
	"RA_APARTMENT" VARCHAR2(10), 
	"LA_COUNTRY" VARCHAR2(2), 
	"LA_INDEX" VARCHAR2(6), 
	"LA_REGION" VARCHAR2(100), 
	"LA_DISTRICT" VARCHAR2(100), 
	"LA_CITY" VARCHAR2(100), 
	"LA_SETTLEMENT" VARCHAR2(100), 
	"LA_STREET" VARCHAR2(100), 
	"LA_HOUSE" VARCHAR2(100), 
	"LA_BUILDING" VARCHAR2(10), 
	"LA_APARTMENT" VARCHAR2(10), 
	"BA_COUNTRY" VARCHAR2(2), 
	"BA_INDEX" VARCHAR2(6), 
	"BA_REGION" VARCHAR2(100), 
	"BA_DISTRICT" VARCHAR2(100), 
	"BA_CITY" VARCHAR2(100), 
	"BA_SETTLEMENT" VARCHAR2(100), 
	"BA_STREET" VARCHAR2(100), 
	"BA_HOUSE" VARCHAR2(100), 
	"BA_BUILDING" VARCHAR2(10), 
	"BA_APARTMENT" VARCHAR2(10), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"IS_PENSION" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."NEWAPPCONTACTS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_FIO" VARCHAR2(300), 
	"CONTACT_RELATION" VARCHAR2(64), 
	"CONTACT_PHONE" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SFF"."CLIENTS" 
   (	"PERSON_ID" NUMBER NOT NULL ENABLE, 
	"FIO" VARCHAR2(300), 
	"BIRTHDAY" DATE, 
	"PASSPORT" VARCHAR2(10), 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	 CONSTRAINT "CLIENTS_PK" PRIMARY KEY ("PERSON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."CLIENTS_PK" ON "SFF"."CLIENTS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."CONTACTS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_FIO" VARCHAR2(300), 
	"CONTACT_RELATION" VARCHAR2(64), 
	"CONTACT_PHONE" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."ISSUED_CREDIT" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"REQ_STATUS" VARCHAR2(20), 
	"PERSON_ID" NUMBER, 
	"DELINQ_STATUS" NUMBER, 
	"IS_FRAUD" NUMBER, 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_CONFIG_TABLE" 
   (	"table" VARCHAR2(32), 
	"attrib" VARCHAR2(32), 
	"use" NUMBER(8,0), 
	"weight" NUMBER(8,0), 
	"group" NUMBER(8,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."ALERTS_TABLE" 
   (	"ALERT_TYPE" VARCHAR2(200), 
	"REQUEST_ID" NUMBER, 
	"FIO" VARCHAR2(300), 
	"PERSON_ID" NUMBER, 
	"SCORE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."ALERTS_SUMMARY" 
   (	"REQUEST_ID" NUMBER, 
	"FIO" VARCHAR2(300), 
	"PERSON_ID" NUMBER, 
	"SCORE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."AQ_TAB" 
   (	"Q_NAME" VARCHAR2(30), 
	"MSGID" RAW(16), 
	"CORRID" VARCHAR2(128), 
	"PRIORITY" NUMBER, 
	"STATE" NUMBER, 
	"DELAY" TIMESTAMP (6), 
	"EXPIRATION" NUMBER, 
	"TIME_MANAGER_INFO" TIMESTAMP (6), 
	"LOCAL_ORDER_NO" NUMBER, 
	"CHAIN_NO" NUMBER, 
	"CSCN" NUMBER, 
	"DSCN" NUMBER, 
	"ENQ_TIME" TIMESTAMP (6), 
	"ENQ_UID" VARCHAR2(30), 
	"ENQ_TID" VARCHAR2(30), 
	"DEQ_TIME" TIMESTAMP (6), 
	"DEQ_UID" VARCHAR2(30), 
	"DEQ_TID" VARCHAR2(30), 
	"RETRY_COUNT" NUMBER, 
	"EXCEPTION_QSCHEMA" VARCHAR2(30), 
	"EXCEPTION_QUEUE" VARCHAR2(30), 
	"STEP_NO" NUMBER, 
	"RECIPIENT_KEY" NUMBER, 
	"DEQUEUE_MSGID" RAW(16), 
	"SENDER_NAME" VARCHAR2(30), 
	"SENDER_ADDRESS" VARCHAR2(1024), 
	"SENDER_PROTOCOL" NUMBER, 
	"USER_DATA" "SNAUSER"."MSG_PKK" , 
	"USER_PROP" "SYS"."ANYDATA" , 
	 PRIMARY KEY ("MSGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) USAGE QUEUE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 OPAQUE TYPE "USER_PROP" STORE AS BASICFILE LOB (
  ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  CACHE 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_S" 
   (	"SUBSCRIBER_ID" NUMBER NOT NULL ENABLE, 
	"QUEUE_NAME" VARCHAR2(30) NOT NULL ENABLE, 
	"NAME" VARCHAR2(30), 
	"ADDRESS" VARCHAR2(1024), 
	"PROTOCOL" NUMBER, 
	"SUBSCRIBER_TYPE" NUMBER, 
	"RULE_NAME" VARCHAR2(30), 
	"TRANS_NAME" VARCHAR2(65), 
	"RULESET_NAME" VARCHAR2(65), 
	"NEGATIVE_RULESET_NAME" VARCHAR2(65), 
	"CREATION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"MODIFICATION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"DELETION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"SCN_AT_REMOVE" NUMBER, 
	"SCN_AT_ADD" NUMBER, 
	 PRIMARY KEY ("SUBSCRIBER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) USAGE QUEUE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_T" 
   (	"NEXT_DATE" TIMESTAMP (6), 
	"TXN_ID" VARCHAR2(30), 
	"MSGID" RAW(16), 
	"ACTION" NUMBER, 
	 PRIMARY KEY ("NEXT_DATE", "TXN_ID", "MSGID") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_TAB_S" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "TRANSFORMATION", "QUEUE_TO_QUEUE") AS 
  SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM "AQ$_AQ_TAB_S" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY;

   CREATE SEQUENCE  "SNAUSER"."AQ$_AQ_TAB_N"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_H" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"DEQUEUE_TIME" TIMESTAMP (6), 
	"TRANSACTION_ID" VARCHAR2(30), 
	"DEQUEUE_USER" VARCHAR2(30), 
	"PROPAGATED_MSGID" RAW(16), 
	"RETRY_COUNT" NUMBER, 
	"HINT" ROWID, 
	"SPARE" RAW(16), 
	 PRIMARY KEY ("MSGID", "SUBSCRIBER#", "NAME", "ADDRESS#") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_L" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"DEQUEUE_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"TRANSACTION_ID" VARCHAR2(30), 
	"DEQUEUE_USER" VARCHAR2(30), 
	"FLAGS" RAW(1)
   ) USAGE QUEUE PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_G" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"SIGN" "SYS"."AQ$_SIG_PROP" , 
	"DBS_SIGN" "SYS"."AQ$_SIG_PROP" , 
	 PRIMARY KEY ("MSGID", "SUBSCRIBER#", "NAME", "ADDRESS#") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50 INCLUDING "SIGN" OVERFLOW
 PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_TAB_I" 
   (	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"QUEUE#" NUMBER, 
	"MSG_ENQ_TIME" TIMESTAMP (6), 
	"MSG_STEP_NO" NUMBER, 
	"MSG_CHAIN_NO" NUMBER, 
	"MSG_LOCAL_ORDER_NO" NUMBER, 
	"MSGID" RAW(16), 
	"HINT" ROWID, 
	"SPARE" RAW(16), 
	 PRIMARY KEY ("SUBSCRIBER#", "NAME", "QUEUE#", "MSG_ENQ_TIME", "MSG_STEP_NO", "MSG_CHAIN_NO", "MSG_LOCAL_ORDER_NO", "MSGID") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$_AQ_TAB_F" ("Q_NAME", "ROW_ID", "MSGID", "CORRID", "PRIORITY", "STATE", "DELAY", "EXPIRATION", "ENQ_TIME", "ENQ_UID", "ENQ_TID", "DEQ_TIME", "DEQ_UID", "DEQ_TID", "RETRY_COUNT", "EXCEPTION_QSCHEMA", "EXCEPTION_QUEUE", "CSCN", "DSCN", "CHAIN_NO", "LOCAL_ORDER_NO", "TIME_MANAGER_INFO", "STEP_NO", "USER_DATA", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "DEQUEUE_MSGID", "DELIVERY_MODE", "SEQUENCE_NUM", "MSG_NUM", "QUEUE_ID", "USER_PROP", "SUBSCRIBER_ID", "SUBSCRIBER_NAME", "QUEUE_EVTID") AS 
  SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM "AQ_TAB" qt, "AQ$_AQ_TAB_I" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'SNAUSER' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  WITH READ ONLY;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_TAB" ("QUEUE", "MSG_ID", "CORR_ID", "MSG_PRIORITY", "MSG_STATE", "DELAY", "DELAY_TIMESTAMP", "EXPIRATION", "ENQ_TIME", "ENQ_TIMESTAMP", "ENQ_USER_ID", "ENQ_TXN_ID", "DEQ_TIME", "DEQ_TIMESTAMP", "DEQ_USER_ID", "DEQ_TXN_ID", "RETRY_COUNT", "EXCEPTION_QUEUE_OWNER", "EXCEPTION_QUEUE", "USER_DATA", "PROPAGATED_MSGID", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "ORIGINAL_MSGID", "ORIGINAL_QUEUE_NAME", "ORIGINAL_QUEUE_OWNER", "EXPIRATION_REASON", "CONSUMER_NAME", "ADDRESS", "PROTOCOL") AS 
  SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM "AQ_TAB" qt, "AQ$_AQ_TAB_H" h LEFT OUTER JOIN "AQ$_AQ_TAB_L" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, "AQ$_AQ_TAB_S" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     WITH READ ONLY;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_TAB_R" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "RULE", "RULE_SET", "TRANSFORMATION") AS 
  SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM "AQ$_AQ_TAB_S" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'SNAUSER'  WITH READ ONLY;

  CREATE TABLE "SNAUSER"."SNA_DEQUEUE_MSG" 
   (	"MSG_ID" VARCHAR2(40), 
	"MSG_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"OLD_STATUS_ID" NUMBER, 
	"V_NEW_STATUS_ID" NUMBER, 
	"STAMP" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."APP_EXTEND" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"STATUS_ID" NUMBER, 
	"BNK" NUMBER(11,1), 
	"PD30_N" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_LINKS" 
   (	"REQUEST_ID" VARCHAR2(12), 
	"PERSON_ID" VARCHAR2(12), 
	"LINK_TYPE" VARCHAR2(60), 
	"LABEL" VARCHAR2(600), 
	"LINK_START_DT" DATE, 
	"LINK_END_DT" DATE, 
	"WEIGHT" NUMBER(3,0), 
	"GROUP" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 COMPRESS BASIC NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
  PARALLEL 3 ;

  CREATE INDEX "SFF"."INDEX_ALERTS_SUMMARY_FIO" ON "SFF"."ALERTS_SUMMARY" ("FIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."INDEX_ALERTS_SUMMARY_PID" ON "SFF"."ALERTS_SUMMARY" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."INDEX_ALERTS_SUMMARY_RID" ON "SFF"."ALERTS_SUMMARY" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_ALERTS_TABLE_ALERT_TYPE" ON "SFF"."ALERTS_TABLE" ("ALERT_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_ALERTS_TABLE_FIO" ON "SFF"."ALERTS_TABLE" ("FIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_ALERTS_TABLE_PERSON_ID" ON "SFF"."ALERTS_TABLE" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_ALERTS_TABLE_REQUEST_ID" ON "SFF"."ALERTS_TABLE" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."APPLICATIONS_" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"PRODUCT_TYPE" VARCHAR2(100), 
	"REQ_SUMM" NUMBER, 
	"REQ_SUMM_CURR" VARCHAR2(5), 
	"REQ_DATE" DATE, 
	"REQ_CREATED_BRANCH" VARCHAR2(100), 
	"REQ_CREATED_REGION" VARCHAR2(64), 
	"FIO" VARCHAR2(300), 
	"BIRTHDAY" DATE, 
	"PASSPORT" VARCHAR2(10), 
	"EDUCATION" VARCHAR2(50), 
	"WORK_TYPE" VARCHAR2(20), 
	"SALARY" NUMBER, 
	"SEX" NUMBER, 
	"RA_COUNTRY" VARCHAR2(2), 
	"RA_INDEX" VARCHAR2(6), 
	"RA_REGION" VARCHAR2(100), 
	"RA_DISTRICT" VARCHAR2(100), 
	"RA_CITY" VARCHAR2(100), 
	"RA_SETTLEMENT" VARCHAR2(100), 
	"RA_STREET" VARCHAR2(100), 
	"RA_HOUSE" VARCHAR2(100), 
	"RA_BUILDING" VARCHAR2(10), 
	"RA_APARTMENT" VARCHAR2(20), 
	"LA_COUNTRY" VARCHAR2(2), 
	"LA_INDEX" VARCHAR2(6), 
	"LA_REGION" VARCHAR2(100), 
	"LA_DISTRICT" VARCHAR2(100), 
	"LA_CITY" VARCHAR2(100), 
	"LA_SETTLEMENT" VARCHAR2(100), 
	"LA_STREET" VARCHAR2(100), 
	"LA_HOUSE" VARCHAR2(100), 
	"LA_BUILDING" VARCHAR2(10), 
	"LA_APARTMENT" VARCHAR2(20), 
	"BA_COUNTRY" VARCHAR2(2), 
	"BA_INDEX" VARCHAR2(6), 
	"BA_REGION" VARCHAR2(100), 
	"BA_DISTRICT" VARCHAR2(100), 
	"BA_CITY" VARCHAR2(100), 
	"BA_SETTLEMENT" VARCHAR2(100), 
	"BA_STREET" VARCHAR2(100), 
	"BA_HOUSE" VARCHAR2(100), 
	"BA_BUILDING" VARCHAR2(10), 
	"BA_APARTMENT" VARCHAR2(20), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"IS_PENSION" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	"WORK_ORG_NAME" VARCHAR2(600), 
	 CONSTRAINT "APPLICATIONS_PK" PRIMARY KEY ("REQUEST_ID") DISABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_C_REQUEST_INF_PACK" 
   (	"REQUEST_INFO_ID" NUMBER, 
	"REQUEST_ID" NUMBER, 
	"FIO_ID" NUMBER, 
	"SEX_ID" NUMBER, 
	"BDATE" DATE, 
	"BADR_ID" NUMBER, 
	"MDOC_ID" NUMBER, 
	"MADR_ID" NUMBER, 
	"LADR_ID" NUMBER, 
	"DADR_ID" NUMBER, 
	"EDUC" VARCHAR2(765), 
	"WORK_ID" NUMBER, 
	"DOHOD_CALC" NUMBER(13,2), 
	"DOHOD_DECL_ALL" NUMBER(13,2), 
	"FAMILY" VARCHAR2(765), 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."C_REQUEST_FULL_ST_RID" 
   (	"REQUEST_ID" NUMBER, 
	"STATUS_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"CREATED_DATE" DATE
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_C_REQUEST_CR_PACK" 
   (	"REQUEST_ID" NUMBER, 
	"REQUEST_CREDIT_ID" NUMBER, 
	"PRIVILEGE_ID" NUMBER, 
	"CURRENCY_ID" NUMBER, 
	"SCHEMS_ID" NUMBER, 
	"SUMMA" NUMBER(13,2), 
	"TYPE_CREDIT_ID" NUMBER, 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_PHONES_4SR_NEW" 
   (	"REQUEST_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"MOBILE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."EMAIL" 
   (	"EMAIL_ID" NUMBER(10,0), 
	"EMAIL" VARCHAR2(300), 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"EMAIL_AKT" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."FIO4_HISTORY" 
   (	"FIO_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"FIO_AKT" NUMBER, 
	"FIO4SEARCH" VARCHAR2(366)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."ADDRESS_4SR" 
   (	"ADDRESS_ID" NUMBER, 
	"GEO_ID" NUMBER, 
	"ADDRESS_STR" VARCHAR2(4000), 
	"QUALITY_CODE" VARCHAR2(765), 
	"SHOTNAME_CIT" VARCHAR2(30), 
	"SHOTNAME_STR" VARCHAR2(30), 
	"COUNTRIES_ISO2" VARCHAR2(6), 
	"REGIONS_NAMES" VARCHAR2(192), 
	"AREAS_NAMES" VARCHAR2(192), 
	"CITIES_NAMES" VARCHAR2(192), 
	"STREETS_NAMES" VARCHAR2(192), 
	"HOUSE" VARCHAR2(45), 
	"BUILD" VARCHAR2(12), 
	"FLAT" VARCHAR2(30), 
	"POSTOFFICE" VARCHAR2(18)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_ADR_ORG_PREV" 
   (	"WORKS_ID" NUMBER(10,0), 
	"ORG_ID" NUMBER(*,0), 
	"ORG_NAME" VARCHAR2(765), 
	"ADDRESS_ID" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_ADR_ORG" 
   (	"WORKS_ID" NUMBER(10,0), 
	"ORG_ID" NUMBER(*,0), 
	"ORG_NAME" VARCHAR2(765), 
	"QUALITY_CODE_N" NUMBER, 
	"ADDRESS_ID" NUMBER, 
	"GEO_ID" NUMBER, 
	"ADDRESS_STR" VARCHAR2(4000), 
	"QUALITY_CODE" VARCHAR2(765), 
	"BA_SETTLEMENT" VARCHAR2(30), 
	"SHOTNAME_STR" VARCHAR2(30), 
	"BA_COUNTRY" VARCHAR2(6), 
	"BA_REGION" VARCHAR2(192), 
	"BA_DISTRICT" VARCHAR2(192), 
	"BA_CITY" VARCHAR2(192), 
	"BA_STREET" VARCHAR2(192), 
	"BA_HOUSE" VARCHAR2(45), 
	"BA_BUILDING" VARCHAR2(12), 
	"BA_APARTMENT" VARCHAR2(30), 
	"BA_INDEX" VARCHAR2(18)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_DOCS" 
   (	"DOCUMENTS_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"DOCUMENTS_AKT" NUMBER, 
	"DOCUMENTS_CREATED" DATE, 
	"DOCUMENTS_SERIAL" VARCHAR2(45), 
	"DOCUMENTS_NUMBER" VARCHAR2(384), 
	"DOCUMENTS_TYPE" NUMBER, 
	"DOCUMENTS_ORGS" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."CONT_PRE_FULL_1" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."CONT_PRE_FULL_2" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."CONT_PRE_FULL_12" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."CONT_PRE_FULL_3" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" CHAR(44), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."CONT_PRE_FULL_123" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE TABLE "SNAUSER"."CONTACTS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" VARCHAR2(40), 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."APPLICATIONS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(13,2), 
	"REQ_SUMM_CURR" CHAR(1), 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(366), 
	"RA_REGION" VARCHAR2(192), 
	"RA_DISTRICT" VARCHAR2(192), 
	"RA_CITY" VARCHAR2(192), 
	"RA_SETTLEMENT" VARCHAR2(30), 
	"RA_STREET" VARCHAR2(192), 
	"RA_HOUSE" VARCHAR2(45), 
	"RA_BUILDING" VARCHAR2(12), 
	"RA_APARTMENT" VARCHAR2(30), 
	"RA_INDEX" VARCHAR2(18), 
	"LA_REGION" VARCHAR2(192), 
	"LA_DISTRICT" VARCHAR2(192), 
	"LA_CITY" VARCHAR2(192), 
	"LA_SETTLEMENT" VARCHAR2(30), 
	"LA_STREET" VARCHAR2(192), 
	"LA_HOUSE" VARCHAR2(45), 
	"LA_BUILDING" VARCHAR2(12), 
	"LA_APARTMENT" VARCHAR2(30), 
	"LA_INDEX" VARCHAR2(18), 
	"BA_REGION" VARCHAR2(192), 
	"BA_DISTRICT" VARCHAR2(192), 
	"BA_CITY" VARCHAR2(192), 
	"BA_SETTLEMENT" VARCHAR2(30), 
	"BA_STREET" VARCHAR2(192), 
	"BA_HOUSE" VARCHAR2(45), 
	"BA_BUILDING" VARCHAR2(12), 
	"BA_APARTMENT" VARCHAR2(30), 
	"BA_INDEX" VARCHAR2(18), 
	"WORK_ORG_NAME" VARCHAR2(765), 
	"PRODUCT_TYPE" VARCHAR2(765), 
	"REQ_CREATED_BRANCH" VARCHAR2(384), 
	"PASSPORT" VARCHAR2(40), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."APPLICATIONS" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(14,2), 
	"REQ_SUMM_CURR" VARCHAR2(12), 
	"SEX" NUMBER, 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(488), 
	"RA_COUNTRY" VARCHAR2(8), 
	"RA_REGION" VARCHAR2(256), 
	"RA_DISTRICT" VARCHAR2(256), 
	"RA_CITY" VARCHAR2(256), 
	"RA_SETTLEMENT" VARCHAR2(40), 
	"RA_STREET" VARCHAR2(256), 
	"RA_HOUSE" VARCHAR2(60), 
	"RA_BUILDING" VARCHAR2(16), 
	"RA_APARTMENT" VARCHAR2(40), 
	"RA_INDEX" VARCHAR2(24), 
	"LA_COUNTRY" VARCHAR2(8), 
	"LA_REGION" VARCHAR2(256), 
	"LA_DISTRICT" VARCHAR2(256), 
	"LA_CITY" VARCHAR2(256), 
	"LA_SETTLEMENT" VARCHAR2(40), 
	"LA_STREET" VARCHAR2(256), 
	"LA_HOUSE" VARCHAR2(60), 
	"LA_BUILDING" VARCHAR2(16), 
	"LA_APARTMENT" VARCHAR2(40), 
	"LA_INDEX" VARCHAR2(24), 
	"PRODUCT_TYPE" VARCHAR2(240), 
	"REQ_CREATED_BRANCH" VARCHAR2(360), 
	"SALARY" NUMBER, 
	"EDUCATION" NUMBER, 
	"IS_PENSION" NUMBER, 
	"PASSPORT" VARCHAR2(572), 
	"EMAIL" VARCHAR2(400), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	"WORK_TYPE" VARCHAR2(4), 
	"BA_COUNTRY" VARCHAR2(8), 
	"BA_INDEX" VARCHAR2(24), 
	"BA_REGION" VARCHAR2(256), 
	"BA_DISTRICT" VARCHAR2(256), 
	"BA_CITY" VARCHAR2(256), 
	"BA_SETTLEMENT" VARCHAR2(120), 
	"BA_STREET" VARCHAR2(256), 
	"BA_HOUSE" VARCHAR2(60), 
	"BA_BUILDING" VARCHAR2(16), 
	"BA_APARTMENT" VARCHAR2(40), 
	"WORK_ORG_NAME" VARCHAR2(1020)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 COMPRESS BASIC NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."TEST700" 
   (	"REQUEST_ID" NUMBER, 
	"NM" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."TEST700_INSERT_INTO" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"STATUS_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_DATE" DATE NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_DEQUEUE_MSG1" 
   (	"MSG_ID" VARCHAR2(40), 
	"MSG_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"OLD_STATUS_ID" NUMBER, 
	"V_NEW_STATUS_ID" NUMBER, 
	"STAMP" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."SNA_LOGS_PK" ON "SNAUSER"."SNA_LOGS" ("ID_LOG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE OR REPLACE TRIGGER "SNAUSER"."SNA_QUEUE_FIRE_AFTER_INSERT" 
after insert ON SNA_DEQUEUE_MSG
for each row
DECLARE
  FLAG VARCHAR2(20);
BEGIN
  --01. заполняем APPLICATIONS и CONTACTS
  --data_PKK(:new.REQUEST_ID);
  DATA_PKK_MOD(:new.REQUEST_ID);
  --02. логируем успешный факт выполнения
  --FLAG := '0';
  SELECT TO_CHAR(COUNT(*)) INTO FLAG FROM SNAUSER.APPLICATIONS WHERE REQUEST_ID=:new.REQUEST_ID and rownum=1;
  INSERT INTO SNA_DEQUEUE_MSG_TRG_LOG
        (REQUEST_ID, RETURN_VAL, DT_LOG, FLAG_SELECTED) VALUES 
        (:new.REQUEST_ID, 'ОК: '||TO_CHAR(sysdate, 'dd-mm-yyyy hh24:mi:ss'), sysdate, FLAG);
  --03. Пополняем таблицу APPLICATIONS_FROD_tmp с временными данными для проверки по фрод-правилам
  SFF."PR$UPD_APPLICATIONS_FROD"@SNA(:new.REQUEST_ID);
  
  --04. 
EXCEPTION
    WHEN OTHERS
    THEN /*NULL; */
      --02. логируем НЕуспешный факт выполнения
      INSERT INTO SNA_DEQUEUE_MSG_TRG_LOG
        (REQUEST_ID, RETURN_VAL, DT_LOG) VALUES 
        (:new.REQUEST_ID, 'ERR: '||TO_CHAR(sysdate, 'dd-mm-yyyy hh24:mi:ss'), sysdate);
END;
ALTER TRIGGER "SNAUSER"."SNA_QUEUE_FIRE_AFTER_INSERT" ENABLE;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."APPLICATIONS_TEMP" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(13,2), 
	"REQ_SUMM_CURR" CHAR(1), 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(366), 
	"RA_REGION" VARCHAR2(192), 
	"RA_DISTRICT" VARCHAR2(192), 
	"RA_CITY" VARCHAR2(192), 
	"RA_SETTLEMENT" VARCHAR2(30), 
	"RA_STREET" VARCHAR2(192), 
	"RA_HOUSE" VARCHAR2(45), 
	"RA_BUILDING" VARCHAR2(12), 
	"RA_APARTMENT" VARCHAR2(30), 
	"RA_INDEX" VARCHAR2(18), 
	"LA_REGION" VARCHAR2(192), 
	"LA_DISTRICT" VARCHAR2(192), 
	"LA_CITY" VARCHAR2(192), 
	"LA_SETTLEMENT" VARCHAR2(30), 
	"LA_STREET" VARCHAR2(192), 
	"LA_HOUSE" VARCHAR2(45), 
	"LA_BUILDING" VARCHAR2(12), 
	"LA_APARTMENT" VARCHAR2(30), 
	"LA_INDEX" VARCHAR2(18), 
	"BA_REGION" VARCHAR2(192), 
	"BA_DISTRICT" VARCHAR2(192), 
	"BA_CITY" VARCHAR2(192), 
	"BA_SETTLEMENT" VARCHAR2(30), 
	"BA_STREET" VARCHAR2(192), 
	"BA_HOUSE" VARCHAR2(45), 
	"BA_BUILDING" VARCHAR2(12), 
	"BA_APARTMENT" VARCHAR2(30), 
	"BA_INDEX" VARCHAR2(18), 
	"WORK_ORG_NAME" VARCHAR2(765), 
	"PRODUCT_TYPE" VARCHAR2(765), 
	"REQ_CREATED_BRANCH" VARCHAR2(384), 
	"PASSPORT" VARCHAR2(40), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE INDEX "SNAUSER"."SNA_APP_REQUEST_ID" ON "SNAUSER"."APPLICATIONS" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_LOGS" 
   (	"ID_LOG" NUMBER(*,1) NOT NULL ENABLE, 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"USERNAME" VARCHAR2(50), 
	"DATE_LOG" DATE, 
	"ERROR_LAST_TEXT" VARCHAR2(400), 
	"WARNING_LAST_TEXT" VARCHAR2(400), 
	"NAME_SCRIPT" VARCHAR2(100), 
	"COMM" VARCHAR2(254), 
	"TIMERUN" NUMBER, 
	"CNTNODE" NUMBER, 
	"CNTLINK" NUMBER, 
	"USERGROUP" VARCHAR2(40), 
	 CONSTRAINT "SNA_LOGS_PK" PRIMARY KEY ("ID_LOG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."A_PHONES_FULL" 
   (	"PHONES_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"PHONES_COMM" VARCHAR2(765), 
	"PHONES_AKT" NUMBER, 
	"PHONES_CREATED" DATE, 
	"MODIFICATION_DATE" DATE, 
	"PHONE" VARCHAR2(66), 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

   CREATE SEQUENCE  "SNAUSER"."SEQ_SNA_LOGS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 55641 CACHE 20 NOORDER  NOCYCLE ;

  CREATE OR REPLACE TRIGGER "SNAUSER"."SNA_LOGS_BEFORE_INSERT" 
before insert on SNA_LOGS
for each row
begin
  if :new.id_log is null then
    select SEQ_SNA_LOGS.nextval into :new.id_log from dual;
  end if;
end;
ALTER TRIGGER "SNAUSER"."SNA_LOGS_BEFORE_INSERT" ENABLE;

  CREATE TABLE "SFF"."APPLICATIONS_for_ins_tmp" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(14,2), 
	"REQ_SUMM_CURR" VARCHAR2(12), 
	"SEX" NUMBER, 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(488), 
	"RA_COUNTRY" VARCHAR2(8), 
	"RA_REGION" VARCHAR2(256), 
	"RA_DISTRICT" VARCHAR2(256), 
	"RA_CITY" VARCHAR2(256), 
	"RA_SETTLEMENT" VARCHAR2(40), 
	"RA_STREET" VARCHAR2(256), 
	"RA_HOUSE" VARCHAR2(60), 
	"RA_BUILDING" VARCHAR2(16), 
	"RA_APARTMENT" VARCHAR2(40), 
	"RA_INDEX" VARCHAR2(24), 
	"LA_COUNTRY" VARCHAR2(8), 
	"LA_REGION" VARCHAR2(256), 
	"LA_DISTRICT" VARCHAR2(256), 
	"LA_CITY" VARCHAR2(256), 
	"LA_SETTLEMENT" VARCHAR2(40), 
	"LA_STREET" VARCHAR2(256), 
	"LA_HOUSE" VARCHAR2(60), 
	"LA_BUILDING" VARCHAR2(16), 
	"LA_APARTMENT" VARCHAR2(40), 
	"LA_INDEX" VARCHAR2(24), 
	"PRODUCT_TYPE" VARCHAR2(240), 
	"REQ_CREATED_BRANCH" VARCHAR2(360), 
	"SALARY" NUMBER, 
	"EDUCATION" NUMBER, 
	"IS_PENSION" NUMBER, 
	"PASSPORT" VARCHAR2(572), 
	"EMAIL" VARCHAR2(400), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	"WORK_TYPE" VARCHAR2(4), 
	"BA_COUNTRY" VARCHAR2(8), 
	"BA_INDEX" VARCHAR2(24), 
	"BA_REGION" VARCHAR2(256), 
	"BA_DISTRICT" VARCHAR2(256), 
	"BA_CITY" VARCHAR2(256), 
	"BA_SETTLEMENT" VARCHAR2(120), 
	"BA_STREET" VARCHAR2(256), 
	"BA_HOUSE" VARCHAR2(60), 
	"BA_BUILDING" VARCHAR2(16), 
	"BA_APARTMENT" VARCHAR2(40), 
	"WORK_ORG_NAME" VARCHAR2(1020)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 COMPRESS BASIC NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_DEFOLT_REQUEST_ID" ON "SFF"."RP_DEFOLT" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."RP_DEFOLT" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"MODIFICATION_DATE" DATE, 
	"MOP_LST5" VARCHAR2(20), 
	"MOP_FST5" VARCHAR2(20), 
	"MOP_LST_TRIM" VARCHAR2(20), 
	"DEFOLT" NUMBER, 
	"STATUS_ID" NUMBER, 
	"MOP_DELAY" VARCHAR2(500), 
	"RP_DEFOLT_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SNAUSER"."I_SL_LABEL_GROUP" ON "SNAUSER"."SNA_LINKS" ("LABEL", "GROUP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 2 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_LINKS_for_ins_tmp" 
   (	"REQUEST_ID" VARCHAR2(12), 
	"PERSON_ID" VARCHAR2(12), 
	"LINK_TYPE" VARCHAR2(60), 
	"LABEL" VARCHAR2(600), 
	"LINK_START_DT" DATE, 
	"LINK_END_DT" DATE, 
	"WEIGHT" NUMBER(3,0), 
	"GROUP" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 COMPRESS BASIC NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
  PARALLEL 3 ;

  CREATE INDEX "SNAUSER"."I_SL_LINK_TYPE" ON "SNAUSER"."SNA_LINKS" ("LINK_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."I_SL_PERSON_ID" ON "SNAUSER"."SNA_LINKS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."SNA_LOGS_GROUP" 
   (	"USERNAME" VARCHAR2(40), 
	"USERGROUP" VARCHAR2(40), 
	"FIO" VARCHAR2(120), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

   CREATE SEQUENCE  "SFF"."FROD_RULE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 621810 CACHE 20 NOORDER  NOCYCLE ;

  CREATE TABLE "SFF"."FROD_RULE" 
   (	"FROD_RULE_ID" NUMBER NOT NULL ENABLE, 
	"FROD_RULE_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"FIO" VARCHAR2(250), 
	"DR" VARCHAR2(30), 
	"STATUS_ID" NUMBER, 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"TYPE_REL" VARCHAR2(100), 
	"TYPE_REL_DESC" VARCHAR2(400), 
	"DAY_BETWEEN" NUMBER, 
	"REQUEST_ID_REL" VARCHAR2(1000), 
	"PERSON_ID_REL" NUMBER, 
	"REQ_DATE_REL" DATE, 
	"FIO_REL" VARCHAR2(250), 
	"DR_REL" VARCHAR2(30), 
	"STATUS_ID_REL" NUMBER, 
	"SCORE_TREE_ROUTE_ID_REL" NUMBER, 
	"CREATED_GROUP_ID_REL" NUMBER, 
	"INFO_EQ" VARCHAR2(400), 
	"INFO_NEQ" VARCHAR2(400), 
	"INFO_NEQ_REL" VARCHAR2(400), 
	"F_POS" NUMBER, 
	 CONSTRAINT "TABLE1_PK" PRIMARY KEY ("FROD_RULE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE OR REPLACE TRIGGER "SFF"."FROD_RULE_TRG" BEFORE INSERT ON SFF.FROD_RULE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FROD_RULE_ID IS NULL THEN
      SELECT FROD_RULE_SEQ.NEXTVAL INTO :NEW.FROD_RULE_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  
  IF NOT :NEW.REQUEST_ID_REL IS NULL THEN
    --SELECT SFF.FN_STRIP_DUBL_IN_STR(:NEW.REQUEST_ID_REL) INTO :NEW.REQUEST_ID_REL FROM DUAL;
    :NEW.REQUEST_ID_REL := SFF.FN_DEDUBL_STR(:NEW.REQUEST_ID_REL);
  END IF;
END;
ALTER TRIGGER "SFF"."FROD_RULE_TRG" ENABLE;

  CREATE TABLE "SFF"."RP_DEFOLT_tmp" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"MODIFICATION_DATE" DATE, 
	"MOP_LST5" VARCHAR2(20), 
	"MOP_FST5" VARCHAR2(20), 
	"MOP_LST_TRIM" VARCHAR2(20), 
	"DEFOLT" NUMBER, 
	"STATUS_ID" NUMBER, 
	"MOP_DELAY" VARCHAR2(500), 
	"RP_DEFOLT_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."TABLE1_PK" ON "SFF"."FROD_RULE" ("FROD_RULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."RP_BNK_HISTORY_LOG" 
   (	"REQUEST_ID" NUMBER, 
	"REQUEST_REACT_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"DATE_INS" DATE DEFAULT SYSDATE, 
	"BNK_CODE" NUMBER, 
	"BNK_TYPE" NUMBER, 
	"DATE_EXEC" DATE, 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."RP_BNK_TMP" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"DATE_INS" DATE, 
	"BNK_CODE" NUMBER, 
	"BNK_TYPE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_BNK_HIST_PERSON_ID" ON "SFF"."RP_BNK_HISTORY_LOG" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."RP_BNK" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"DATE_INS" DATE, 
	"BNK_CODE" NUMBER, 
	"BNK_TYPE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_DEFOLT_PERSON_ID" ON "SFF"."RP_DEFOLT" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_BNK_REQUEST_ID" ON "SFF"."RP_BNK" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_FIO" ON "SFF"."APPLICATIONS" ("FIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_C_REQUEST_CR_PACK" 
   (	"REQUEST_ID" NUMBER, 
	"REQUEST_CREDIT_ID" NUMBER, 
	"PRIVILEGE_ID" NUMBER, 
	"CURRENCY_ID" NUMBER, 
	"SCHEMS_ID" NUMBER, 
	"SUMMA" NUMBER(13,2), 
	"TYPE_CREDIT_ID" NUMBER, 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE INDEX "SFF"."I_RP_BNK_HIST_REQUEST_ID" ON "SFF"."RP_BNK_HISTORY_LOG" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_BNK_HIST_RR_ID" ON "SFF"."RP_BNK_HISTORY_LOG" ("REQUEST_REACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_DR" ON "SFF"."APPLICATIONS_FROD" ("DR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_BNK_HIST_ID" ON "SFF"."RP_BNK_HISTORY_LOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."C_REQUEST_FULL_ST_RID" 
   (	"REQUEST_ID" NUMBER, 
	"STATUS_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"CREATED_DATE" DATE
   ) ON COMMIT DELETE ROWS ;

  CREATE TABLE "SFF"."APPLICATIONS_FROD" 
   (	"DR" VARCHAR2(20), 
	"FIRST_L" VARCHAR2(4), 
	"FIRST_F" VARCHAR2(4), 
	"FIRST_M" VARCHAR2(4), 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"FIO" VARCHAR2(500), 
	"RA_REGION" VARCHAR2(100), 
	"RA_DISTRICT" VARCHAR2(100), 
	"RA_CITY" VARCHAR2(100), 
	"RA_STREET" VARCHAR2(100), 
	"RA_HOUSE" VARCHAR2(30), 
	"RA_BUILDING" VARCHAR2(10), 
	"RA_APARTMENT" VARCHAR2(20), 
	"LA_REGION" VARCHAR2(100), 
	"LA_DISTRICT" VARCHAR2(100), 
	"LA_CITY" VARCHAR2(100), 
	"LA_STREET" VARCHAR2(100), 
	"LA_HOUSE" VARCHAR2(30), 
	"LA_BUILDING" VARCHAR2(10), 
	"LA_APARTMENT" VARCHAR2(20), 
	"PASSPORT" VARCHAR2(30), 
	"EMAIL" VARCHAR2(100), 
	"MOBILE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_RP_BNK_PERSON_ID" ON "SFF"."RP_BNK" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_FIO" ON "SFF"."APPLICATIONS_FROD" ("FIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_FIRST_LFM" ON "SFF"."APPLICATIONS_FROD" ("FIRST_L", "FIRST_F", "FIRST_M") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_HOME_PHONE" ON "SFF"."APPLICATIONS_FROD" ("HOME_PHONE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_LA_ADR" ON "SFF"."APPLICATIONS_FROD" ("LA_REGION", "LA_DISTRICT", "LA_CITY", "LA_STREET", "LA_HOUSE", "LA_BUILDING", "LA_APARTMENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_MOBILE" ON "SFF"."APPLICATIONS_FROD" ("MOBILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_PASSPORT" ON "SFF"."APPLICATIONS_FROD" ("PASSPORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_PERSON_ID" ON "SFF"."APPLICATIONS_FROD" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_RA_ADR" ON "SFF"."APPLICATIONS_FROD" ("RA_REGION", "RA_DISTRICT", "RA_CITY", "RA_STREET", "RA_HOUSE", "RA_BUILDING", "RA_APARTMENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_REQUEST_ID" ON "SFF"."APPLICATIONS_FROD" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APPFROD_REQ_DATE" ON "SFF"."APPLICATIONS_FROD" ("REQ_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_PERSON_ID" ON "SFF"."APPLICATIONS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_TYPES" 
   (	"TYPE_ID" NUMBER, 
	"TYPE_NAME" VARCHAR2(32), 
	"NODE_SYMBOL" VARCHAR2(120), 
	"NODE_COLOR" VARCHAR2(20), 
	"BORDER_SIZE" NUMBER, 
	"LINK_COLOR" VARCHAR2(20), 
	"LINK_TYPE" VARCHAR2(32), 
	"LINK_WIDTH" NUMBER, 
	"TYPE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_C_REQUEST_INF_PACK" 
   (	"REQUEST_INFO_ID" NUMBER, 
	"REQUEST_ID" NUMBER, 
	"FIO_ID" NUMBER, 
	"SEX_ID" NUMBER, 
	"BDATE" DATE, 
	"BADR_ID" NUMBER, 
	"MDOC_ID" NUMBER, 
	"MADR_ID" NUMBER, 
	"LADR_ID" NUMBER, 
	"DADR_ID" NUMBER, 
	"EDUC" VARCHAR2(765), 
	"WORK_ID" NUMBER, 
	"DOHOD_CALC" NUMBER(13,2), 
	"DOHOD_DECL_ALL" NUMBER(13,2), 
	"FAMILY" VARCHAR2(765), 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_PHONES_4SR_NEW" 
   (	"REQUEST_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"MOBILE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."EMAIL" 
   (	"EMAIL_ID" NUMBER(10,0), 
	"EMAIL" VARCHAR2(300), 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"EMAIL_AKT" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."FIO4_HISTORY" 
   (	"FIO_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"FIO_AKT" NUMBER, 
	"FIO4SEARCH" VARCHAR2(366)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."ADDRESS_4SR" 
   (	"ADDRESS_ID" NUMBER, 
	"GEO_ID" NUMBER, 
	"ADDRESS_STR" VARCHAR2(4000), 
	"QUALITY_CODE" VARCHAR2(765), 
	"SHOTNAME_CIT" VARCHAR2(30), 
	"SHOTNAME_STR" VARCHAR2(30), 
	"COUNTRIES_ISO2" VARCHAR2(6), 
	"REGIONS_NAMES" VARCHAR2(192), 
	"AREAS_NAMES" VARCHAR2(192), 
	"CITIES_NAMES" VARCHAR2(192), 
	"STREETS_NAMES" VARCHAR2(192), 
	"HOUSE" VARCHAR2(45), 
	"BUILD" VARCHAR2(12), 
	"FLAT" VARCHAR2(30), 
	"POSTOFFICE" VARCHAR2(18)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_ADR_ORG_PREV" 
   (	"WORKS_ID" NUMBER(10,0), 
	"ORG_ID" NUMBER(*,0), 
	"ORG_NAME" VARCHAR2(765), 
	"ADDRESS_ID" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_ADR_ORG" 
   (	"WORKS_ID" NUMBER(10,0), 
	"ORG_ID" NUMBER(*,0), 
	"ORG_NAME" VARCHAR2(765), 
	"QUALITY_CODE_N" NUMBER, 
	"ADDRESS_ID" NUMBER, 
	"GEO_ID" NUMBER, 
	"ADDRESS_STR" VARCHAR2(4000), 
	"QUALITY_CODE" VARCHAR2(765), 
	"BA_SETTLEMENT" VARCHAR2(30), 
	"SHOTNAME_STR" VARCHAR2(30), 
	"BA_COUNTRY" VARCHAR2(6), 
	"BA_REGION" VARCHAR2(192), 
	"BA_DISTRICT" VARCHAR2(192), 
	"BA_CITY" VARCHAR2(192), 
	"BA_STREET" VARCHAR2(192), 
	"BA_HOUSE" VARCHAR2(45), 
	"BA_BUILDING" VARCHAR2(12), 
	"BA_APARTMENT" VARCHAR2(30), 
	"BA_INDEX" VARCHAR2(18)
   ) ON COMMIT DELETE ROWS ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_DOCS" 
   (	"DOCUMENTS_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"DOCUMENTS_AKT" NUMBER, 
	"DOCUMENTS_CREATED" DATE, 
	"DOCUMENTS_SERIAL" VARCHAR2(45), 
	"DOCUMENTS_NUMBER" VARCHAR2(384), 
	"DOCUMENTS_TYPE" NUMBER, 
	"DOCUMENTS_ORGS" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE INDEX "SFF"."I_APP_FIT_REQUEST_ID" ON "SFF"."APPLICATIONS_for_ins_tmp" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_EMAIL" ON "SFF"."APPLICATIONS" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_PASSPORT" ON "SFF"."APPLICATIONS" ("PASSPORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."CONT_PRE_FULL_123" 
   (	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE TABLE "SFF"."CONTACTS_TEMP" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"CONTACT_PERSON_ID" NUMBER, 
	"CONTACT_RELATION" VARCHAR2(150), 
	"CONTACT_FIO" VARCHAR2(765), 
	"CONTACT_PHONE" VARCHAR2(40), 
	"IS_NEW_DATA" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."APPLICATIONS_TEMP" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(13,2), 
	"REQ_SUMM_CURR" CHAR(1), 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(366), 
	"RA_REGION" VARCHAR2(192), 
	"RA_DISTRICT" VARCHAR2(192), 
	"RA_CITY" VARCHAR2(192), 
	"RA_SETTLEMENT" VARCHAR2(30), 
	"RA_STREET" VARCHAR2(192), 
	"RA_HOUSE" VARCHAR2(45), 
	"RA_BUILDING" VARCHAR2(12), 
	"RA_APARTMENT" VARCHAR2(30), 
	"RA_INDEX" VARCHAR2(18), 
	"LA_REGION" VARCHAR2(192), 
	"LA_DISTRICT" VARCHAR2(192), 
	"LA_CITY" VARCHAR2(192), 
	"LA_SETTLEMENT" VARCHAR2(30), 
	"LA_STREET" VARCHAR2(192), 
	"LA_HOUSE" VARCHAR2(45), 
	"LA_BUILDING" VARCHAR2(12), 
	"LA_APARTMENT" VARCHAR2(30), 
	"LA_INDEX" VARCHAR2(18), 
	"BA_REGION" VARCHAR2(192), 
	"BA_DISTRICT" VARCHAR2(192), 
	"BA_CITY" VARCHAR2(192), 
	"BA_SETTLEMENT" VARCHAR2(30), 
	"BA_STREET" VARCHAR2(192), 
	"BA_HOUSE" VARCHAR2(45), 
	"BA_BUILDING" VARCHAR2(12), 
	"BA_APARTMENT" VARCHAR2(30), 
	"BA_INDEX" VARCHAR2(18), 
	"WORK_ORG_NAME" VARCHAR2(765), 
	"PRODUCT_TYPE" VARCHAR2(765), 
	"REQ_CREATED_BRANCH" VARCHAR2(384), 
	"PASSPORT" VARCHAR2(40), 
	"EMAIL" VARCHAR2(300), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE GLOBAL TEMPORARY TABLE "SFF"."A_PHONES_FULL" 
   (	"PHONES_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"PHONES_COMM" VARCHAR2(765), 
	"PHONES_AKT" NUMBER, 
	"PHONES_CREATED" DATE, 
	"MODIFICATION_DATE" DATE, 
	"PHONE" VARCHAR2(66), 
	"RNMBR" NUMBER
   ) ON COMMIT DELETE ROWS ;

  CREATE INDEX "SFF"."I_APP_HOME_PHONE" ON "SFF"."APPLICATIONS" ("HOME_PHONE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_MOBILE" ON "SFF"."APPLICATIONS" ("MOBILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_REQUEST_ID" ON "SFF"."APPLICATIONS" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_REQ_DATE" ON "SFF"."APPLICATIONS" ("REQ_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_WORK_PHONE" ON "SFF"."APPLICATIONS" ("WORK_PHONE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."REGIONS_PASP" 
   (	"COUNTRIES_ID" NUMBER NOT NULL ENABLE, 
	"REGIONS_ID" NUMBER NOT NULL ENABLE, 
	"REGIONS_NAME" VARCHAR2(192) NOT NULL ENABLE, 
	"REGIONS_TYPE" NUMBER NOT NULL ENABLE, 
	"REGIONS_AKT" NUMBER NOT NULL ENABLE, 
	"REGIONS_PK" NUMBER NOT NULL ENABLE, 
	"PASP2_CHAR" VARCHAR2(20), 
	"PASP2_NUM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SNAUSER"."I_SNA_DEQUEUE_MSG_REQUEST_ID" ON "SNAUSER"."SNA_DEQUEUE_MSG" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."APPLICATIONS_FROD_tmp" 
   (	"DR" VARCHAR2(20), 
	"FIRST_L" VARCHAR2(4), 
	"FIRST_F" VARCHAR2(4), 
	"FIRST_M" VARCHAR2(4), 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"FIO" VARCHAR2(500), 
	"RA_REGION" VARCHAR2(100), 
	"RA_DISTRICT" VARCHAR2(100), 
	"RA_CITY" VARCHAR2(100), 
	"RA_STREET" VARCHAR2(100), 
	"RA_HOUSE" VARCHAR2(30), 
	"RA_BUILDING" VARCHAR2(10), 
	"RA_APARTMENT" VARCHAR2(20), 
	"LA_REGION" VARCHAR2(100), 
	"LA_DISTRICT" VARCHAR2(100), 
	"LA_CITY" VARCHAR2(100), 
	"LA_STREET" VARCHAR2(100), 
	"LA_HOUSE" VARCHAR2(30), 
	"LA_BUILDING" VARCHAR2(10), 
	"LA_APARTMENT" VARCHAR2(20), 
	"PASSPORT" VARCHAR2(30), 
	"EMAIL" VARCHAR2(100), 
	"MOBILE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

   CREATE SEQUENCE  "SFF"."FROD_RULE_DEMO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 215221 CACHE 20 NOORDER  NOCYCLE ;

  CREATE TABLE "SFF"."C_STATUS" 
   (	"STATUS_ID" NUMBER, 
	"STATUS_NAME" VARCHAR2(200), 
	"STATUS_CODE" VARCHAR2(80), 
	"STATUS_CODENUM" NUMBER, 
	"STATUS_GROUP" NUMBER, 
	"DELETED" NUMBER, 
	"DATE_INS" DATE, 
	"STATUS_NOTE" CLOB, 
	"CLOSE_REQUEST_CREDIT_EDIT" VARCHAR2(4), 
	"STATUS_GROUP_ID#CRM" NUMBER, 
	"PERSON_UNLOAD#CRM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" 
 LOB ("STATUS_NOTE") STORE AS BASICFILE (
  TABLESPACE "SFF" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

  CREATE INDEX "SNAUSER"."I_SL_START_DT" ON "SNAUSER"."SNA_LINKS" ("LINK_START_DT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 1 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SFF"."I_REQUEST_AC_REQUEST_ID" ON "SFF"."REQUEST_ACCREDITATION" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_DEQUEUE_MSG_TRG_LOG" 
   (	"REQUEST_ID" NUMBER, 
	"RETURN_VAL" VARCHAR2(100), 
	"DT_LOG" DATE, 
	"FLAG_SELECTED" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."D_BNK" 
   (	"BNK_CODE" NUMBER, 
	"BNK_DESC" VARCHAR2(254 CHAR), 
	"TYPE_CODE" VARCHAR2(100 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."REQUEST_ACCREDITATION" 
   (	"REQUEST_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"CREATED_DATE" DATE, 
	"TYPE_REQUEST_ID" NUMBER, 
	"STATUS_ID" NUMBER, 
	"CREATED_UESR_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"GROUPS_NAME" VARCHAR2(200)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_DEQUEUE_MSG_NOAKT" 
   (	"MSG_ID" VARCHAR2(40), 
	"MSG_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"OLD_STATUS_ID" NUMBER, 
	"V_NEW_STATUS_ID" NUMBER, 
	"STAMP" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."I_SNA_DEQUEUE_MSG_RETRO_RID" ON "SNAUSER"."SNA_DEQUEUE_MSG_RETRO" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."FROD_RULE_DEMO" 
   (	"FROD_RULE_ID" NUMBER NOT NULL ENABLE, 
	"FROD_RULE_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"FIO" VARCHAR2(250), 
	"DR" VARCHAR2(30), 
	"STATUS_ID" NUMBER, 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"TYPE_REL" VARCHAR2(100), 
	"TYPE_REL_DESC" VARCHAR2(400), 
	"DAY_BETWEEN" NUMBER, 
	"REQUEST_ID_REL" VARCHAR2(1000), 
	"PERSON_ID_REL" NUMBER, 
	"REQ_DATE_REL" DATE, 
	"FIO_REL" VARCHAR2(250), 
	"DR_REL" VARCHAR2(30), 
	"STATUS_ID_REL" NUMBER, 
	"SCORE_TREE_ROUTE_ID_REL" NUMBER, 
	"CREATED_GROUP_ID_REL" NUMBER, 
	"INFO_EQ" VARCHAR2(400), 
	"INFO_NEQ" VARCHAR2(400), 
	"INFO_NEQ_REL" VARCHAR2(400), 
	"F_POS" NUMBER, 
	 CONSTRAINT "FROD_RULE_DEMO_FROD_RULE_ID_PK" PRIMARY KEY ("FROD_RULE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SNAUSER"."SNA_DEQUEUE_MSG_RETRO" 
   (	"MSG_ID" VARCHAR2(40), 
	"MSG_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"OLD_STATUS_ID" NUMBER, 
	"V_NEW_STATUS_ID" NUMBER, 
	"STAMP" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SFF"."SFF_C_REQUEST" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"TYPE_REQUEST_ID" NUMBER, 
	"STATUS_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"CREATED_USER_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"MODIFICATION_DATE" DATE, 
	"REQUEST_REACT_ID_LAST" NUMBER, 
	"REQUEST_CREDIT_ID_LAST" NUMBER, 
	"REQUEST_INFO_ID_LAST" NUMBER, 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"FLAG_NEW_DATA" NUMBER, 
	"PARENT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."FROD_RULE_DEMO_FROD_RULE_ID_PK" ON "SFF"."FROD_RULE_DEMO" ("FROD_RULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."I_SFF_C_REQUEST_RID" ON "SFF"."SFF_C_REQUEST" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE OR REPLACE TRIGGER "SFF"."FROD_RULE_DEMO_TRG" BEFORE INSERT ON SFF.FROD_RULE_DEMO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FROD_RULE_ID IS NULL THEN
      SELECT FROD_RULE_DEMO_SEQ.NEXTVAL INTO :NEW.FROD_RULE_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  
  IF NOT :NEW.REQUEST_ID_REL IS NULL THEN
    --SELECT SFF.FN_STRIP_DUBL_IN_STR(:NEW.REQUEST_ID_REL) INTO :NEW.REQUEST_ID_REL FROM DUAL;
    :NEW.REQUEST_ID_REL := SFF.FN_DEDUBL_STR(:NEW.REQUEST_ID_REL);
  END IF;
END;
ALTER TRIGGER "SFF"."FROD_RULE_DEMO_TRG" ENABLE;

  CREATE INDEX "SNAUSER"."I_APP_FROD_PAPS_DIST_DR" ON "SFF"."APPLICATIONS_FROD" (97) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "ODS"."I_AH_AH_ID" ON "ODS"."PKK_ADDRESS_HISTORY" ("ADDRESS_HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SFF"."VIEW_SNA_LOGS_STAT" 
   (	"USERNAME" VARCHAR2(50), 
	"USERGROUP" VARCHAR2(40), 
	"FIO" VARCHAR2(120), 
	"DISTINCT_REQUEST_ID" NUMBER, 
	"FIRST_LOGIN_SNA" DATE, 
	"LAST_LOGIN_SNA" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."APPLICATIONS_TEST" 
   (	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"REQ_SUMM" NUMBER(14,2), 
	"REQ_SUMM_CURR" VARCHAR2(12), 
	"SEX" NUMBER, 
	"BIRTHDAY" DATE, 
	"FIO" VARCHAR2(488), 
	"RA_COUNTRY" VARCHAR2(8), 
	"RA_REGION" VARCHAR2(256), 
	"RA_DISTRICT" VARCHAR2(256), 
	"RA_CITY" VARCHAR2(256), 
	"RA_SETTLEMENT" VARCHAR2(40), 
	"RA_STREET" VARCHAR2(256), 
	"RA_HOUSE" VARCHAR2(60), 
	"RA_BUILDING" VARCHAR2(16), 
	"RA_APARTMENT" VARCHAR2(40), 
	"RA_INDEX" VARCHAR2(24), 
	"LA_COUNTRY" VARCHAR2(8), 
	"LA_REGION" VARCHAR2(256), 
	"LA_DISTRICT" VARCHAR2(256), 
	"LA_CITY" VARCHAR2(256), 
	"LA_SETTLEMENT" VARCHAR2(40), 
	"LA_STREET" VARCHAR2(256), 
	"LA_HOUSE" VARCHAR2(60), 
	"LA_BUILDING" VARCHAR2(16), 
	"LA_APARTMENT" VARCHAR2(40), 
	"LA_INDEX" VARCHAR2(24 CHAR), 
	"PRODUCT_TYPE" VARCHAR2(240), 
	"REQ_CREATED_BRANCH" VARCHAR2(360), 
	"SALARY" NUMBER, 
	"EDUCATION" NUMBER, 
	"IS_PENSION" NUMBER, 
	"PASSPORT" VARCHAR2(572), 
	"EMAIL" VARCHAR2(400), 
	"MOBILE" NUMBER, 
	"WORK_PHONE" NUMBER, 
	"HOME_PHONE" NUMBER, 
	"IS_NEW_CLIENT" NUMBER, 
	"IS_NEW_DATA" NUMBER, 
	"WORK_TYPE" VARCHAR2(4), 
	"BA_COUNTRY" VARCHAR2(8), 
	"BA_INDEX" VARCHAR2(24), 
	"BA_REGION" VARCHAR2(256), 
	"BA_DISTRICT" VARCHAR2(256), 
	"BA_CITY" VARCHAR2(256), 
	"BA_SETTLEMENT" VARCHAR2(120), 
	"BA_STREET" VARCHAR2(256), 
	"BA_HOUSE" VARCHAR2(60), 
	"BA_BUILDING" VARCHAR2(16), 
	"BA_APARTMENT" VARCHAR2(40), 
	"WORK_ORG_NAME" VARCHAR2(1020)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 COMPRESS BASIC NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "ODS"."I_DH_INFO_OBJECTS_ID" ON "ODS"."PKK_DOCUMENTS_HISTORY_INFO" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_PKK_ADDRESS_A_ID" ON "ODS"."PKK_ADDRESS" ("ADDRESS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_DOCUMENTS_HISTORY_INFO" 
   (	"DOCUMENTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"DOCUMENTS_AKT" NUMBER NOT NULL ENABLE, 
	"DOCUMENTS_CREATED" DATE NOT NULL ENABLE, 
	"CREATED_SOURCE" NUMBER NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_IPADR" VARCHAR2(45) NOT NULL ENABLE, 
	"MODIFICATION_DATE" DATE, 
	"MODIFICATION_SOURCE" NUMBER, 
	"MODIFICATION_USER_ID" NUMBER, 
	"MODIFICATION_GROUP_ID" NUMBER, 
	"MODIFICATION_IPADR" VARCHAR2(45), 
	"DOCUMENTS_HISTORY_ID" NUMBER, 
	"DOCUMENTS_TYPE" NUMBER, 
	"DOCUMENTS_NAME" VARCHAR2(450), 
	"DOCUMENTS_SERIAL" VARCHAR2(45), 
	"DOCUMENTS_NUMBER" VARCHAR2(384), 
	"DOCUMENTS_ORGS" NUMBER, 
	"DOCUMENTS_DATE" DATE, 
	"OBJECTS_TYPE_DOC" NUMBER, 
	"DATE_UPD" DATE, 
	"DOCUMENTS_RANK" NUMBER(6,0) DEFAULT 1, 
	"OBJECTS_RANK" NUMBER(6,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_ADDRESS_HISTORY" 
   (	"ADDRESS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"ADDRESS_AKT" NUMBER, 
	"ADDRESS_CREATED" DATE NOT NULL ENABLE, 
	"CREATED_SOURCE" NUMBER NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_IPADR" VARCHAR2(45) NOT NULL ENABLE, 
	"MODIFICATION_DATE" DATE, 
	"MODIFICATION_SOURCE" NUMBER, 
	"MODIFICATION_USER_ID" NUMBER, 
	"MODIFICATION_GROUP_ID" NUMBER, 
	"MODIFICATION_IPADR" VARCHAR2(45), 
	"ADDRESS_HISTORY_ID" NUMBER NOT NULL ENABLE, 
	"ADDRESS_COMM" VARCHAR2(765), 
	"DATE_UPD" DATE, 
	"ADDRESS_RANK" NUMBER(6,0) DEFAULT 1, 
	"OBJECTS_RANK" NUMBER(6,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SFF"."SFF_PHONES" 
   (	"PHONES_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"PHONES_AKT" NUMBER, 
	"PHONES_COMM" VARCHAR2(765), 
	"PHONES_CREATED" DATE NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"MODIFICATION_DATE" DATE, 
	"PHONES_LAST" NUMBER, 
	"FAMILY_REL" NUMBER, 
	"PHONE" VARCHAR2(66), 
	"ADDRESS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."I_SFF_PHONES_PH_ID" ON "SFF"."SFF_PHONES" ("PHONES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_APP_TEST_RID" ON "SFF"."APPLICATIONS_TEST" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."I_SFF_PHONES_OO_AKT" ON "SFF"."SFF_PHONES" ("OBJECTS_ID", "OBJECTS_TYPE", "PHONES_AKT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "SFF"."FROD_RULE_DEMO1" 
   (	"FROD_RULE_ID" NUMBER NOT NULL ENABLE, 
	"FROD_RULE_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"PERSON_ID" NUMBER, 
	"REQ_DATE" DATE, 
	"FIO" VARCHAR2(250), 
	"DR" VARCHAR2(30), 
	"STATUS_ID" NUMBER, 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"TYPE_REL" VARCHAR2(100), 
	"TYPE_REL_DESC" VARCHAR2(400), 
	"DAY_BETWEEN" NUMBER, 
	"REQUEST_ID_REL" VARCHAR2(1000), 
	"PERSON_ID_REL" NUMBER, 
	"REQ_DATE_REL" DATE, 
	"FIO_REL" VARCHAR2(250), 
	"DR_REL" VARCHAR2(30), 
	"STATUS_ID_REL" NUMBER, 
	"SCORE_TREE_ROUTE_ID_REL" NUMBER, 
	"CREATED_GROUP_ID_REL" NUMBER, 
	"INFO_EQ" VARCHAR2(400), 
	"INFO_NEQ" VARCHAR2(400), 
	"INFO_NEQ_REL" VARCHAR2(400), 
	"F_POS" NUMBER, 
	 CONSTRAINT "FROD_RULE_DEMO1_FROD_RUL_ID_PK" PRIMARY KEY ("FROD_RULE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE UNIQUE INDEX "SFF"."FROD_RULE_DEMO1_FROD_RUL_ID_PK" ON "SFF"."FROD_RULE_DEMO1" ("FROD_RULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "ODS"."PKK_ADDRESS" 
   (	"ADDRESS_ID" NUMBER NOT NULL ENABLE, 
	"COUNTRY" VARCHAR2(6), 
	"REGIONS_UID" NUMBER NOT NULL ENABLE, 
	"REGIONS_NAMES" VARCHAR2(192), 
	"AREAS_UID" NUMBER NOT NULL ENABLE, 
	"AREAS_NAMES" VARCHAR2(192), 
	"CITIES_UID" NUMBER NOT NULL ENABLE, 
	"CITIES_NAMES" VARCHAR2(192), 
	"CITIES_TYPE" NUMBER, 
	"SHOTNAME_CIT" VARCHAR2(30), 
	"STREETS_UID" NUMBER NOT NULL ENABLE, 
	"STREETS_NAMES" VARCHAR2(192), 
	"STREETS_TYPE" NUMBER, 
	"SHOTNAME_STR" VARCHAR2(30), 
	"HOUSE" VARCHAR2(45), 
	"BUILD" VARCHAR2(12), 
	"FLAT" VARCHAR2(30), 
	"POSTOFFICE" VARCHAR2(18), 
	"GEO_ID" NUMBER, 
	"QUALITY_CODE" VARCHAR2(765), 
	"GEO_LAT" NUMBER, 
	"GEO_LNG" NUMBER, 
	"GEO_QC" VARCHAR2(765), 
	"GEO_ADR" VARCHAR2(4000), 
	"GEO_CREATED" DATE, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE TRIGGER "SFF"."FROD_RULE_DEMO_TRG_1" BEFORE INSERT ON SFF.FROD_RULE_DEMO1 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FROD_RULE_ID IS NULL THEN
      SELECT FROD_RULE_DEMO1_SEQ.NEXTVAL INTO :NEW.FROD_RULE_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  
  IF NOT :NEW.REQUEST_ID_REL IS NULL THEN
    --SELECT SFF.FN_STRIP_DUBL_IN_STR(:NEW.REQUEST_ID_REL) INTO :NEW.REQUEST_ID_REL FROM DUAL;
    :NEW.REQUEST_ID_REL := SFF.FN_DEDUBL_STR(:NEW.REQUEST_ID_REL);
  END IF;
END;
ALTER TRIGGER "SFF"."FROD_RULE_DEMO_TRG_1" ENABLE;

   CREATE SEQUENCE  "SFF"."FROD_RULE_DEMO1_SEQ"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 2430701 CACHE 20 NOORDER  NOCYCLE ;

  CREATE UNIQUE INDEX "ODS"."I_DH_INFO_DH_ID" ON "ODS"."PKK_DOCUMENTS_HISTORY_INFO" ("DOCUMENTS_HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_EMAIL" 
   (	"EMAIL_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(300), 
	"EMAIL_AKT" NUMBER, 
	"EMAIL_CREATED" DATE NOT NULL ENABLE, 
	"CREATED_SOURCE" NUMBER NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_IPADR" VARCHAR2(45) NOT NULL ENABLE, 
	"MODIFICATION_DATE" DATE, 
	"DATE_UPD" DATE DEFAULT SYSDATE, 
	"EMAIL_BCK" VARCHAR2(300)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_PERSON_INFO" 
   (	"FIO_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"FIO_AKT" NUMBER, 
	"FIO_CREATED" DATE, 
	"FIO_HISTORY_PK" NUMBER NOT NULL ENABLE, 
	"FIO4SEARCH" VARCHAR2(366), 
	"BIRTH" DATE, 
	"MODIFICATION_DATE" DATE, 
	"DATE_UPD" DATE, 
	"FIO_RANK" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_EMAIL_EMAIL_ID" ON "ODS"."PKK_EMAIL" ("EMAIL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_PERSON_INFO_FIO_H_PK" ON "ODS"."PKK_PERSON_INFO" ("FIO_HISTORY_PK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_EMAIL_OBJECTS_ID" ON "ODS"."PKK_EMAIL" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_C_REQUEST_SNA" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PARENT_ID" NUMBER, 
	"TYPE_REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"STATUS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_DATE" DATE NOT NULL ENABLE, 
	"MODIFICATION_DATE_REQUEST" DATE NOT NULL ENABLE, 
	"REQUEST_UNIQUE_CODE" VARCHAR2(90), 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"REQUEST_REACT_ID_MT" NUMBER, 
	"REQUEST_REACT_ID_CK" NUMBER, 
	"REQUEST_REACT_ID_LAST" NUMBER, 
	"REQUEST_CREDIT_ID_LAST" NUMBER, 
	"REQUEST_INFO_ID_LAST" NUMBER, 
	"MODIFICATION_DATE_INFO" DATE, 
	"DECLARANT_TYPE" NUMBER, 
	"FIO_ID" NUMBER, 
	"SEX_ID" NUMBER, 
	"BDATE" DATE, 
	"BADR_ID" NUMBER, 
	"MDOC_ID" NUMBER, 
	"MADR_ID" NUMBER, 
	"LADR_ID" NUMBER, 
	"DADR_ID" NUMBER, 
	"REACT_DATE" DATE, 
	"REACT_COMMENT" VARCHAR2(4000), 
	"REQUEST_START_PATH" NUMBER, 
	"CANCEL_CODE" VARCHAR2(60), 
	"REQUEST_OLD_STATUS_ID" NUMBER, 
	"REACT_USER_ID" NUMBER, 
	"MODIFICATION_DATE_CREDIT" DATE, 
	"SCHEMS_ID" NUMBER, 
	"TYPE_CREDIT_ID" NUMBER, 
	"ORG_PARTNER_ID" NUMBER, 
	"ORG_PARTNER_CODE" VARCHAR2(60), 
	"CURRENCY_ID" NUMBER, 
	"PERIOD" NUMBER, 
	"PERCENT" NUMBER, 
	"PATH_CODE" VARCHAR2(60), 
	"SUMMA" NUMBER(13,2), 
	"SUMMA_DECL" NUMBER, 
	"SUMMA_ANN" NUMBER(13,2), 
	"SUMMA_FULL" NUMBER(13,2), 
	"RETAIL_PRODUCT_GROUPS_ID" NUMBER, 
	"CREDIT_JUR_CONTRACT" VARCHAR2(300), 
	"CREDIT_ID" NUMBER, 
	"DAY_PAY" NUMBER, 
	"DATE_UPD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_WORKS_INFO_WH_ID" ON "ODS"."PKK_WORKS_INFO" ("WORKS_HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_C_REQUEST_SNA_TMP" 
   (	"REQUEST_ID" NUMBER, 
	"PARENT_ID" NUMBER, 
	"TYPE_REQUEST_ID" NUMBER, 
	"STATUS_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_TYPE" NUMBER, 
	"CREATED_USER_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"MODIFICATION_DATE_REQUEST" DATE, 
	"REQUEST_UNIQUE_CODE" VARCHAR2(120), 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"REQUEST_REACT_ID_MT" NUMBER, 
	"REQUEST_REACT_ID_CK" NUMBER, 
	"REQUEST_REACT_ID_LAST" NUMBER, 
	"REQUEST_CREDIT_ID_LAST" NUMBER, 
	"REQUEST_INFO_ID_LAST" NUMBER, 
	"MODIFICATION_DATE_INFO" DATE, 
	"DECLARANT_TYPE" NUMBER, 
	"FIO_ID" NUMBER, 
	"SEX_ID" NUMBER, 
	"BDATE" DATE, 
	"BADR_ID" NUMBER, 
	"MDOC_ID" NUMBER, 
	"MADR_ID" NUMBER, 
	"LADR_ID" NUMBER, 
	"DADR_ID" NUMBER, 
	"REACT_DATE" DATE, 
	"REACT_COMMENT" CLOB, 
	"REQUEST_START_PATH" NUMBER, 
	"CANCEL_CODE" VARCHAR2(80), 
	"REQUEST_OLD_STATUS_ID" NUMBER, 
	"REACT_USER_ID" NUMBER, 
	"MODIFICATION_DATE_CREDIT" DATE, 
	"SCHEMS_ID" NUMBER, 
	"TYPE_CREDIT_ID" NUMBER, 
	"ORG_PARTNER_ID" NUMBER, 
	"ORG_PARTNER_CODE" VARCHAR2(80), 
	"CURRENCY_ID" NUMBER, 
	"PERIOD" NUMBER, 
	"PERCENT" NUMBER, 
	"PATH_CODE" VARCHAR2(80), 
	"SUMMA" NUMBER(14,2), 
	"SUMMA_DECL" NUMBER, 
	"SUMMA_ANN" NUMBER(14,2), 
	"SUMMA_FULL" NUMBER(14,2), 
	"RETAIL_PRODUCT_GROUPS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" 
 LOB ("REACT_COMMENT") STORE AS BASICFILE (
  TABLESPACE "ODS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

  CREATE TABLE "ODS"."MYTEXT" 
   (	"ID" NUMBER, 
	"THETEXT" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_C_REQUEST_SNA_REQUEST_ID" ON "ODS"."PKK_C_REQUEST_SNA" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_C_PKK_ADDRESS_ADR" ON "ODS"."PKK_ADDRESS" ("REGIONS_NAMES", "AREAS_NAMES", "CITIES_NAMES", "STREETS_NAMES") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 4194304 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_C_CREDIT_INFO_REQUEST_ID" ON "ODS"."PKK_C_CREDIT_INFO_SNA" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_C_CREDIT_INFO_SNA" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"TYPE_REQUEST_ID" NUMBER, 
	"MODIFICATION_DATE" DATE NOT NULL ENABLE, 
	"SUMMA_DELAY" NUMBER NOT NULL ENABLE, 
	"BASE_DOLG" NUMBER NOT NULL ENABLE, 
	"SUMMA_BASE_DOLG" NUMBER NOT NULL ENABLE, 
	"UNUSED_LIMIT" NUMBER, 
	"CNT_DELAY_15" NUMBER, 
	"CNT_DELAY_30" NUMBER, 
	"CNT_DELAY_60" NUMBER, 
	"CNT_DELAY_90" NUMBER, 
	"CNT_DELAY_180" NUMBER, 
	"CNT_DELAY_365" NUMBER, 
	"CNT_DELAY_MORE" NUMBER, 
	"CONTRACT_STATUS_CODE" VARCHAR2(30), 
	"DATE_CLOSE" DATE, 
	"DEFOLT" NUMBER NOT NULL ENABLE, 
	"DELAY_OLD" NUMBER NOT NULL ENABLE, 
	"PRDAY" NUMBER, 
	"MOP_LST24" VARCHAR2(96), 
	"MOP_LST6" VARCHAR2(24), 
	"MOP_DELAY" VARCHAR2(900), 
	"PR_DAY_90_MORE" VARCHAR2(1200), 
	"PR_DAY_60_89" VARCHAR2(96), 
	"PR_DAY_30_59" VARCHAR2(24), 
	"FLAG_PROSR" NUMBER, 
	"REQUEST_RESTRUCTION_ID_LAST" NUMBER, 
	"CNT_PAYMENT_VEB" NUMBER, 
	"KK" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SFF"."C_WFM" 
   (	"N" NUMBER NOT NULL ENABLE, 
	"IPADR" VARCHAR2(15), 
	"SESSION_ID" VARCHAR2(255), 
	"DBNAME" VARCHAR2(30), 
	"LOGIN" VARCHAR2(30), 
	"PERSON_ID" NUMBER, 
	"LOGIN_DOMAIN" VARCHAR2(30), 
	"GROUP_ID" NUMBER, 
	"DATE#SESSION" TIMESTAMP (6), 
	"DATE#CHANGE" TIMESTAMP (6), 
	"DATE#LOGOUT" TIMESTAMP (6), 
	"DATE#TIMEOUT" TIMESTAMP (6), 
	"DATE#TAKE" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE INDEX "SFF"."IX$C_WFM$1" ON "SFF"."C_WFM" ("SESSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SFF" ;

  CREATE TABLE "ODS"."PKK_FAMILY" 
   (	"CONTACT_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OB_ID" NUMBER, 
	"CONTACT_AKT" NUMBER, 
	"CONTACT_CREATED" DATE, 
	"CONTACT_MODIFICATION" DATE, 
	"FAMILY_REL" NUMBER, 
	"FAMILY_REL_NAME" VARCHAR2(150), 
	"FAMILY_REL_STATUS" NUMBER, 
	"FAMILY_SEQ_ID" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_C_REQUEST_SNA_OBJECTS_ID" ON "ODS"."PKK_C_REQUEST_SNA" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_CONTACTS" 
   (	"CONTACT_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"OB_ID" NUMBER, 
	"CONTACT_AKT" NUMBER, 
	"CONTACT_COMMENT" VARCHAR2(4000), 
	"CONTACT_CREATED" DATE, 
	"CONTACT_MODIFICATION" DATE, 
	"FAMILY_REL" NUMBER, 
	"FAMILY_REL_NAME" VARCHAR2(150), 
	"FAMILY_REL_STATUS" NUMBER, 
	"FAMILY_SEQ_ID" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."II_MYTEXT_TEXT" ON "ODS"."MYTEXT" ("THETEXT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 167 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_CONTACTS_OBJECTS_ID" ON "ODS"."PKK_CONTACTS" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_WORKS_INFO" 
   (	"OBJECTS_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"WORKS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"WORKS_HISTORY_ID" NUMBER NOT NULL ENABLE, 
	"WORKS_SALARY" FLOAT(15), 
	"WORKS_STAG" VARCHAR2(30) NOT NULL ENABLE, 
	"WORKS_AKT" NUMBER(*,0) NOT NULL ENABLE, 
	"WORKS_LAST" NUMBER(*,0) NOT NULL ENABLE, 
	"ORG_ID" NUMBER(10,0), 
	"ORG_NAME" VARCHAR2(765), 
	"WORKS_POST" NUMBER(*,0) NOT NULL ENABLE, 
	"WORKS_POST_NAME" VARCHAR2(300), 
	"RELATION_PDL" NUMBER(1,0), 
	"WORKS_CREATED" DATE, 
	"MODIFICATION_DATE" DATE, 
	"PHONE_WORK" VARCHAR2(66), 
	"PHONE_ORG" VARCHAR2(66), 
	"DATE_UPD" DATE, 
	"WORKS_RANK" NUMBER(6,0) DEFAULT 1, 
	"OBJECTS_RANK" NUMBER(6,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_PKK_CONTACTS_CONTACT_ID" ON "ODS"."PKK_CONTACTS" ("CONTACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_CONTACTS_OB_ID" ON "ODS"."PKK_CONTACTS" ("OB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_FAMILY_CONTACT_ID" ON "ODS"."PKK_FAMILY" ("CONTACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_FAMILY_OBJECTS_ID" ON "ODS"."PKK_FAMILY" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_FAMILY_OB_ID" ON "ODS"."PKK_FAMILY" ("OB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_CRS_TMP_RID" ON "ODS"."PKK_C_REQUEST_SNA_TMP" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_C_CREDIT_INFO_PERSON_ID" ON "ODS"."PKK_C_CREDIT_INFO_SNA" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_DH_INFO_DOCUMENTS_ID" ON "ODS"."PKK_DOCUMENTS_HISTORY_INFO" ("DOCUMENTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PERSON_INFO_FIO_BIRTH" ON "ODS"."PKK_PERSON_INFO" ("FIO4SEARCH", "BIRTH") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_DH_INFO_DOCUMENTS_NUM_SER" ON "ODS"."PKK_DOCUMENTS_HISTORY_INFO" ("DOCUMENTS_NUMBER", "DOCUMENTS_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_C_REQUEST_SNA_PARENT_ID" ON "ODS"."PKK_C_REQUEST_SNA" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_WORKS_INFO_ORG_ID" ON "ODS"."PKK_WORKS_INFO" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_EMAIL_EMAIL" ON "ODS"."PKK_EMAIL" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SNAUSER"."SNA_REQUEST_HISTORY" 
   (	"SNA_ID" NUMBER NOT NULL ENABLE, 
	"SNA_DATE_BEGIN" DATE DEFAULT SYSDATE NOT NULL ENABLE, 
	"SNA_DATE_END" DATE, 
	"SNA_TIME_LOAD" NUMBER, 
	"FLAG_INFO_EXISTS" NUMBER DEFAULT 0, 
	"REQUEST_ID" NUMBER DEFAULT -1, 
	"OBJECTS_ID" NUMBER DEFAULT -1, 
	"LOGIN" VARCHAR2(70) DEFAULT '-', 
	"ALERT_SERIES" VARCHAR2(50), 
	"CNT_NODE" NUMBER DEFAULT -1, 
	"CNT_LINK" NUMBER DEFAULT -1, 
	"CNT_OBJECTS_ID" NUMBER DEFAULT -1, 
	"CNT_FROD" NUMBER DEFAULT -1, 
	"CNT_BNK" NUMBER DEFAULT -1, 
	"CNT_DEFOLT" NUMBER DEFAULT -1, 
	"CNT_ALERT_PERSON" NUMBER DEFAULT -1, 
	"RESULT_MESSAGE" VARCHAR2(400)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE UNIQUE INDEX "SNAUSER"."I_SNA_REQUEST_HISTORY_SNA_ID" ON "SNAUSER"."SNA_REQUEST_HISTORY" ("SNA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

   CREATE SEQUENCE  "SNAUSER"."SNA_REQUEST_HISTORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 53261 CACHE 20 NOORDER  NOCYCLE ;

  CREATE OR REPLACE TRIGGER "SNAUSER"."SNA_REQUEST_HISTORY_TRG_INS" BEFORE INSERT ON SNA_REQUEST_HISTORY 
--
FOR EACH ROW 
DECLARE

BEGIN
 
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.SNA_ID IS NULL THEN 
      SELECT SNA_REQUEST_HISTORY_SEQ.NEXTVAL INTO :NEW.SNA_ID FROM DUAL;
    END IF; 
  END COLUMN_SEQUENCES; 
  
  SNAUSER.PR$SNA_LOAD_INFO(:new.SNA_ID, :new.REQUEST_ID, :new.LOGIN, :new.ALERT_SERIES
        ,:new.SNA_DATE_BEGIN
        ,:new.SNA_DATE_END
        ,:new.SNA_TIME_LOAD
        ,:new.FLAG_INFO_EXISTS
        ,:new.OBJECTS_ID
        ,:new.CNT_NODE
        ,:new.CNT_LINK
        ,:new.CNT_OBJECTS_ID
        ,:new.CNT_FROD
        ,:new.CNT_BNK
        ,:new.CNT_DEFOLT
        ,:new.CNT_ALERT_PERSON
        ,:new.RESULT_MESSAGE);
  --COMMIT;
  
END;
ALTER TRIGGER "SNAUSER"."SNA_REQUEST_HISTORY_TRG_INS" ENABLE;

  CREATE TABLE "ODS"."OBJECTS_TYPE" 
   (	"OBJECTS_TYPE" NUMBER(*,0) NOT NULL ENABLE, 
	"OBJECTS_NAME" VARCHAR2(150), 
	"OBJECTS_SONR" VARCHAR2(30), 
	"OBJECTS_SOCR" VARCHAR2(30)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."PKK_PHONES" 
   (	"PHONES_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER NOT NULL ENABLE, 
	"OBJECTS_TYPE" NUMBER NOT NULL ENABLE, 
	"PHONES_AKT" NUMBER, 
	"PHONES_COMM" VARCHAR2(765), 
	"PHONES_CREATED" DATE NOT NULL ENABLE, 
	"CREATED_USER_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_GROUP_ID" NUMBER NOT NULL ENABLE, 
	"MODIFICATION_DATE" DATE, 
	"PHONES_LAST" NUMBER, 
	"FAMILY_REL" NUMBER, 
	"PHONE" VARCHAR2(66), 
	"ADDRESS_ID" NUMBER, 
	"DATE_UPD" DATE DEFAULT SYSDATE, 
	"GROUPS_NAME" VARCHAR2(254), 
	"FAMILY_REL_NAME" VARCHAR2(150), 
	"FAMILY_REL_STATUS" NUMBER, 
	"FAMILY_SEQ_ID" NUMBER, 
	"PHONES_RANK" NUMBER(*,0), 
	"OBJECTS_RANK" NUMBER(6,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_WORKS_INFO_WORKS_ID" ON "ODS"."PKK_WORKS_INFO" ("WORKS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."I_PKK_PHONES_PHONES_ID" ON "ODS"."PKK_PHONES" ("PHONES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SNAUSER"."SNA_REQUEST_NODE_ROUTES" 
   (	"SRC_REQUEST_ID" NUMBER, 
	"SRC_OBJECTS_ID" NUMBER, 
	"SNA_REQUEST_DATE" DATE, 
	"USER_SNA" VARCHAR2(100) DEFAULT '-', 
	"DATE_UPD" TIMESTAMP (6) WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_ID_REL" NUMBER, 
	"ROOT_PERS" NUMBER, 
	"ROOT_PERS_REL" NUMBER, 
	"N1" VARCHAR2(300), 
	"T1" VARCHAR2(30), 
	"AKT1" NUMBER, 
	"DT1" DATE, 
	"N2" VARCHAR2(300), 
	"T2" VARCHAR2(30), 
	"AKT2" NUMBER, 
	"DT2" DATE, 
	"N3" VARCHAR2(400), 
	"T3" VARCHAR2(30), 
	"AKT3" NUMBER, 
	"DT3" DATE, 
	"N4" VARCHAR2(500), 
	"T4" VARCHAR2(30), 
	"AKT4" NUMBER, 
	"DT4" DATE, 
	"N5" VARCHAR2(300), 
	"T5" VARCHAR2(30), 
	"AKT5" NUMBER, 
	"DT5" DATE, 
	"ROUTE_GRAPH" VARCHAR2(100), 
	"ATTRIBUTES" VARCHAR2(1000), 
	"LEVEL_NODE" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."I_SNA_RNR_N3_ADR" ON "SNAUSER"."SNA_REQUEST_NODE_ROUTES" ("N3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_COLUMN_DETAIL" ("OWNER", "TABLE_NAME", "COLUMN_NAME", "COMMENTS", "DATA_TYPE", "DATA_LENGTH", "INDEX_NAME", "COLUMN_POSITION", "COLUMN_LENGTH", "INDEX_TYPE", "UNIQUENESS", "DISTINCT_KEYS", "NUM_ROWS", "PERC", "LAST_ANALYZED") AS 
  SELECT col.OWNER, col.TABLE_NAME, col.COLUMN_NAME, com.COMMENTS
    ,col.DATA_TYPE, col.DATA_LENGTH
    ,ind_main.INDEX_NAME, ind_main.COLUMN_POSITION, ind_main.COLUMN_LENGTH
    , ind.INDEX_TYPE, ind.UNIQUENESS, ind.DISTINCT_KEYS, ind.NUM_ROWS, ROUND(ind.DISTINCT_KEYS/ind.NUM_ROWS*100, 2) AS perc , ind.LAST_ANALYZED 
  FROM ALL_TAB_COLUMNS col 
  LEFT JOIN ALL_COL_COMMENTS com 
    ON com.OWNER=col.OWNER AND com.TABLE_NAME=col.TABLE_NAME 
AND com.COLUMN_NAME=col.COLUMN_NAME
  LEFT JOIN ALL_IND_COLUMNS ind_main
    ON col.OWNER = ind_main.TABLE_OWNER AND col.TABLE_NAME = ind_main.TABLE_NAME AND col.COLUMN_NAME = ind_main.COLUMN_NAME
  LEFT JOIN ALL_INDEXES ind
    ON ind_main.INDEX_OWNER = ind.OWNER AND ind_main.INDEX_NAME = ind.INDEX_NAME AND ind_main.TABLE_NAME = ind.TABLE_NAME
  WHERE col.OWNER='ODS' AND col.TABLE_NAME LIKE 'PKK%'
  ORDER BY col.TABLE_NAME, ind_main.INDEX_NAME, ind_main.COLUMN_POSITION WITH READ ONLY;

  CREATE INDEX "ODS"."I_PERSON_INFO_OBJECTS_ID_RANK" ON "ODS"."PKK_PERSON_INFO" ("OBJECTS_ID", "FIO_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_COLUMN_DETAIL_HD" ("OWNER", "TABLE_NAME", "COLUMN_NAME", "COMMENTS", "DATA_TYPE", "DATA_LENGTH", "INDEX_NAME", "COLUMN_POSITION", "COLUMN_LENGTH", "INDEX_TYPE", "UNIQUENESS", "DISTINCT_KEYS", "NUM_ROWS", "PERC", "LAST_ANALYZED") AS 
  SELECT col.OWNER, col.TABLE_NAME, col.COLUMN_NAME, com.COMMENTS
    ,col.DATA_TYPE, col.DATA_LENGTH
    ,ind_main.INDEX_NAME, ind_main.COLUMN_POSITION, ind_main.COLUMN_LENGTH
    , ind.INDEX_TYPE, ind.UNIQUENESS, ind.DISTINCT_KEYS, ind.NUM_ROWS
    , ROUND(ind.DISTINCT_KEYS/DECODE(ind.NUM_ROWS,0,ind.NUM_ROWS-1, ind.NUM_ROWS)*100, 2) AS perc 
    , ind.LAST_ANALYZED 
  FROM ALL_TAB_COLUMNS@HD col 
  LEFT JOIN ALL_COL_COMMENTS@HD com 
    ON com.OWNER=col.OWNER AND com.TABLE_NAME=col.TABLE_NAME 
AND com.COLUMN_NAME=col.COLUMN_NAME
  LEFT JOIN ALL_IND_COLUMNS@HD ind_main
    ON col.OWNER = ind_main.TABLE_OWNER AND col.TABLE_NAME = ind_main.TABLE_NAME AND col.COLUMN_NAME = ind_main.COLUMN_NAME
  LEFT JOIN ALL_INDEXES@HD ind
    ON ind_main.INDEX_OWNER = ind.OWNER AND ind_main.INDEX_NAME = ind.INDEX_NAME AND ind_main.TABLE_NAME = ind.TABLE_NAME
  WHERE col.OWNER IN ('ODB', 'WH_DVTB')
  ORDER BY col.TABLE_NAME, ind_main.INDEX_NAME, ind_main.COLUMN_POSITION WITH READ ONLY;

  CREATE INDEX "SNAUSER"."I_SNA_RNR_SRC_OBJECTS_ID" ON "SNAUSER"."SNA_REQUEST_NODE_ROUTES" ("SRC_OBJECTS_ID", "USER_SNA", "OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "ODS"."I_ODS_PER_COLL_CLON_ID" ON "ODS"."PKK_PERSON_COLLAPSED" ("CLONE_PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "SNAUSER"."I_SNA_RNR_N1" ON "SNAUSER"."SNA_REQUEST_NODE_ROUTES" ("N1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "ODS"."I_ODS_PER_COLL_TAR_ID" ON "ODS"."PKK_PERSON_COLLAPSED" ("TARGET_PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_COLUMN_DETAIL_PKK" ("OWNER", "TABLE_NAME", "COLUMN_NAME", "COMMENTS", "DATA_TYPE", "DATA_LENGTH", "INDEX_NAME", "COLUMN_POSITION", "COLUMN_LENGTH", "INDEX_TYPE", "UNIQUENESS", "DISTINCT_KEYS", "NUM_ROWS", "PERC", "LAST_ANALYZED") AS 
  SELECT col.OWNER, col.TABLE_NAME, col.COLUMN_NAME, com.COMMENTS
    ,col.DATA_TYPE, col.DATA_LENGTH
    ,ind_main.INDEX_NAME, ind_main.COLUMN_POSITION, ind_main.COLUMN_LENGTH
    , ind.INDEX_TYPE, ind.UNIQUENESS, ind.DISTINCT_KEYS, ind.NUM_ROWS
    , ROUND(ind.DISTINCT_KEYS/DECODE(ind.NUM_ROWS,0,ind.NUM_ROWS-1, ind.NUM_ROWS)*100, 2) AS perc 
    , ind.LAST_ANALYZED 
  FROM ALL_TAB_COLUMNS@DBLINK_PKK col 
  LEFT JOIN ALL_COL_COMMENTS@DBLINK_PKK com 
    ON com.OWNER=col.OWNER AND com.TABLE_NAME=col.TABLE_NAME 
AND com.COLUMN_NAME=col.COLUMN_NAME
  LEFT JOIN ALL_IND_COLUMNS@DBLINK_PKK ind_main
    ON col.OWNER = ind_main.TABLE_OWNER AND col.TABLE_NAME = ind_main.TABLE_NAME AND col.COLUMN_NAME = ind_main.COLUMN_NAME
  LEFT JOIN ALL_INDEXES@DBLINK_PKK ind
    ON ind_main.INDEX_OWNER = ind.OWNER AND ind_main.INDEX_NAME = ind.INDEX_NAME AND ind_main.TABLE_NAME = ind.TABLE_NAME
 -- WHERE col.OWNER IN ('CPD', 'KREDIT', 'CDCSUB')
  ORDER BY col.TABLE_NAME, ind_main.INDEX_NAME, ind_main.COLUMN_POSITION WITH READ ONLY;

  CREATE INDEX "SNAUSER"."SNA_REQUEST_BNK_HIST_OB_ID" ON "SNAUSER"."SNA_REQUEST_BNK_HIST" ("OBJECTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_SPACE_MB" ("TABLESPACE_NAME", "M_ALLOC", "M_FREE", "M_USED", "MAX") AS 
  select a.tablespace_name ,
    round(a.bytes_alloc / 1024 / 1024, 2) m_alloc,
    round(nvl(b.bytes_free, 0) / 1024 / 1024, 2) m_free,
    round((a.bytes_alloc - nvl(b.bytes_free, 0)) / 1024 / 1024, 2) m_used,
    round(maxbytes/1048576,2) Max
    from ( select f.tablespace_name,
    sum(f.bytes) bytes_alloc,
    sum(decode(f.autoextensible, 'YES',f.maxbytes,'NO', f.bytes)) maxbytes
    from dba_data_files f
    group by tablespace_name) a,
    ( select f.tablespace_name,
    sum(f.bytes) bytes_free
    from dba_free_space f
    group by tablespace_name) b
    where a.tablespace_name = b.tablespace_name (+)
    WITH READ ONLY;

  CREATE INDEX "ODS"."I_ODS_PER_COLL_STAMP" ON "ODS"."PKK_PERSON_COLLAPSED" ("STAMP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "SNAUSER"."SNA_REQUEST_BNK_HIST" 
   (	"OBJECTS_ID" NUMBER, 
	"R_TYPE_ID" NUMBER, 
	"DESCRIPT" VARCHAR2(4000), 
	"DATE_INS" DATE, 
	"PERCENT_MATCH" NUMBER, 
	"DATE_MATCH" TIMESTAMP (6), 
	"STR_DESC" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "ODS"."PKK_PERSON_COLLAPSED" 
   (	"TARGET_PERSON_ID" NUMBER(*,0), 
	"CLONE_PERSON_ID" NUMBER(*,0), 
	"STAMP" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_DOCUMENTS" ("DOCUMENTS_ID", "OBJECTS_ID", "OBJECTS_TYPE", "DOCUMENTS_AKT", "DOCUMENTS_CREATED", "CREATED_SOURCE", "CREATED_USER_ID", "CREATED_GROUP_ID", "CREATED_IPADR", "MODIFICATION_DATE", "MODIFICATION_SOURCE", "MODIFICATION_USER_ID", "MODIFICATION_GROUP_ID", "MODIFICATION_IPADR", "DOCUMENTS_HISTORY_ID", "DOCUMENTS_TYPE", "DOCUMENTS_NAME", "DOCUMENTS_SERIAL", "DOCUMENTS_NUMBER", "DOCUMENTS_ORGS", "DOCUMENTS_DATE", "OBJECTS_TYPE_DOC") AS 
  SELECT
    dh.DOCUMENTS_ID
    ,dh.OBJECTS_ID
    ,dh.OBJECTS_TYPE
    ,dh.DOCUMENTS_AKT
    ,dh.DOCUMENTS_CREATED
    ,dh.CREATED_SOURCE
    ,dh.CREATED_USER_ID
    ,dh.CREATED_GROUP_ID
    ,dh.CREATED_IPADR
    ,dh.MODIFICATION_DATE
    ,dh.MODIFICATION_SOURCE
    ,dh.MODIFICATION_USER_ID
    ,dh.MODIFICATION_GROUP_ID
    ,dh.MODIFICATION_IPADR
    ,dh.DOCUMENTS_HISTORY_ID
    ,doc.DOCUMENTS_TYPE
    ,doc_tp.DOCUMENTS_NAME
    ,doc.DOCUMENTS_SERIAL
    ,doc.DOCUMENTS_NUMBER
    ,doc.DOCUMENTS_ORGS
    ,doc.DOCUMENTS_DATE
    ,doc.OBJECTS_TYPE as OBJECTS_TYPE_DOC
  FROM CPD.DOCUMENTS_HISTORY@dblink_pkk dh
  LEFT OUTER JOIN CPD.DOCUMENTS@dblink_pkk doc
    ON dh.DOCUMENTS_ID=doc.DOCUMENTS_ID
  LEFT OUTER JOIN CPD.DOCUMENTS_TYPE@dblink_pkk doc_tp
    ON doc.DOCUMENTS_TYPE=doc_tp.DOCUMENTS_TYPE
  --WHERE COALESCE(MODIFICATION_DATE, DOCUMENTS_CREATED) > last_DT_SFF;

  CREATE TABLE "SNAUSER"."AQ_PKK_SNA_LOG_MESSAGE" 
   (	"MSG_ID" VARCHAR2(50), 
	"MSG_DATE" DATE, 
	"REQUEST_ID" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"SCORE_TREE_ROUTE_ID" NUMBER, 
	"CREATED_GROUP_ID" NUMBER, 
	"TYPE_REQUEST_ID" NUMBER, 
	"OLD_STATUS_ID" NUMBER, 
	"NEW_STATUS_ID" NUMBER, 
	"DATE_INSERT" TIMESTAMP (6), 
	"CONSUMER_NAME" VARCHAR2(200)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_C_CREDIT_INFO" ("REQUEST_ID", "PERSON_ID", "CREATED_DATE", "TYPE_REQUEST_ID", "MODIFICATION_DATE", "SUMMA_DELAY", "BASE_DOLG", "SUMMA_BASE_DOLG", "UNUSED_LIMIT", "CNT_DELAY_15", "CNT_DELAY_30", "CNT_DELAY_60", "CNT_DELAY_90", "CNT_DELAY_180", "CNT_DELAY_365", "CNT_DELAY_MORE", "CONTRACT_STATUS_CODE", "DATE_CLOSE", "DEFOLT", "DELAY_OLD", "PRDAY", "MOP_LST24", "MOP_LST6", "MOP_DELAY", "PR_DAY_90_MORE", "PR_DAY_60_89", "PR_DAY_30_59", "FLAG_PROSR", "REQUEST_RESTRUCTION_ID_LAST", "CNT_PAYMENT_VEB") AS 
  SELECT DISTINCT cci.REQUEST_ID
			,crid.OBJECTS_ID AS PERSON_ID
			,crid.CREATED_DATE
			,crid.TYPE_REQUEST_ID
			,cci.MODIFICATION_DATE 
			,cci.SUMMA_DELAY --сумма просрочки (для определения ПЗ >= 400 р)
			,cci.BASE_DOLG --Остаток основного долга
			,cci.SUMMA_BASE_DOLG --доп. поле
			,cci.UNUSED_LIMIT -- неиспользованные лимит кредита
			,cci.CNT_DELAY_15 --Количество просрочек до 15 дней
			,cci.CNT_DELAY_30 --Количество просрочек от 15 до 30 дней
			,cci.CNT_DELAY_60 --Количество просрочек от 30 до 60 дней
			,cci.CNT_DELAY_90 --Количество просрочек от 60 до 90 дней
			,cci.CNT_DELAY_180 --Количество просрочек от 90 до 180 дней
			,cci.CNT_DELAY_365 --Количество просрочек от 180 до 365 дней
			,cci.CNT_DELAY_MORE --Количество просрочек свыше 365 дней
			,cci.CONTRACT_STATUS_CODE --Статус кредитной истории
			,cci.DATE_CLOSE --Дата фактического закрытия кредита РБО.
			,cci.DEFOLT
			,cci.DELAY_OLD -- 0 - ранее просрочек не было, 1 - ранее были просрочки
			,cci.PRDAY -- Количество дней просрочки
			,SUBSTR(cci.MOP_DELAY,1,24) as MOP_lst24 --строка для 24 месяцев
			,SUBSTR(cci.MOP_DELAY,1,6) as MOP_lst6 --строка для 6 месяцев
			,cci.MOP_DELAY --Строка кредитной истории
			,regexp_substr(cci.MOP_DELAY, '[45789]', 1) as pr_day_90_more --просрочка 90> за все время
			,regexp_substr(SUBSTR(cci.MOP_DELAY,1, 24), '[3]', 1) as pr_day_60_89 --просрочка 60-89 за последние 24 мес
			,regexp_substr(SUBSTR(cci.MOP_DELAY,1, 6), '[2]', 1) as pr_day_30_59 --просрочка 30-59 за последние 6 мес
			--,(CASE WHEN SUMMA_DELAY>=400 THEN 1 ELSE 0 END) as flag_PROSR --флаг просрочки >400 руб
			,(CASE WHEN SUMMA_DELAY>=200000 AND regexp_count(cci.MOP_DELAY, '1', 1) BETWEEN 0 AND 3 THEN 1 ELSE 0 END) as flag_PROSR --флаг просрочки >=200 тыс. руб
			,LAST_VALUE(cr_rs.REQUEST_RESTRUCTION_ID) OVER (PARTITION BY cr_rs.REQUEST_ID) as REQUEST_RESTRUCTION_ID_LAST --последний реквест который подлежал РС
			--,(CASE WHEN cci.BASE_DOLG>0 THEN regexp_count(cci.MOP_DELAY, '1', 1) ELSE -1 END) as cnt_payment_veb --кол-во платежей по текущей строке КИ
      ,regexp_count(cci.MOP_DELAY, '1', 1) as CNT_PAYMENT_VEB --кол-во платежей по текущей строке КИ
			--,SFF.FN_IS_KK_RID(crid.REQUEST_ID) as KK -- флаг кредитной карты или овердрафта
			--,(SYSDATE) as RP_DEFOLT_DATE -- дата логирования
	FROM KREDIT.C_REQUEST@DBLINK_PKK crid 
	INNER JOIN KREDIT.C_CREDIT_INFO@DBLINK_PKK cci
		ON cci.REQUEST_ID=crid.REQUEST_ID
	LEFT OUTER JOIN KREDIT.C_REQUEST_RESTRUCTION@DBLINK_PKK cr_rs
		ON cci.REQUEST_ID=cr_rs.REQUEST_ID
	/*LEFT OUTER JOIN KREDIT.C_REQUEST_CREDIT@DBLINK_PKK cr_cr
		ON cci.REQUEST_ID=cr_cr.REQUEST_ID*/
	/*LEFT OUTER JOIN KREDIT.C_SCHEMS@DBLINK_PKK c_sch
		ON cr_cr.SCHEMS_ID=c_sch.SCHEMS_ID*/
	/*LEFT OUTER JOIN KREDIT.C_TYPE_CREDIT@DBLINK_PKK c_tp_cr --по факту название кредита здесь
		ON cr_cr.TYPE_CREDIT_ID=c_tp_cr.TYPE_CREDIT_ID*/
  WHERE cci.MODIFICATION_DATE BETWEEN SYSDATE-1/24 AND SYSDATE;

  CREATE TABLE "SNAUSER"."AQ_PKK_SNA_TBL" 
   (	"Q_NAME" VARCHAR2(30), 
	"MSGID" RAW(16), 
	"CORRID" VARCHAR2(128), 
	"PRIORITY" NUMBER, 
	"STATE" NUMBER, 
	"DELAY" TIMESTAMP (6), 
	"EXPIRATION" NUMBER, 
	"TIME_MANAGER_INFO" TIMESTAMP (6), 
	"LOCAL_ORDER_NO" NUMBER, 
	"CHAIN_NO" NUMBER, 
	"CSCN" NUMBER, 
	"DSCN" NUMBER, 
	"ENQ_TIME" TIMESTAMP (6), 
	"ENQ_UID" VARCHAR2(30), 
	"ENQ_TID" VARCHAR2(30), 
	"DEQ_TIME" TIMESTAMP (6), 
	"DEQ_UID" VARCHAR2(30), 
	"DEQ_TID" VARCHAR2(30), 
	"RETRY_COUNT" NUMBER, 
	"EXCEPTION_QSCHEMA" VARCHAR2(30), 
	"EXCEPTION_QUEUE" VARCHAR2(30), 
	"STEP_NO" NUMBER, 
	"RECIPIENT_KEY" NUMBER, 
	"DEQUEUE_MSGID" RAW(16), 
	"SENDER_NAME" VARCHAR2(30), 
	"SENDER_ADDRESS" VARCHAR2(1024), 
	"SENDER_PROTOCOL" NUMBER, 
	"USER_DATA" "SNAUSER"."AQ_PKK_SNA_TYPE" , 
	"USER_PROP" "SYS"."ANYDATA" , 
	 PRIMARY KEY ("MSGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) USAGE QUEUE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 OPAQUE TYPE "USER_PROP" STORE AS BASICFILE LOB (
  ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  CACHE 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_COLUMN_DETAIL_SPR" ("OWNER", "TABLE_NAME", "COLUMN_NAME", "COMMENTS", "DATA_TYPE", "DATA_LENGTH", "INDEX_NAME", "COLUMN_POSITION", "COLUMN_LENGTH", "INDEX_TYPE", "UNIQUENESS", "DISTINCT_KEYS", "NUM_ROWS", "PERC", "LAST_ANALYZED") AS 
  SELECT col.OWNER, col.TABLE_NAME, col.COLUMN_NAME, com.COMMENTS
    ,col.DATA_TYPE, col.DATA_LENGTH
    ,ind_main.INDEX_NAME, ind_main.COLUMN_POSITION, ind_main.COLUMN_LENGTH
    , ind.INDEX_TYPE, ind.UNIQUENESS, ind.DISTINCT_KEYS, ind.NUM_ROWS
    , ROUND(ind.DISTINCT_KEYS/DECODE(ind.NUM_ROWS,0,ind.NUM_ROWS-1, ind.NUM_ROWS)*100, 2) AS perc 
    , ind.LAST_ANALYZED 
  FROM ALL_TAB_COLUMNS@SPR col 
  LEFT JOIN ALL_COL_COMMENTS@SPR com 
    ON com.OWNER=col.OWNER AND com.TABLE_NAME=col.TABLE_NAME 
AND com.COLUMN_NAME=col.COLUMN_NAME
  LEFT JOIN ALL_IND_COLUMNS@SPR ind_main
    ON col.OWNER = ind_main.TABLE_OWNER AND col.TABLE_NAME = ind_main.TABLE_NAME AND col.COLUMN_NAME = ind_main.COLUMN_NAME
  LEFT JOIN ALL_INDEXES@SPR ind
    ON ind_main.INDEX_OWNER = ind.OWNER AND ind_main.INDEX_NAME = ind.INDEX_NAME AND ind_main.TABLE_NAME = ind.TABLE_NAME
  --WHERE col.OWNER IN ('CPD', 'KREDIT', 'CDCSUB')
  ORDER BY col.TABLE_NAME, ind_main.INDEX_NAME, ind_main.COLUMN_POSITION WITH READ ONLY;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_S" 
   (	"SUBSCRIBER_ID" NUMBER NOT NULL ENABLE, 
	"QUEUE_NAME" VARCHAR2(30) NOT NULL ENABLE, 
	"NAME" VARCHAR2(30), 
	"ADDRESS" VARCHAR2(1024), 
	"PROTOCOL" NUMBER, 
	"SUBSCRIBER_TYPE" NUMBER, 
	"RULE_NAME" VARCHAR2(30), 
	"TRANS_NAME" VARCHAR2(65), 
	"RULESET_NAME" VARCHAR2(65), 
	"NEGATIVE_RULESET_NAME" VARCHAR2(65), 
	"CREATION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"MODIFICATION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"DELETION_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"SCN_AT_REMOVE" NUMBER, 
	"SCN_AT_ADD" NUMBER, 
	 PRIMARY KEY ("SUBSCRIBER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER"  ENABLE
   ) USAGE QUEUE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_T" 
   (	"NEXT_DATE" TIMESTAMP (6), 
	"TXN_ID" VARCHAR2(30), 
	"MSGID" RAW(16), 
	"ACTION" NUMBER, 
	 PRIMARY KEY ("NEXT_DATE", "TXN_ID", "MSGID") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_PKK_SNA_TBL_S" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "TRANSFORMATION", "QUEUE_TO_QUEUE") AS 
  SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM "AQ$_AQ_PKK_SNA_TBL_S" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY;

   CREATE SEQUENCE  "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_N"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_H" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"DEQUEUE_TIME" TIMESTAMP (6), 
	"TRANSACTION_ID" VARCHAR2(30), 
	"DEQUEUE_USER" VARCHAR2(30), 
	"PROPAGATED_MSGID" RAW(16), 
	"RETRY_COUNT" NUMBER, 
	"HINT" ROWID, 
	"SPARE" RAW(16), 
	 PRIMARY KEY ("MSGID", "SUBSCRIBER#", "NAME", "ADDRESS#") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_L" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"DEQUEUE_TIME" TIMESTAMP (6) WITH TIME ZONE, 
	"TRANSACTION_ID" VARCHAR2(30), 
	"DEQUEUE_USER" VARCHAR2(30), 
	"FLAGS" RAW(1)
   ) USAGE QUEUE PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_G" 
   (	"MSGID" RAW(16), 
	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"ADDRESS#" NUMBER, 
	"SIGN" "SYS"."AQ$_SIG_PROP" , 
	"DBS_SIGN" "SYS"."AQ$_SIG_PROP" , 
	 PRIMARY KEY ("MSGID", "SUBSCRIBER#", "NAME", "ADDRESS#") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50 INCLUDING "SIGN" OVERFLOW
 PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_I" 
   (	"SUBSCRIBER#" NUMBER, 
	"NAME" VARCHAR2(30), 
	"QUEUE#" NUMBER, 
	"MSG_ENQ_TIME" TIMESTAMP (6), 
	"MSG_STEP_NO" NUMBER, 
	"MSG_CHAIN_NO" NUMBER, 
	"MSG_LOCAL_ORDER_NO" NUMBER, 
	"MSGID" RAW(16), 
	"HINT" ROWID, 
	"SPARE" RAW(16), 
	 PRIMARY KEY ("SUBSCRIBER#", "NAME", "QUEUE#", "MSG_ENQ_TIME", "MSG_STEP_NO", "MSG_CHAIN_NO", "MSG_LOCAL_ORDER_NO", "MSGID") ENABLE
   ) USAGE QUEUE ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" 
 PCTTHRESHOLD 50;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$_AQ_PKK_SNA_TBL_F" ("Q_NAME", "ROW_ID", "MSGID", "CORRID", "PRIORITY", "STATE", "DELAY", "EXPIRATION", "ENQ_TIME", "ENQ_UID", "ENQ_TID", "DEQ_TIME", "DEQ_UID", "DEQ_TID", "RETRY_COUNT", "EXCEPTION_QSCHEMA", "EXCEPTION_QUEUE", "CSCN", "DSCN", "CHAIN_NO", "LOCAL_ORDER_NO", "TIME_MANAGER_INFO", "STEP_NO", "USER_DATA", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "DEQUEUE_MSGID", "DELIVERY_MODE", "SEQUENCE_NUM", "MSG_NUM", "QUEUE_ID", "USER_PROP", "SUBSCRIBER_ID", "SUBSCRIBER_NAME", "QUEUE_EVTID") AS 
  SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM "AQ_PKK_SNA_TBL" qt, "AQ$_AQ_PKK_SNA_TBL_I" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'SNAUSER' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  WITH READ ONLY;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_PKK_SNA_TBL" ("QUEUE", "MSG_ID", "CORR_ID", "MSG_PRIORITY", "MSG_STATE", "DELAY", "DELAY_TIMESTAMP", "EXPIRATION", "ENQ_TIME", "ENQ_TIMESTAMP", "ENQ_USER_ID", "ENQ_TXN_ID", "DEQ_TIME", "DEQ_TIMESTAMP", "DEQ_USER_ID", "DEQ_TXN_ID", "RETRY_COUNT", "EXCEPTION_QUEUE_OWNER", "EXCEPTION_QUEUE", "USER_DATA", "PROPAGATED_MSGID", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "ORIGINAL_MSGID", "ORIGINAL_QUEUE_NAME", "ORIGINAL_QUEUE_OWNER", "EXPIRATION_REASON", "CONSUMER_NAME", "ADDRESS", "PROTOCOL") AS 
  SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM "AQ_PKK_SNA_TBL" qt, "AQ$_AQ_PKK_SNA_TBL_H" h LEFT OUTER JOIN "AQ$_AQ_PKK_SNA_TBL_L" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, "AQ$_AQ_PKK_SNA_TBL_S" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     WITH READ ONLY;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."AQ$AQ_PKK_SNA_TBL_R" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "RULE", "RULE_SET", "TRANSFORMATION") AS 
  SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM "AQ$_AQ_PKK_SNA_TBL_S" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'SNAUSER'  WITH READ ONLY;

  CREATE TABLE "ODS"."LOG_CALL_PROC" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"PROC_NAME" VARCHAR2(100), 
	"PROC_DATE_START" TIMESTAMP (6), 
	"PROC_DATE_END" TIMESTAMP (6), 
	"PROC_DURATION_TIME" INTERVAL DAY (9) TO SECOND (6), 
	"TARGET_TABLE" VARCHAR2(100) DEFAULT '-', 
	"MSG_ERROR" VARCHAR2(2000) DEFAULT '-', 
	"PROC_RESULT" VARCHAR2(20), 
	"COUNT_REC" NUMBER, 
	"OBJECTS_ID" NUMBER, 
	"ADD_INFO" VARCHAR2(1000), 
	 CONSTRAINT "LOG_CALL_PROC_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE UNIQUE INDEX "ODS"."LOG_CALL_PROC_PK" ON "ODS"."LOG_CALL_PROC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

   CREATE SEQUENCE  "ODS"."LOG_CALL_PROC_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1887721 CACHE 20 NOORDER  NOCYCLE ;

  CREATE OR REPLACE TRIGGER "ODS"."LOG_CALL_PROC_ID_TRG" BEFORE INSERT ON LOG_CALL_PROC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT LOG_CALL_PROC_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "ODS"."LOG_CALL_PROC_ID_TRG" ENABLE;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_ADDRESS_HISTORY" ("ADDRESS_ID", "OBJECTS_ID", "OBJECTS_TYPE", "ADDRESS_AKT", "ADDRESS_CREATED", "CREATED_SOURCE", "CREATED_USER_ID", "CREATED_GROUP_ID", "CREATED_IPADR", "MODIFICATION_DATE", "MODIFICATION_SOURCE", "MODIFICATION_USER_ID", "MODIFICATION_GROUP_ID", "MODIFICATION_IPADR", "ADDRESS_HISTORY_ID", "ADDRESS_COMM") AS 
  SELECT
          ADDRESS_ID
          ,OBJECTS_ID
          ,OBJECTS_TYPE --
          ,ADDRESS_AKT
          ,ADDRESS_CREATED
          ,CREATED_SOURCE
          ,CREATED_USER_ID
          ,CREATED_GROUP_ID
          ,CREATED_IPADR
          ,MODIFICATION_DATE
          ,MODIFICATION_SOURCE
          ,MODIFICATION_USER_ID
          ,MODIFICATION_GROUP_ID
          ,MODIFICATION_IPADR
          ,ADDRESS_HISTORY_ID
          ,ADDRESS_COMM
		FROM CPD.ADDRESS_HISTORY@dblink_pkk adr;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_C_REQUEST_SNA" ("REQUEST_ID", "PARENT_ID", "TYPE_REQUEST_ID", "STATUS_ID", "OBJECTS_ID", "OBJECTS_TYPE", "CREATED_USER_ID", "CREATED_GROUP_ID", "CREATED_DATE", "MODIFICATION_DATE_REQUEST", "REQUEST_UNIQUE_CODE", "SCORE_TREE_ROUTE_ID", "REQUEST_REACT_ID_MT", "REQUEST_REACT_ID_CK", "REQUEST_REACT_ID_LAST", "REQUEST_CREDIT_ID_LAST", "REQUEST_INFO_ID_LAST", "MODIFICATION_DATE_INFO", "DECLARANT_TYPE", "FIO_ID", "SEX_ID", "BDATE", "BADR_ID", "MDOC_ID", "MADR_ID", "LADR_ID", "DADR_ID", "REACT_DATE", "REACT_COMMENT", "REQUEST_START_PATH", "CANCEL_CODE", "REQUEST_OLD_STATUS_ID", "REACT_USER_ID", "MODIFICATION_DATE_CREDIT", "SCHEMS_ID", "TYPE_CREDIT_ID", "ORG_PARTNER_ID", "ORG_PARTNER_CODE", "CURRENCY_ID", "PERIOD", "PERCENT", "PATH_CODE", "SUMMA", "SUMMA_DECL", "SUMMA_ANN", "SUMMA_FULL", "RETAIL_PRODUCT_GROUPS_ID", "CREDIT_JUR_CONTRACT", "CREDIT_ID", "DAY_PAY") AS 
  SELECT 
          cr.REQUEST_ID
          ,cr.PARENT_ID
          ,cr.TYPE_REQUEST_ID
          ,cr.STATUS_ID
          ,cr.OBJECTS_ID
          ,cr.OBJECTS_TYPE
          ,cr.CREATED_USER_ID
          ,cr.CREATED_GROUP_ID
          ,cr.CREATED_DATE
          ,cr.MODIFICATION_DATE AS MODIFICATION_DATE_REQUEST
          ,cr.REQUEST_UNIQUE_CODE
          ,cr.SCORE_TREE_ROUTE_ID
          ,cr.REQUEST_REACT_ID_MT
          ,cr.REQUEST_REACT_ID_CK
          ,cr.REQUEST_REACT_ID_LAST
          ,cr.REQUEST_CREDIT_ID_LAST
          ,cr.REQUEST_INFO_ID_LAST
          ,cri.MODIFICATION_DATE AS MODIFICATION_DATE_INFO
          ,cri.DECLARANT_TYPE
          ,cri.FIO_ID
          ,cri.SEX_ID
          ,cri.BDATE
          ,cri.BADR_ID
          ,cri.MDOC_ID
          ,cri.MADR_ID
          ,cri.LADR_ID
          ,cri.DADR_ID
          ,crr.REACT_DATE
          --,crr.REACT_COMMENT
          ,SUBSTR(crr.REACT_COMMENT, 1, 4000) as REACT_COMMENT
          ,crr.REQUEST_START_PATH
          ,crr.CANCEL_CODE
          ,crr.REQUEST_OLD_STATUS_ID
          ,crr.REACT_USER_ID
          ,crc.MODIFICATION_DATE as MODIFICATION_DATE_CREDIT
          ,crc.SCHEMS_ID
          ,crc.TYPE_CREDIT_ID
          ,crc.ORG_PARTNER_ID
          ,crc.ORG_PARTNER_CODE
          ,crc.CURRENCY_ID
          ,crc.PERIOD
          ,crc.PERCENT
          ,crc.PATH_CODE
          ,crc.SUMMA
          ,crc.SUMMA_DECL
          ,crc.SUMMA_ANN
          ,crc.SUMMA_FULL
          ,crc.RETAIL_PRODUCT_GROUPS_ID#NEED as RETAIL_PRODUCT_GROUPS_ID
          /*,cci.BASE_DOLG
          ,cci.SUMMA_BASE_DOLG
          ,cci.CONTRACT_STATUS_CODE*/
          ,cc.CREDIT_JUR_CONTRACT
          ,cc.CREDIT_ID
          ,cc.DAY_PAY
        FROM KREDIT.C_REQUEST@DBLINK_PKK cr
        LEFT JOIN KREDIT.C_REQUEST_INFO@DBLINK_PKK cri
          ON cr.REQUEST_ID=cri.REQUEST_ID AND NVL(cr.REQUEST_INFO_ID_LAST, -1)=cri.REQUEST_INFO_ID
        LEFT JOIN KREDIT.C_REQUEST_REACT@DBLINK_PKK crr
          ON cr.REQUEST_ID=crr.REQUEST_ID AND NVL(cr.REQUEST_REACT_ID_LAST, -1)=crr.REQUEST_REACT_ID
        LEFT JOIN KREDIT.C_REQUEST_CREDIT@DBLINK_PKK crc
          ON cr.REQUEST_ID=crc.REQUEST_ID AND NVL(cr.REQUEST_CREDIT_ID_LAST, -1)=crc.REQUEST_CREDIT_ID
        /*LEFT OUTER JOIN KREDIT.C_CREDIT_INFO@DBLINK_PKK cci ON cr.REQUEST_ID=cci.REQUEST_ID*/
        LEFT JOIN KREDIT.C_CREDIT@DBLINK_PKK cc
          ON cr.REQUEST_ID=cc.REQUEST_ID;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_CONTACTS" ("CONTACT_ID", "OBJECTS_ID", "OB_ID", "CONTACT_AKT", "CONTACT_COMMENT", "CONTACT_CREATED", "CONTACT_MODIFICATION", "FAMILY_REL", "FAMILY_REL_NAME", "FAMILY_REL_STATUS", "FAMILY_SEQ_ID") AS 
  SELECT cp.CONTACT_PERSON_ID as CONTACT_ID--первичный ключ вместе с флагом источника
    ,cp.OBJECTS_ID
    ,cp.CONTACT_OBJECTS_ID as OB_ID
    ,cp.CONTACT_AKT
    ,cp.CONTACT_COMMENT
    ,cp.CONTANT_CREATED as CONTACT_CREATED
    ,cp.MODIFICATION_DATE as CONTACT_MODIFICATION
    ,cp.FAMILY_REL
    ,fr.FAMILY_REL_NAME --наименование родственной связи
    ,fr.FAMILY_REL_STATUS --флаг что родство есть
    ,fr.FAMILY_SEQ_ID --степень родства
FROM CPD.CONTACT_PERSON@DBLINK_PKK cp
LEFT JOIN CPD.FAMILY_RELATIONS@DBLINK_PKK fr
  ON fr.family_rel=cp.family_rel;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_FAMILY" ("CONTACT_ID", "OBJECTS_ID", "OB_ID", "CONTACT_AKT", "CONTACT_CREATED", "CONTACT_MODIFICATION", "FAMILY_REL", "FAMILY_REL_NAME", "FAMILY_REL_STATUS", "FAMILY_SEQ_ID") AS 
  SELECT fa.FAMILY_ID as CONTACT_ID --первичный ключ
      --,'FAMILY' as NAME_SRC
      ,fa.OBJECTS_ID
      ,fa.OB_ID
      ,fa.FAMILY_AKT as CONTACT_AKT
      ,fa.FAMILY_CREATED as CONTACT_CREATED
      ,fa.MODIFICATION_DATE as CONTACT_MODIFICATION
      ,fa.FAMILY_REL
      ,fr.FAMILY_REL_NAME --наименование родственной связи
      ,fr.FAMILY_REL_STATUS --флаг что родство есть
      ,fr.FAMILY_SEQ_ID --степень родства
  FROM CPD.FAMILY@DBLINK_PKK fa
  LEFT JOIN CPD.FAMILY_RELATIONS@DBLINK_PKK fr
    ON fr.family_rel=fa.family_rel;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_EMAIL" ("EMAIL_ID", "OBJECTS_ID", "OBJECTS_TYPE", "EMAIL", "EMAIL_AKT", "EMAIL_CREATED", "CREATED_SOURCE", "CREATED_USER_ID", "CREATED_GROUP_ID", "CREATED_IPADR", "MODIFICATION_DATE") AS 
  SELECT
    em.EMAIL_ID
    ,em.OBJECTS_ID
    ,em.OBJECTS_TYPE
    ,UPPER(em.EMAIL) AS EMAIL
    ,em.EMAIL_AKT
    ,em.EMAIL_CREATED
    ,em.CREATED_SOURCE
    ,em.CREATED_USER_ID
    ,em.CREATED_GROUP_ID
    ,em.CREATED_IPADR
    ,em.MODIFICATION_DATE
  FROM CPD.EMAIL@dblink_pkk em;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_PERSON_INFO" ("FIO_ID", "OBJECTS_ID", "FIO_AKT", "FIO_CREATED", "FIO_HISTORY_PK", "FIO4SEARCH", "BIRTH", "MODIFICATION_DATE") AS 
  SELECT 
    fh.FIO_ID
    ,fh.OBJECTS_ID
    ,fh.FIO_AKT
    ,fh.FIO_CREATED
    ,fh.FIO_HISTORY_PK
    ,f.FIO4SEARCH
    ,b.BIRTH
    ,fh.MODIFICATION_DATE
  FROM CPD.FIO_HISTORY@DBLINK_PKK fh
  LEFT JOIN CPD.FIO@DBLINK_PKK f
    ON fh.FIO_ID=f.FIO_ID
  LEFT JOIN CPD.BIRTH@DBLINK_PKK b
    ON fh.OBJECTS_ID=b.OBJECTS_ID and b.BIRTH_AKT=1;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_PHONES" ("PHONES_ID", "OBJECTS_ID", "OBJECTS_TYPE", "PHONES_AKT", "PHONES_COMM", "PHONES_CREATED", "CREATED_USER_ID", "CREATED_GROUP_ID", "MODIFICATION_DATE", "PHONES_LAST", "FAMILY_REL", "PHONE", "ADDRESS_ID", "GROUPS_NAME", "FAMILY_REL_NAME", "FAMILY_REL_STATUS", "FAMILY_SEQ_ID") AS 
  SELECT ph.PHONES_ID
            ,ph.OBJECTS_ID
            ,ph.OBJECTS_TYPE
            ,ph.PHONES_AKT
            ,UPPER(TRIM(ph.PHONES_COMM)) AS PHONES_COMM
            ,ph.PHONES_CREATED
            ,ph.CREATED_USER_ID
            ,ph.CREATED_GROUP_ID
            ,ph.MODIFICATION_DATE
            ,ph.PHONES_LAST
            ,ph.FAMILY_REL 
            ,ph.PHONE
            ,ph.ADDRESS_ID
            ,grp.GROUPS_NAME
            ,fr.FAMILY_REL_NAME --наименование родственной связи
            ,fr.FAMILY_REL_STATUS --флаг что родство есть
            ,fr.FAMILY_SEQ_ID --степень родства
          FROM CPD.PHONES@DBLINK_PKK ph
          LEFT JOIN KREDIT.GROUPS@DBLINK_PKK grp
            ON ph.CREATED_GROUP_ID=grp.GROUPS_ID
          LEFT JOIN CPD.FAMILY_RELATIONS@DBLINK_PKK fr
            ON fr.family_rel=ph.family_rel;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PKK_WORKS_INFO" ("OBJECTS_ID", "WORKS_ID", "WORKS_HISTORY_ID", "WORKS_SALARY", "WORKS_STAG", "WORKS_AKT", "WORKS_LAST", "ORG_ID", "ORG_NAME", "WORKS_POST", "WORKS_POST_NAME", "RELATION_PDL", "WORKS_CREATED", "MODIFICATION_DATE") AS 
  SELECT 
    wh.OBJECTS_ID
    ,w.works_id
    ,wh.WORKS_HISTORY_ID
    ,w.WORKS_SALARY
    ,wh.WORKS_STAG
    ,wh.works_akt
    ,wh.works_last
    ,org_a.ORG_ID
    ,org_a.ORG_NAME
    ,w.WORKS_POST
    ,w_post.WORKS_POST_NAME
    ,w_post.RELATION_PDL
    ,wh.WORKS_CREATED
    ,wh.MODIFICATION_DATE
    FROM CPD.WORKS_HISTORY@DBLINK_PKK wh
    INNER JOIN works@DBLINK_PKK w ON wh.works_id = w.works_id
    LEFT JOIN CPD.WORKS_POST@DBLINK_PKK w_post ON w_post.WORKS_POST = w.WORKS_POST
    LEFT JOIN CPD.ORG@DBLINK_PKK org_a ON org_a.ORG_ID = w.ORG_ID;

  CREATE INDEX "SNAUSER"."I_AQ_PKK_SNA_ID" ON "SNAUSER"."AQ_PKK_SNA_LOG_MESSAGE" ("MSG_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "SNAUSER"."I_AQ_PKK_SNA_REQUESTS_ID" ON "SNAUSER"."AQ_PKK_SNA_LOG_MESSAGE" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "ODS"."I_WORKS_OB_ID_RANK" ON "ODS"."PKK_WORKS_INFO" ("OBJECTS_ID", "WORKS_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_PHONES_OB_ID_TYPE_RANK" ON "ODS"."PKK_PHONES" ("OBJECTS_ID", "OBJECTS_TYPE", "PHONES_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAILS_PASP" ("OBJECTS_ID", "DOCUMENTS_SERIAL", "DOCUMENTS_NUMBER", "PASP", "DOCUMENTS_AKT", "FIO_DR", "FIO_AKT", "DOC_DATE", "FIO_DATE") AS 
  SELECT DISTINCT doc.OBJECTS_ID
          ,doc.DOCUMENTS_SERIAL
          ,doc.DOCUMENTS_NUMBER
					,doc.DOCUMENTS_SERIAL||' '||doc.DOCUMENTS_NUMBER AS PASP
					,doc.DOCUMENTS_AKT
					,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') as FIO_DR
					,per.FIO_AKT
          ,TO_CHAR(COALESCE(doc.MODIFICATION_DATE, doc.DOCUMENTS_CREATED), 'dd.mm.yyyy') AS DOC_DATE
          ,TO_CHAR(COALESCE(per.MODIFICATION_DATE, per.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
				FROM ODS.PKK_DOCUMENTS_HISTORY_INFO doc
				INNER JOIN ODS.PKK_PERSON_INFO per
					ON doc.OBJECTS_ID=per.OBJECTS_ID AND DOCUMENTS_TYPE=21
        /*WHERE DOCUMENTS_NUMBER=SUBSTR('0811 019641', 6, 6)
					AND DOCUMENTS_SERIAL=SUBSTR('0811 019641', 1, 4)*/;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PROC_LOAD_AGGREGATION_ID" ("OBJECTS_ID", "PROC_DATE_START", "PROC_DATE_END", "TIME_FULL", "TIME_ADR", "CNT_ADR", "PERC_ADR", "TIME_ADRH", "CNT_ADRH", "PERC_ADRH", "TIME_CCI", "CNT_CCI", "PERC_CCI", "TIME_CR", "CNT_CR", "PERC_CR", "TIME_CONT", "CNT_CONT", "PERC_CONT", "TIME_DOC", "CNT_DOC", "PERC_DOC", "TIME_EML", "CNT_EML", "PERC_EML", "TIME_FEML", "CNT_FEML", "PERC_FEML", "TIME_PERS", "CNT_PERS", "PERC_PERS", "TIME_WORK", "CNT_WORK", "PERC_WORK", "TIME_PH", "CNT_PH", "PERC_PH") AS 
  SELECT pr_main.OBJECTS_ID
    ,pr_main.PROC_DATE_START, pr_main.PROC_DATE_END
    ,pr_main.PROC_DURATION_TIME AS TIME_FULL
    --ADDRESS
    ,pr_adr.PROC_DURATION_TIME AS TIME_ADR
    ,pr_adr.COUNT_REC AS CNT_ADR
    ,ROUND( (to_number(extract(second from pr_adr.PROC_DURATION_TIME))+to_number(extract(minute from pr_adr.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_adr.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_ADR
    --ADDRESS_HISTORY
    ,pr_adrh.PROC_DURATION_TIME AS TIME_ADRH
    ,pr_adrh.COUNT_REC AS CNT_ADRH
    ,ROUND( (to_number(extract(second from pr_adrh.PROC_DURATION_TIME))+to_number(extract(minute from pr_adrh.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_adrh.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_ADRH
    --C_CREDIT_INFO
    ,pr_cci.PROC_DURATION_TIME AS TIME_CCI
    ,pr_cci.COUNT_REC AS CNT_CCI
    ,ROUND( (to_number(extract(second from pr_cci.PROC_DURATION_TIME))+to_number(extract(minute from pr_cci.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_cci.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_CCI
    --PKK_C_REQUEST_SNA
    ,pr_cr.PROC_DURATION_TIME AS TIME_CR
    ,pr_cr.COUNT_REC AS CNT_CR
    ,ROUND( (to_number(extract(second from pr_cr.PROC_DURATION_TIME))+to_number(extract(minute from pr_cr.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_cr.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_CR
    --PKK_CONTACTS
    ,pr_cont.PROC_DURATION_TIME AS TIME_CONT
    ,pr_cont.COUNT_REC AS CNT_CONT
    ,ROUND(((extract(second from pr_cont.PROC_DURATION_TIME))+(extract(minute from pr_cont.PROC_DURATION_TIME))*60
        +(extract(hour from pr_cont.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_CONT
    --PKK_DOCUMENTS_HISTORY
    ,pr_doc.PROC_DURATION_TIME AS TIME_DOC
    ,pr_doc.COUNT_REC AS CNT_DOC
    ,ROUND(((extract(second from pr_doc.PROC_DURATION_TIME))+(extract(minute from pr_doc.PROC_DURATION_TIME))*60
        +(extract(hour from pr_doc.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_DOC
    --PKK_EMAIL
    ,pr_eml.PROC_DURATION_TIME AS TIME_EML
    ,pr_eml.COUNT_REC AS CNT_EML
    ,ROUND(((extract(second from pr_eml.PROC_DURATION_TIME))+(extract(minute from pr_eml.PROC_DURATION_TIME))*60
        +(extract(hour from pr_eml.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_EML
    --PKK_FAMILY
    ,pr_feml.PROC_DURATION_TIME AS TIME_FEML
    ,pr_feml.COUNT_REC AS CNT_FEML
    ,ROUND(((extract(second from pr_feml.PROC_DURATION_TIME))+(extract(minute from pr_feml.PROC_DURATION_TIME))*60
        +(extract(hour from pr_feml.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_FEML
    --PKK_PERSON_INFO
    ,pr_pers.PROC_DURATION_TIME AS TIME_PERS
    ,pr_pers.COUNT_REC AS CNT_PERS
    ,ROUND(((extract(second from pr_pers.PROC_DURATION_TIME))+(extract(minute from pr_pers.PROC_DURATION_TIME))*60
        +(extract(hour from pr_pers.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_PERS
    --PKK_WORKS_INFO
    ,pr_work.PROC_DURATION_TIME AS TIME_WORK
    ,pr_work.COUNT_REC AS CNT_WORK
    ,ROUND(((extract(second from pr_work.PROC_DURATION_TIME))+(extract(minute from pr_work.PROC_DURATION_TIME))*60
        +(extract(hour from pr_work.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_WORK
    --PKK_PHONES
    ,pr_ph.PROC_DURATION_TIME AS TIME_PH
    ,pr_ph.COUNT_REC AS CNT_PH
    ,ROUND(((extract(second from pr_ph.PROC_DURATION_TIME))+(extract(minute from pr_ph.PROC_DURATION_TIME))*60
        +(extract(hour from pr_ph.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_PH
    FROM ODS.LOG_CALL_PROC pr_main
    LEFT JOIN ODS.LOG_CALL_PROC pr_adr
      ON pr_adr.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_adr.PROC_NAME='PR$UPD_P_PKK_ADDRESS'
    LEFT JOIN ODS.LOG_CALL_PROC pr_adrh
      ON pr_adrh.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_adrh.PROC_NAME='PR$UPD_P_PKK_ADDRESS_HISTORY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cci
      ON pr_cci.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cci.PROC_NAME='PR$UPD_P_PKK_C_CREDIT_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cr
      ON pr_cr.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cr.PROC_NAME='PR$UPD_P_PKK_C_REQUEST_SNA'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cont
      ON pr_cont.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cont.PROC_NAME='PR$UPD_P_PKK_CONTACTS'
    LEFT JOIN ODS.LOG_CALL_PROC pr_doc
      ON pr_doc.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_doc.PROC_NAME='PR$UPD_P_PKK_DOCUMENTS_HISTORY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_eml
      ON pr_eml.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_eml.PROC_NAME='PR$UPD_P_PKK_EMAIL'
    LEFT JOIN ODS.LOG_CALL_PROC pr_feml
      ON pr_feml.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_feml.PROC_NAME='PR$UPD_P_PKK_FAMILY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_pers
      ON pr_pers.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_pers.PROC_NAME='PR$UPD_P_PKK_PERSON_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_work
      ON pr_work.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_work.PROC_NAME='PR$UPD_P_PKK_WORKS_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_ph
      ON pr_ph.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_ph.PROC_NAME='PR$UPD_P_PKK_PHONES'
    WHERE pr_main.PROC_NAME IN('PR$UPD__P_PKK') AND pr_main.PROC_DATE_START>SYSDATE-5;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_PROC_LOAD_AGGREGATION_ARR" ("PROC_NAME", "PROC_DATE_START", "PROC_DATE_END", "TIME_FULL", "MSG_ERROR", "PROC_RESULT", "TIME_ADR", "CNT_ADR", "PERC_ADR", "TIME_ADRH", "CNT_ADRH", "PERC_ADRH", "TIME_CCI", "CNT_CCI", "PERC_CCI", "TIME_CR", "CNT_CR", "PERC_CR", "TIME_CONT", "CNT_CONT", "PERC_CONT", "TIME_DOC", "CNT_DOC", "PERC_DOC", "TIME_EML", "CNT_EML", "PERC_EML", "TIME_FEML", "CNT_FEML", "PERC_FEML", "TIME_PERS", "CNT_PERS", "PERC_PERS", "TIME_WORK", "CNT_WORK", "PERC_WORK", "TIME_PH", "CNT_PH", "PERC_PH", "TIME_DBL", "CNT_DBL", "PERC_DBL") AS 
  SELECT pr_main.PROC_NAME
    ,pr_main.PROC_DATE_START, pr_main.PROC_DATE_END
    ,pr_main.PROC_DURATION_TIME AS TIME_FULL
    ,pr_main.MSG_ERROR
    ,pr_main.PROC_RESULT
    --ADDRESS
    ,pr_adr.PROC_DURATION_TIME AS TIME_ADR
    ,pr_adr.COUNT_REC AS CNT_ADR
    ,ROUND( (to_number(extract(second from pr_adr.PROC_DURATION_TIME))+to_number(extract(minute from pr_adr.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_adr.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_ADR
    --ADDRESS_HISTORY
    ,pr_adrh.PROC_DURATION_TIME AS TIME_ADRH
    ,pr_adrh.COUNT_REC AS CNT_ADRH
    ,ROUND( (to_number(extract(second from pr_adrh.PROC_DURATION_TIME))+to_number(extract(minute from pr_adrh.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_adrh.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_ADRH
    --PKK_C_CREDIT_INFO
    ,pr_cci.PROC_DURATION_TIME AS TIME_CCI
    ,pr_cci.COUNT_REC AS CNT_CCI
    ,ROUND( (to_number(extract(second from pr_cci.PROC_DURATION_TIME))+to_number(extract(minute from pr_cci.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_cci.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_CCI
    --PR$UPD_PKK_C_REQUEST_SNA
    ,pr_cr.PROC_DURATION_TIME AS TIME_CR
    ,pr_cr.COUNT_REC AS CNT_CR
    ,ROUND( (to_number(extract(second from pr_cr.PROC_DURATION_TIME))+to_number(extract(minute from pr_cr.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_cr.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS perc_CR
    --PR$UPD_PKK_CONTACTS
    ,pr_cont.PROC_DURATION_TIME AS TIME_CONT
    ,pr_cont.COUNT_REC AS CNT_CONT
    ,ROUND(((extract(second from pr_cont.PROC_DURATION_TIME))+(extract(minute from pr_cont.PROC_DURATION_TIME))*60
        +(extract(hour from pr_cont.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_CONT
    --PR$UPD_PKK_DOCUMENTS_HISTORY
    ,pr_doc.PROC_DURATION_TIME AS TIME_DOC
    ,pr_doc.COUNT_REC AS CNT_DOC
    ,ROUND(((extract(second from pr_doc.PROC_DURATION_TIME))+(extract(minute from pr_doc.PROC_DURATION_TIME))*60
        +(extract(hour from pr_doc.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_DOC
    --PR$UPD_PKK_EMAIL
    ,pr_eml.PROC_DURATION_TIME AS TIME_EML
    ,pr_eml.COUNT_REC AS CNT_EML
    ,ROUND(((extract(second from pr_eml.PROC_DURATION_TIME))+(extract(minute from pr_eml.PROC_DURATION_TIME))*60
        +(extract(hour from pr_eml.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_EML
    --PR$UPD_PKK_FAMILY
    ,pr_feml.PROC_DURATION_TIME AS TIME_FEML
    ,pr_feml.COUNT_REC AS CNT_FEML
    ,ROUND(((extract(second from pr_feml.PROC_DURATION_TIME))+(extract(minute from pr_feml.PROC_DURATION_TIME))*60
        +(extract(hour from pr_feml.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_FEML
    --PR$UPD_PKK_PERSON_INFO
    ,pr_pers.PROC_DURATION_TIME AS TIME_PERS
    ,pr_pers.COUNT_REC AS CNT_PERS
    ,ROUND(((extract(second from pr_pers.PROC_DURATION_TIME))+(extract(minute from pr_pers.PROC_DURATION_TIME))*60
        +(extract(hour from pr_pers.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_PERS
    --PR$UPD_PKK_WORKS_INFO
    ,pr_work.PROC_DURATION_TIME AS TIME_WORK
    ,pr_work.COUNT_REC AS CNT_WORK
    ,ROUND(((extract(second from pr_work.PROC_DURATION_TIME))+(extract(minute from pr_work.PROC_DURATION_TIME))*60
        +(extract(hour from pr_work.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_WORK
    --PR$UPD_PKK_PHONES
    ,pr_ph.PROC_DURATION_TIME AS TIME_PH
    ,pr_ph.COUNT_REC AS CNT_PH
    ,ROUND(((extract(second from pr_ph.PROC_DURATION_TIME))+(extract(minute from pr_ph.PROC_DURATION_TIME))*60
        +(extract(hour from pr_ph.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_PH
    --PR$UPD_PKK_PERSON_COLLAPSED
    ,pr_per_dbl.PROC_DURATION_TIME AS TIME_DBL
    ,pr_per_dbl.COUNT_REC AS CNT_DBL
    ,ROUND(((extract(second from pr_per_dbl.PROC_DURATION_TIME))+(extract(minute from pr_per_dbl.PROC_DURATION_TIME))*60
        +(extract(hour from pr_per_dbl.PROC_DURATION_TIME))*60*60)
      /(to_number(extract(second from pr_main.PROC_DURATION_TIME))+to_number(extract(minute from pr_main.PROC_DURATION_TIME))*60
        +to_number(extract(hour from pr_main.PROC_DURATION_TIME))*60*60)*100, 4) AS PERC_DBL
    FROM ODS.LOG_CALL_PROC pr_main
    LEFT JOIN ODS.LOG_CALL_PROC pr_adr
      ON pr_adr.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_adr.PROC_NAME='PR$UPD_PKK_ADDRESS'
    LEFT JOIN ODS.LOG_CALL_PROC pr_adrh
      ON pr_adrh.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_adrh.PROC_NAME='PR$UPD_PKK_ADDRESS_HISTORY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cci
      ON pr_cci.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cci.PROC_NAME='PR$UPD_PKK_C_CREDIT_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cr
      ON pr_cr.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cr.PROC_NAME='PR$UPD_PKK_C_REQUEST_SNA'
    LEFT JOIN ODS.LOG_CALL_PROC pr_cont
      ON pr_cont.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_cont.PROC_NAME='PR$UPD_PKK_CONTACTS'
    LEFT JOIN ODS.LOG_CALL_PROC pr_doc
      ON pr_doc.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_doc.PROC_NAME='PR$UPD_PKK_DOCUMENTS_HISTORY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_eml
      ON pr_eml.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_eml.PROC_NAME='PR$UPD_PKK_EMAIL'
    LEFT JOIN ODS.LOG_CALL_PROC pr_feml
      ON pr_feml.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_feml.PROC_NAME='PR$UPD_PKK_FAMILY'
    LEFT JOIN ODS.LOG_CALL_PROC pr_pers
      ON pr_pers.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_pers.PROC_NAME='PR$UPD_PKK_PERSON_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_work
      ON pr_work.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_work.PROC_NAME='PR$UPD_PKK_WORKS_INFO'
    LEFT JOIN ODS.LOG_CALL_PROC pr_ph
      ON pr_ph.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_ph.PROC_NAME='PR$UPD_PKK_PHONES'
    LEFT JOIN ODS.LOG_CALL_PROC pr_per_dbl
      ON pr_per_dbl.PROC_DATE_START BETWEEN pr_main.PROC_DATE_START AND pr_main.PROC_DATE_END
        AND pr_per_dbl.PROC_NAME='PR$UPD_PKK_PERSON_COLLAPSED'
    WHERE pr_main.PROC_NAME IN('PR$UPD__PKK') --AND pr_main.PROC_DATE_START>SYSDATE-1;

  CREATE TABLE "ODS"."Q_PKK_PHONES_RNK_MIS" 
   (	"OBJECTS_ID" NUMBER, 
	"CNT_ALL" NUMBER, 
	"CNT_MIS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_PHONE" ("OBJECTS_ID", "PHONE", "PHONES_NUM", "PHONES_AKT", "FIO_DR", "FIO_AKT", "PHONE_DATE", "FIO_DATE") AS 
  SELECT DISTINCT 
        COALESCE(org.OBJECTS_ID, wor.OBJECTS_ID, per.OBJECTS_ID) as OBJECTS_ID
        ,nod.PHONE
				,nod.PHONE||' - '
          ||(CASE WHEN nod.OBJECTS_TYPE=2 THEN 'Мобильный' 
						WHEN nod.OBJECTS_TYPE=200 THEN 'Доп. контакт: '||COALESCE(TRIM(nod.PHONES_COMM), '-')
						WHEN nod.OBJECTS_TYPE=8 THEN 'Телефон привязанный к адресу' 
						WHEN nod.OBJECTS_TYPE=12 THEN 'Телефон на раб. месте' 
						WHEN nod.OBJECTS_TYPE=3 THEN 'Телефон работодателя' 
					ELSE 'ДРУГОЙ' END) AS PHONES_NUM
				,nod.PHONES_AKT
        ,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') as FIO_DR
				,per.FIO_AKT
        ,TO_CHAR(COALESCE(nod.MODIFICATION_DATE, nod.PHONES_CREATED), 'dd.mm.yyyy') AS PHONE_DATE
        ,TO_CHAR(COALESCE(per.MODIFICATION_DATE, per.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
			FROM ODS.PKK_PHONES nod
			LEFT JOIN ODS.PKK_WORKS_INFO org
				ON nod.OBJECTS_ID = org.ORG_ID AND nod.OBJECTS_TYPE=3
			LEFT JOIN ODS.PKK_WORKS_INFO wor
				ON nod.OBJECTS_ID = wor.WORKS_ID AND nod.OBJECTS_TYPE=12
			LEFT JOIN ODS.PKK_PERSON_INFO per
				ON per.OBJECTS_ID = COALESCE(org.OBJECTS_ID, wor.OBJECTS_ID, nod.OBJECTS_ID)
					/*AND nod.OBJECTS_TYPE IN(2, 200)*/
			--WHERE 50>(SELECT COUNT(*) cnt FROM ODS.PKK_PHONES WHERE PHONE=nod.PHONE)
      --AND nod.PHONE='4212414171'
			ORDER BY OBJECTS_ID, PHONES_NUM, FIO_AKT, FIO_DATE, PHONE_DATE, PHONES_AKT;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_ADR" ("OBJECTS_ID", "ADDRESS_TYPE", "ADDRESS_AKT", "ADR_DATE", "FIO_DR", "FIO_AKT", "FIO_DATE", "ADDRESS_ID") AS 
  SELECT per.OBJECTS_ID AS OBJECTS_ID
			,(CASE WHEN nod.OBJECTS_TYPE=2 THEN 'Адрес проживания' 
					WHEN nod.OBJECTS_TYPE=5 THEN 'Адрес прописки' 
					WHEN nod.OBJECTS_TYPE=3 THEN 'Адрес работы' 
				ELSE 'ДРУГОЙ' END) AS ADDRESS_TYPE
			,nod.ADDRESS_AKT
      ,TO_CHAR(COALESCE(nod.MODIFICATION_DATE, nod.ADDRESS_CREATED), 'dd.mm.yyyy') AS ADR_DATE
      ,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') AS FIO_DR
			,per.FIO_AKT
      ,TO_CHAR(COALESCE(per.MODIFICATION_DATE, per.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
      ,nod.ADDRESS_ID
			FROM ODS.PKK_ADDRESS_HISTORY nod
			LEFT JOIN ODS.PKK_WORKS_INFO wor
				ON wor.ORG_ID=nod.OBJECTS_ID AND nod.OBJECTS_TYPE=3
			LEFT JOIN ODS.PKK_DOCUMENTS_HISTORY_INFO doc
				ON doc.DOCUMENTS_ID=nod.OBJECTS_ID AND doc.DOCUMENTS_TYPE=21 AND nod.OBJECTS_TYPE=5
			LEFT JOIN ODS.PKK_PERSON_INFO per
				ON per.OBJECTS_ID=COALESCE(wor.OBJECTS_ID, doc.OBJECTS_ID, nod.OBJECTS_ID)
			--WHERE nod.ADDRESS_ID = 28214
			ORDER BY OBJECTS_ID, ADDRESS_TYPE, FIO_AKT, FIO_DATE, ADR_DATE, ADDRESS_AKT;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_EMAIL" ("OBJECTS_ID", "EMAIL", "EMAIL_AKT", "FIO_DR", "FIO_AKT", "EMAIL_DATE", "FIO_DATE") AS 
  SELECT nod.OBJECTS_ID
			,nod.EMAIL AS EMAIL
			,nod.EMAIL_AKT
      ,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') AS FIO_DR
			,per.FIO_AKT
      ,TO_CHAR(COALESCE(nod.MODIFICATION_DATE, nod.EMAIL_CREATED), 'dd.mm.yyyy') AS EMAIL_DATE
      ,TO_CHAR(COALESCE(per.MODIFICATION_DATE, per.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
		FROM ODS.PKK_EMAIL nod
		LEFT JOIN ODS.PKK_PERSON_INFO per
			ON nod.OBJECTS_ID=per.OBJECTS_ID
		--WHERE nod.EMAIL="&node_value."
		ORDER BY OBJECTS_ID, FIO_AKT, FIO_DATE, EMAIL_DATE, EMAIL_AKT;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_CREDIT" ("REQUEST_ID", "PARENT_ID", "OBJECTS_ID", "TYPE_REQUEST_ID", "STATUS_ID", "CREATED_DATE", "MODIFICATION_DATE", "OLD_STATUS_ID", "SCORE_TREE_ROUTE_ID", "DECLARANT_TYPE", "REACT_COMMENT", "CANCEL_CODE", "REACT_USER_ID", "SCHEMS_ID", "CURRENCY_ID", "PERIOD", "PERCENT", "SUMMA_DECL", "SUMMA_ANN", "SUMMA_FULL") AS 
  SELECT REQUEST_ID
				,PARENT_ID
				,OBJECTS_ID
				,TYPE_REQUEST_ID
				,STATUS_ID
        ,TO_CHAR(CREATED_DATE, 'dd.mm.yyyy') AS CREATED_DATE
        ,TO_CHAR(MODIFICATION_DATE_REQUEST, 'dd.mm.yyyy') AS MODIFICATION_DATE
				,REQUEST_OLD_STATUS_ID as OLD_STATUS_ID
				,SCORE_TREE_ROUTE_ID
				,DECLARANT_TYPE
				,REACT_COMMENT
				,CANCEL_CODE
				,REACT_USER_ID
				,SCHEMS_ID
				,CURRENCY_ID
				,PERIOD
				,PERCENT
				,SUMMA_DECL
				,SUMMA_ANN
				,SUMMA_FULL
			FROM ODS.PKK_C_REQUEST_SNA cr
      WHERE /*cr.OBJECTS_ID=3017770 AND*/ (SCORE_TREE_ROUTE_ID^=6 OR (SCORE_TREE_ROUTE_ID=6 AND STATUS_ID =14));

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_FIO_SIMILAR" ("OBJECTS_ID", "FIO4SEARCH", "BIRTH", "FIO_DR", "FIO_AKT", "FIO_DATE") AS 
  SELECT nod.OBJECTS_ID
      ,nod.FIO4SEARCH
      ,nod.BIRTH
      ,nod.FIO4SEARCH||' '||TO_CHAR(nod.BIRTH, 'dd.mm.yyyy') AS FIO_DR
			,nod.FIO_AKT
      ,TO_CHAR(COALESCE(nod.MODIFICATION_DATE, nod.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
		FROM ODS.PKK_PERSON_INFO nod2
    LEFT JOIN ODS.PKK_PERSON_INFO nod
      ON nod2.FIO4SEARCH=nod.FIO4SEARCH AND NVL(nod2.BIRTH, '01-01-1900')=NVL(nod.BIRTH, '01-01-1900')
		/*WHERE nod.FIO4SEARCH=SUBSTR('КАМАЕВА ЕЛЕНА НИКОЛАЕВНА 08.07.1988; PERSON_ID=512490', 1
        , INDEX('КАМАЕВА ЕЛЕНА НИКОЛАЕВНА 08.07.1988; PERSON_ID=512490'
        , SCAN('КАМАЕВА ЕЛЕНА НИКОЛАЕВНА 08.07.1988; PERSON_ID=512490', -1, ' '))-1)
			AND nod.BIRTH=
				86400*INPUT(SCAN('КАМАЕВА ЕЛЕНА НИКОЛАЕВНА 08.07.1988; PERSON_ID=512490', -1, ' '), DDMMYY10.)*/
		/*ORDER BY OBJECTS_ID, FIO_AKT, FIO_DATE*/;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_BNK_INFO" ("REQUEST_ID", "PERSON_ID", "FIO_DR", "BNK_CODE", "BNK_COMMENT", "BNK_DESC", "DATE_LOG") AS 
  SELECT DISTINCT tbnk.REQUEST_ID
      ,tbnk.PERSON_ID
      ,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') AS FIO_DR
      ,tbnk.BNK_CODE
      ,(CASE	WHEN tbnk.BNK_TYPE=1 THEN 'Тяжелый БНК' 
          WHEN tbnk.BNK_TYPE=2 THEN 'Легкий БНК' 
          ELSE 'Информационный БНК'
        END) AS BNK_COMMENT
      ,db.BNK_DESC
      ,TO_CHAR(tbnk.DATE_INS, 'dd.mm.yyyy')as DATE_LOG
    FROM SFF.RP_BNK@SNA tbnk
    LEFT JOIN SFF.D_BNK@SNA db
      ON tbnk.BNK_CODE = db.BNK_CODE
		LEFT JOIN ODS.PKK_PERSON_INFO per
			ON tbnk.PERSON_ID=per.OBJECTS_ID
   -- WHERE tbnk.PERSON_ID=3017770;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_FROD_INFO" ("FROD_DATE", "REQUEST_ID", "PERSON_ID", "REQ_DATE", "STATUS", "FIO", "DR", "FIO_DR", "TYPE_REL", "TYPE_REL_DESC", "DAY_BETWEEN", "REQUEST_ID_REL", "PERSON_ID_REL", "REQ_DATE_REL", "STATUS_REL", "FIO_REL", "DR_REL", "FIO_DR_REL", "FROD_RULE_ID", "SCORE_TREE_ROUTE_ID", "CREATED_GROUP_ID", "SCORE_TREE_ROUTE_ID_REL", "CREATED_GROUP_ID_REL", "INFO_EQ", "INFO_NEQ", "INFO_NEQ_REL") AS 
  SELECT DISTINCT 
          TO_CHAR(fr.FROD_RULE_DATE, 'dd.mm.yyyy') as FROD_DATE
					,fr.REQUEST_ID
					,fr.PERSON_ID
          ,TO_CHAR(fr.REQ_DATE, 'dd.mm.yyyy') as REQ_DATE
          ,TO_CHAR(fr.STATUS_ID)||' - '||cs.STATUS_NAME AS STATUS
          ,fr.FIO
          ,fr.DR
					,fr.FIO||' '||fr.DR AS FIO_DR
					,fr.TYPE_REL
					,fr.TYPE_REL_DESC
					,fr.DAY_BETWEEN
					,fr.REQUEST_ID_REL
					,fr.PERSON_ID_REL
          ,TO_CHAR(fr.REQ_DATE_REL, 'dd.mm.yyyy') as REQ_DATE_REL
          ,TO_CHAR(fr.STATUS_ID_REL)||' - '||cs_rel.STATUS_NAME AS STATUS_REL
          ,fr.FIO_REL
          ,fr.DR_REL
					,fr.FIO_REL||' '||fr.DR_REL as FIO_DR_REL
					,fr.FROD_RULE_ID
					,fr.SCORE_TREE_ROUTE_ID
					,fr.CREATED_GROUP_ID
					,fr.SCORE_TREE_ROUTE_ID_REL
					,fr.CREATED_GROUP_ID_REL
					,fr.INFO_EQ
					,fr.INFO_NEQ
					,fr.INFO_NEQ_REL 
				FROM SFF.FROD_RULE@SNA fr
				LEFT OUTER JOIN SFF.C_STATUS@SNA cs 	ON fr.STATUS_ID=cs.STATUS_ID
				LEFT OUTER JOIN SFF.C_STATUS@SNA cs_rel ON fr.STATUS_ID_REL=cs_rel.STATUS_ID;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_DEFOLT_INFO" ("REQUEST_ID", "PERSON_ID", "CREATED_DATE", "MODIFICATION_DATE", "MOP_LST5", "MOP_FST5", "MOP_LST_TRIM", "DEFOLT", "STATUS_ID", "MOP_DELAY", "RP_DEFOLT_DATE", "DATE_REQUEST", "DATE_REQUEST_MODIF", "DATE_LOG", "DEFOLT_DESC") AS 
  SELECT DISTINCT t1."REQUEST_ID",t1."PERSON_ID",t1."CREATED_DATE",t1."MODIFICATION_DATE",t1."MOP_LST5",t1."MOP_FST5",t1."MOP_LST_TRIM",t1."DEFOLT",t1."STATUS_ID",t1."MOP_DELAY",t1."RP_DEFOLT_DATE" 
            ,TO_CHAR(CREATED_DATE, 'dd.mm.yyyy') as DATE_REQUEST
            ,TO_CHAR(MODIFICATION_DATE, 'dd.mm.yyyy') as DATE_REQUEST_MODIF
            ,TO_CHAR(RP_DEFOLT_DATE, 'dd.mm.yyyy') as DATE_LOG
						,'Крим. дефолт (выход в 30+ на первых двух платежах)' as DEFOLT_DESC
				FROM SFF.RP_DEFOLT@SNA t1
				--WHERE PERSON_ID=3017770;

  CREATE INDEX "ODS"."I_LOG_CALL_PROC_NAME_DT" ON "ODS"."LOG_CALL_PROC" ("PROC_NAME", "PROC_DATE_START") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "SNAUSER"."VW_SNA_REQUEST_HISTORY_LOG" ("FIO_LOGIN", "USERGROUP", "STATUS", "AREA", "MIN_OF_DATE_LOG", "AVG_OF_MAX_OF_CNTNODE") AS 
  SELECT --hist_agg.REQUEST_ID,
	d_user.FIO||'/'||hist_agg.LOGIN AS FIO_LOGIN
  ,d_user.USERGROUP
  ,d_user.STATUS
  ,d_user.AREA
  --,hist_agg.MAX_of_CNTNODE
  ,hist_agg.MIN_of_DATE_LOG
  ,AVG(hist_agg.MAX_of_CNTNODE) as AVG_of_MAX_of_CNTNODE
FROM 
  (SELECT hist.REQUEST_ID, hist.LOGIN
        ,MIN(hist.SNA_DATE_BEGIN) AS MIN_of_DATE_LOG
        ,MAX(hist.CNT_NODE) AS MAX_of_CNTNODE
        FROM SNAUSER.SNA_REQUEST_HISTORY hist
      WHERE REQUEST_ID>1 AND NOT hist.LOGIN IS NULL
      GROUP BY hist.REQUEST_ID, hist.LOGIN) hist_agg
	LEFT JOIN SNAUSER.SNA_USER_REG d_user
		ON hist_agg.LOGIN=d_user.LOGIN
   WHERE d_user.USERGROUP^='Admin_DPM'
  GROUP BY --hist_agg.REQUEST_ID,
    d_user.FIO||'/'||hist_agg.LOGIN
    ,d_user.USERGROUP
    ,d_user.STATUS
    ,d_user.AREA
    --,hist_agg.MAX_of_CNTNODE
    ,hist_agg.MIN_of_DATE_LOG;

  CREATE TABLE "ODS"."PKK_DEFOLT" 
   (	"REQUEST_ID" NUMBER NOT NULL ENABLE, 
	"PERSON_ID" NUMBER, 
	"CREATED_DATE" DATE, 
	"MODIFICATION_DATE" DATE, 
	"MOP_LST5" VARCHAR2(20), 
	"MOP_FST5" VARCHAR2(20), 
	"MOP_LST_TRIM" VARCHAR2(20), 
	"DEFOLT" NUMBER, 
	"STATUS_ID" NUMBER, 
	"MOP_DELAY" VARCHAR2(500), 
	"RP_DEFOLT_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_DEFOLT_PERSON_ID" ON "ODS"."PKK_DEFOLT" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_DEFOLT_REQUEST_ID" ON "ODS"."PKK_DEFOLT" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE TRIGGER "ODS"."TRG_PKK_PERSON_COLLAPSED" BEFORE INSERT ON ODS.PKK_PERSON_COLLAPSED 
FOR EACH ROW 
BEGIN
  PR$UPD_P_OBJECTS_ID_IN_PKK(:NEW.CLONE_PERSON_ID, :NEW.TARGET_PERSON_ID);
END;
ALTER TRIGGER "ODS"."TRG_PKK_PERSON_COLLAPSED" ENABLE;

  CREATE GLOBAL TEMPORARY TABLE "SNAUSER"."SNA_REQUEST_NODE_ROUTES_TEMP" 
   (	"SRC_REQUEST_ID" NUMBER, 
	"SRC_OBJECTS_ID" NUMBER, 
	"SNA_REQUEST_DATE" DATE, 
	"USER_SNA" VARCHAR2(100) DEFAULT '-', 
	"DATE_UPD" TIMESTAMP (6) WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"OBJECTS_ID" NUMBER, 
	"OBJECTS_ID_REL" NUMBER, 
	"ROOT_PERS" NUMBER, 
	"ROOT_PERS_REL" NUMBER, 
	"N1" VARCHAR2(300), 
	"T1" VARCHAR2(30), 
	"AKT1" NUMBER, 
	"DT1" DATE, 
	"N2" VARCHAR2(300), 
	"T2" VARCHAR2(30), 
	"AKT2" NUMBER, 
	"DT2" DATE, 
	"N3" VARCHAR2(400), 
	"T3" VARCHAR2(30), 
	"AKT3" NUMBER, 
	"DT3" DATE, 
	"N4" VARCHAR2(500), 
	"T4" VARCHAR2(30), 
	"AKT4" NUMBER, 
	"DT4" DATE, 
	"N5" VARCHAR2(300), 
	"T5" VARCHAR2(30), 
	"AKT5" NUMBER, 
	"DT5" DATE, 
	"ROUTE_GRAPH" VARCHAR2(100), 
	"ATTRIBUTES" VARCHAR2(1000), 
	"LEVEL_NODE" NUMBER DEFAULT 1
   ) ON COMMIT DELETE ROWS ;

  CREATE TABLE "SNAUSER"."SNA_USER_REG" 
   (	"DATE_CREATE" DATE DEFAULT SYSDATE, 
	"ID" NUMBER, 
	"FIO" VARCHAR2(400), 
	"LOGIN" VARCHAR2(50), 
	"USERGROUP" VARCHAR2(200) DEFAULT '-', 
	"EMAIL" VARCHAR2(400), 
	"DATE_MOD" VARCHAR2(20) DEFAULT SYSDATE, 
	"ALLOW_ONLINE" NUMBER DEFAULT 1, 
	"ALLOW_TEST" NUMBER DEFAULT 0, 
	"LAST_REQUEST_DATE_SNA" DATE, 
	"LOGIN_AKT" NUMBER DEFAULT 0, 
	"STATUS" VARCHAR2(200), 
	"AREA" VARCHAR2(200)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_LOG_CALL_PROC_TODAY" ("ID", "PROC_NAME", "PROC_DATE_START", "PROC_DATE_END", "PROC_DURATION_TIME", "TARGET_TABLE", "MSG_ERROR", "PROC_RESULT", "COUNT_REC", "OBJECTS_ID", "ADD_INFO") AS 
  SELECT "ID","PROC_NAME","PROC_DATE_START","PROC_DATE_END","PROC_DURATION_TIME","TARGET_TABLE","MSG_ERROR","PROC_RESULT","COUNT_REC","OBJECTS_ID","ADD_INFO" FROM ODS.LOG_CALL_PROC WHERE PROC_DATE_START>SYSDATE-1 ORDER BY PROC_DATE_START DESC;

  CREATE TABLE "ODS"."QUERY_FOR_PKK_ADR" 
   (	"OBJECTS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "SNAUSER"."I_SNA_REQUEST_HIS_DATE_BEG_LOG" ON "SNAUSER"."SNA_REQUEST_HISTORY" ("SNA_DATE_BEGIN", "LOGIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE TABLE "ODS"."CUSTLOG" 
   (	"ELAPSED_CENTISECONDS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."Q_FOR_PKK_WORKS_RNK" 
   (	"OBJECTS_ID" NUMBER, 
	"RW" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "SNAUSER"."I_SNA_RNR_SRC_OID_USER_LEVEL" ON "SNAUSER"."SNA_REQUEST_NODE_ROUTES" ("SRC_OBJECTS_ID", "USER_SNA", "LEVEL_NODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SNAUSER" ;

  CREATE INDEX "ODS"."I_AH_ADR_ID_TYPE_RANK" ON "ODS"."PKK_ADDRESS_HISTORY" ("ADDRESS_ID", "OBJECTS_TYPE", "ADDRESS_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE TABLE "ODS"."Q_FOR_PKK_OB_ADR" 
   (	"ADDRESS_ID" NUMBER, 
	"RW" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_AH_OB_ID_TYPE_RANK" ON "ODS"."PKK_ADDRESS_HISTORY" ("OBJECTS_ID", "OBJECTS_TYPE", "ADDRESS_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE INDEX "ODS"."I_PKK_PHONES_PHONE_TYPE_RANK" ON "ODS"."PKK_PHONES" ("PHONE", "OBJECTS_TYPE", "PHONES_RANK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ODS" ;

  CREATE OR REPLACE FORCE VIEW "ODS"."VIEW_DETAIL_WORKS_INFO" ("OBJECTS_ID", "WORKS_SALARY", "WORKS_AKT", "WORKS_LAST", "ORG_NAME", "WORK_POSITION", "WORKS_CREATED", "MODIFICATION_DATE", "FIO_DR", "FIO_AKT", "FIO_DATE") AS 
  SELECT wor.OBJECTS_ID
      ,wor.WORKS_SALARY
      ,wor.WORKS_AKT
      ,wor.WORKS_LAST
      ,wor.ORG_NAME
      ,wor.WORKS_POST_NAME AS WORK_POSITION
      ,TO_CHAR(wor.WORKS_CREATED, 'dd.mm.yyyy') AS WORKS_CREATED
      ,TO_CHAR(wor.MODIFICATION_DATE, 'dd.mm.yyyy') AS MODIFICATION_DATE
      ,per.FIO4SEARCH||' '||TO_CHAR(per.BIRTH, 'dd.mm.yyyy') AS FIO_DR
			,per.FIO_AKT
      ,TO_CHAR(COALESCE(per.MODIFICATION_DATE, per.FIO_CREATED), 'dd.mm.yyyy') AS FIO_DATE
    FROM ODS.PKK_WORKS_INFO wor
		LEFT JOIN ODS.PKK_PERSON_INFO per
			ON wor.OBJECTS_ID=per.OBJECTS_ID
    --WHERE wor.OBJECTS_ID=22477470
    ORDER BY wor.WORKS_RANK;
